{"version":3,"sources":["webpack:///./src/components/Jumbotron.tsx","webpack:///./src/pages/boarding.tsx","webpack:///./node_modules/gatsby-theme-aoi/src/layouts/TabPageLayout/index.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/layout/TabLayout.tsx","webpack:///./src/components/TextSpan.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","height","overflow","position","jumbotronBg","image","backgroundColor","palette","type","grey","secondary","light","backgroundImage","undefined","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","footer","title","classes","className","variant","component","gutterBottom","TakeOff","data","albums","others","notSpitz","console","log","tabs","edges","map","node","key","id","tunes","tune","index","TabPageLayout","children","maxWidth","disablePaddingTop","disableGutters","props","background","paper","up","divider","paddingBottom","SectionDivider","Section","TabLayout","tabSticky","componentViewports","BottomNav","marginRight","TextSpan"],"mappings":"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","file":"component---src-pages-boarding-tsx-6cb0262a1e180a293f6b.js","sourcesContent":["import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  image?: string;\n}\nconst height = 240;\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    root: {\n      height,\n      overflow: 'hidden',\n      position: 'relative',\n    },\n    jumbotronBg: ({ image }) => ({\n      height: '100%',\n      backgroundColor: !image && theme.palette.type === 'light' ? theme.palette.secondary.light : theme.palette.grey[700],\n      backgroundImage: image ? `url(${image})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: image ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: image ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: {\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\ninterface Props {\n  header?: React.ReactNode;\n  title: React.ReactNode;\n  footer?: React.ReactNode;\n  image?: string;\n}\n\nfunction Jumbotron({ header, footer, title, image }: Props) {\n  const classes = useStyles({ image });\n  return (\n    <div className={classes.root}>\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        {header ? <Typography variant=\"subtitle2\">{header}</Typography> : null}\n        <Typography variant=\"h5\" component=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {footer ? <Typography variant=\"subtitle2\">{footer}</Typography> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from '../layout/TabLayout';\nimport Jumbotron from '../components/Jumbotron';\nimport Section, { SectionDivider } from '../components/Section';\nimport TextSpan from '../components/TextSpan';\nimport { BoardingQuery } from '../../graphql-types';\n\nfunction TakeOff({ data }: PageProps<BoardingQuery>) {\n  const { albums, others, notSpitz } = data;\n  console.log(others, notSpitz);\n  return (\n    <Layout title=\"漫遊前の一曲\" tabs={<div />}>\n      <Jumbotron title=\"漫遊前の一曲\" />\n      <SectionDivider />\n      <Section>\n        {albums.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Typography variant=\"h6\">{node.title}</Typography>\n            {node.tunes.map((tune) => (\n              <div key={tune.id}>\n                <Typography variant=\"body1\">\n                  <TextSpan>{tune.index}.</TextSpan>\n                  <TextSpan>{tune.title}</TextSpan>\n                </Typography>\n              </div>\n            ))}\n          </div>\n        ))}\n      </Section>\n    </Layout>\n  );\n}\n\nexport default TakeOff;\n\nexport const query = graphql`\n  query Boarding {\n    albums: allSpitzAlbum(filter: { albumIdNum: { lte: 100 } }) {\n      edges {\n        node {\n          id\n          albumIdNum\n          title\n          year\n          tunes {\n            id\n            index\n            title\n          }\n        }\n      }\n    }\n    others: allSpitzAlbum(filter: { albumIdNum: { gte: 100 } }) {\n      edges {\n        node {\n          id\n          albumIdNum\n          title\n          year\n          tunes {\n            id\n            index\n            title\n          }\n        }\n      }\n    }\n    notSpitz: allTunes(corner: \"漫遊前の一曲\") {\n      title\n    }\n  }\n`;\n","import * as React from 'react';\nimport Layout, { LayoutProps } from '../../layout';\n\ninterface Props extends LayoutProps {\n  tabSticky?: boolean;\n}\n\nfunction TabPageLayout({ children, maxWidth = 'xl', disablePaddingTop = true, disableGutters = true, ...props }: Props) {\n  return (\n    <Layout maxWidth={maxWidth} disablePaddingTop={disablePaddingTop} disableGutters={disableGutters} {...props}>\n      {children}\n    </Layout>\n  );\n}\n\nexport default TabPageLayout;\n","import * as React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      background: theme.palette.background.paper,\n      [theme.breakpoints.up('md')]: {\n        padding: theme.spacing(0, 1),\n      },\n    },\n    divider: {\n      paddingBottom: theme.spacing(2),\n    },\n  })\n);\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Section({ children }: Props) {\n  const classes = useStyles();\n  return <div className={classes.root}>{children}</div>;\n}\n\nexport default Section;\n\nexport function SectionDivider() {\n  const classes = useStyles();\n  return <div className={classes.divider} />;\n}\n","import * as React from 'react';\nimport Layout from 'gatsby-theme-aoi/src/layouts/TabPageLayout';\nimport { LayoutProps } from 'gatsby-theme-aoi/src/layout';\n\nfunction TabLayout({\n  children,\n  tabs,\n  ...props\n}: Omit<LayoutProps, 'tabSticky' | 'disableGutters' | 'componentViewports' | 'tabs'> & Required<Pick<LayoutProps, 'tabs'>>) {\n  return (\n    <Layout tabSticky disableGutters componentViewports={{ BottomNav: false }} {...props} tabs={tabs}>\n      {children}\n    </Layout>\n  );\n}\n\nexport default TabLayout;\n","import * as React from 'react';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(0.5),\n      display: 'inline-block',\n    },\n  })\n);\n\ntype Props = {\n  children?: React.ReactNode | null;\n} & Exclude<TypographyProps, 'children'>;\n\nfunction TextSpan({ children, ...props }: Props) {\n  const classes = useStyles();\n  if (!children) return null;\n  return (\n    <Typography className={classes.root} component=\"span\" {...props} variant={props.variant ?? 'inherit'}>\n      {children}\n    </Typography>\n  );\n}\n\nexport default TextSpan;\n"],"sourceRoot":""}