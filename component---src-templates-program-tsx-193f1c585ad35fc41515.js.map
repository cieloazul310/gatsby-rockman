{"version":3,"sources":["webpack:///./src/templates/program.tsx","webpack:///./src/utils/removeMultiple.ts"],"names":["BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","ProgramTemplate","data","pageContext","program","nonNullable","previous","next","initialIndex","artists","playlist","removeMultiple","map","tune","artist","item","name","tabs","key","title","id","variant","filter","element","Boolean","drawerContents","index","onChangeIndex","fields","slug","navigate","resistance","arr","getVal","vals","set","Set","Array","from","val","indexOf"],"mappings":"8FAAA,oNAkBMA,EAA6BC,uBAAaC,KAiEjCC,UA1Df,YAAoE,MAAzCC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,YACzBC,EAAUC,YAAYH,EAAKE,SACzBE,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KACZC,EAAeF,EAAW,EAAI,EAU9BG,EAAUL,EAAQM,SACpBC,YACEP,EAAQM,SAASE,KAAI,SAACC,GAAD,OAAUA,aAAV,EAAUA,EAAMC,WACrC,SAACC,GAAD,OAAUA,aAAV,EAAUA,EAAMC,QAElB,GAEEC,EAAO,CACXX,EAAW,gBAAC,IAAD,CAAoBY,IAAKZ,EAASa,MAAOJ,KAAMT,IAAe,KACzE,uBAAKY,IAAI,QACP,gBAAC,IAAD,CAAmBd,QAASA,IAC5B,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,qCACGA,EAAQM,gBADX,aACG,EAAkBE,KAAI,SAACC,GAAD,OACrB,gBAAC,IAAD,CAAMK,IAAKL,aAAF,EAAEA,EAAMO,GAAIP,KAAMA,SAIjC,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAqBM,MAAM,WAAWV,QAASA,KAEjD,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAgBY,QAAQ,UAAUlB,YAAaA,MAGnDI,EAAO,gBAAC,IAAD,CAAoBW,IAAKX,EAAKY,MAAOJ,KAAMR,IAAW,MAC7De,QAAO,SAACC,GAAD,OAAqCC,QAAQD,MACtD,OACE,gBAAC,IAAD,CAAQJ,MAAOf,aAAF,EAAEA,EAASe,MAAOM,eAAgB,gBAAC,IAAD,CAAkBtB,YAAaA,EAAakB,QAAQ,aACjG,gBAACvB,EAAD,CAA4B4B,MAAOlB,EAAcmB,cA3C3B,SAACD,GAAkB,QACvCA,IAAUlB,IACVD,SAAQA,GAAJ,UAAIA,EAAMqB,cAAV,OAAI,EAAcC,MAAQH,IAAUlB,EAAe,GACzDsB,mBAASvB,EAAKqB,OAAOC,MAEnBvB,SAAYA,GAAJ,UAAIA,EAAUsB,cAAd,OAAI,EAAkBC,MAAQH,IAAUlB,EAAe,GACjEsB,mBAASxB,EAASsB,OAAOC,QAqC0DE,YAAU,GAC1Fd,GAEH,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAAC,IAAD,U,kCC7EO,SAASN,EAAkBqB,EAAUC,GAClD,IAAMC,EAAOF,EAAIpB,IAAIqB,GACfE,EAAM,IAAIC,IAAIF,GACpB,OAAOG,MAAMC,KAAKH,GAAKvB,KAAI,SAAC2B,GAAD,OAASP,EAAIE,EAAKM,QAAQD,OAHvD","file":"component---src-templates-program-tsx-193f1c585ad35fc41515.js","sourcesContent":["import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from '../layout';\nimport Section, { SectionDivider } from '../components/Section';\nimport { ProgramPageHeader } from '../components/PageHeader';\nimport Tune from '../components/Tune';\nimport ArtistItemContainer from '../components/ArtistItemContainer';\nimport PageNavigation from '../components/PageNavigation';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport NavigationBox from '../components/NavigationBox';\nimport { AdBasic } from '../components/Ads';\nimport { ProgramTonarinoTab } from '../components/TonarinoTab';\nimport removeMultiple from '../utils/removeMultiple';\nimport nonNullable from '../utils/nonNullable';\nimport { ProgramTemplateQuery, SitePageContext } from '../../graphql-types';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\ninterface Props {\n  data: ProgramTemplateQuery;\n  pageContext: SitePageContext;\n}\n\nfunction ProgramTemplate({ data, pageContext }: Props): JSX.Element {\n  const program = nonNullable(data.program);\n  const { previous, next } = pageContext;\n  const initialIndex = previous ? 1 : 0;\n  const handleChangeIndex = (index: number) => {\n    if (index === initialIndex) return;\n    if (next && next?.fields?.slug && index === initialIndex + 1) {\n      navigate(next.fields.slug);\n    }\n    if (previous && previous?.fields?.slug && index === initialIndex - 1) {\n      navigate(previous.fields.slug);\n    }\n  };\n  const artists = program.playlist\n    ? removeMultiple(\n        program.playlist.map((tune) => tune?.artist),\n        (item) => item?.name\n      )\n    : [];\n\n  const tabs = [\n    previous ? <ProgramTonarinoTab key={previous.title} item={previous} /> : null,\n    <div key=\"main\">\n      <ProgramPageHeader program={program} />\n      <SectionDivider />\n      <Section>\n        <div>\n          {program.playlist?.map((tune) => (\n            <Tune key={tune?.id} tune={tune} />\n          ))}\n        </div>\n      </Section>\n      <SectionDivider />\n      <AdBasic />\n      <SectionDivider />\n      <Section>\n        <ArtistItemContainer title=\"登場アーティスト\" artists={artists} />\n      </Section>\n      <SectionDivider />\n      <Section>\n        <PageNavigation variant=\"program\" pageContext={pageContext} />\n      </Section>\n    </div>,\n    next ? <ProgramTonarinoTab key={next.title} item={next} /> : null,\n  ].filter((element): element is JSX.Element => Boolean(element));\n  return (\n    <Layout title={program?.title} drawerContents={<DrawerNavigation pageContext={pageContext} variant=\"program\" />}>\n      <BindKeyboardSwipeableViews index={initialIndex} onChangeIndex={handleChangeIndex} resistance>\n        {tabs}\n      </BindKeyboardSwipeableViews>\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default ProgramTemplate;\n\nexport const query = graphql`\n  query ProgramTemplate($slug: String!) {\n    program(fields: { slug: { eq: $slug } }) {\n      id\n      date(formatString: \"YYYY-MM-DD\")\n      subtitle\n      title\n      week\n      year\n      guests\n      categories\n      fields {\n        image\n      }\n      playlist {\n        artist {\n          name\n          image\n          programCount\n          tunesCount\n          slug\n        }\n        corner\n        id\n        index\n        indexInWeek\n        label\n        kana\n        nation\n        selector\n        title\n        year\n        week\n        youtube\n      }\n    }\n  }\n`;\n","export default function removeMultiple<T>(arr: T[], getVal: (item: T) => unknown): T[] {\n  const vals = arr.map(getVal);\n  const set = new Set(vals);\n  return Array.from(set).map((val) => arr[vals.indexOf(val)]);\n}\n"],"sourceRoot":""}