{"version":3,"sources":["webpack:///./src/utils/graphql-hooks/useAllSelectors.tsx"],"names":["useAllSelectors","data","React","allProgram","group","filter","fieldValue","map","edges","reduce","accum","curr","d","node","id","indexOf","removeMultiple","playlist","tune","selector","sort","a","b","length"],"mappings":"69BAUO,SAASA,IACd,IAAMC,EAAO,OAoCb,OAAOC,WAAc,WACnB,OAAOD,EAAKE,WAAWC,MACpBC,QAAO,SAAAD,GAAK,MAAyB,WAArBA,EAAME,cACtBC,KAAI,SAAAH,GACH,IAAMI,EAqBd,SAAwBA,GACtB,OAAOA,EAAMC,QAAO,SAACC,EAAOC,GAC1B,OAAID,EAAMH,KAAI,SAAAK,GAAC,OAAIA,EAAEC,KAAKC,MAAIC,QAAQJ,EAAKE,KAAKC,KAAO,EAAUJ,EACjE,YAAWA,GAAX,CAAkBC,MACjB,IAzBiBK,CAAeZ,EAAMI,OACnC,MAAO,CACLF,WAAYF,EAAME,WAClBE,QACAS,SAAUT,EAAMC,QAAmB,SAACC,EAAOC,GAAR,kBAC9BD,GAD8B,EAE9BC,EAAKE,KAAKI,SAASZ,QAAO,SAAAa,GAAI,OAAIA,EAAKC,WAAaf,EAAME,kBAC5D,QAGNc,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEL,SAASM,OAASF,EAAEJ,SAASM,QAAYD,EAAEd,MAAMe,OAAWF,EAAEb,MAAMe,YACxF,M","file":"59740bafa24b1c293d1c0513d0fd7f7fd982d206-11c545ae911d6ef5ea65.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllSelectorsQuery, Program, ProgramPlaylist } from '../../../graphql-types';\n\nexport interface CategoryItem {\n  fieldValue: string;\n  edges: Edge[];\n  playlist: Playlist[];\n}\n\nexport function useAllSelectors(): CategoryItem[] {\n  const data = useStaticQuery<AllSelectorsQuery>(graphql`\n    query AllSelectors {\n      allProgram(\n        filter: {\n          playlist: { elemMatch: { selector: { ne: \"草野マサムネ\" } } }\n        }\n      ) {\n        group(field: playlist___selector) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              fields {\n                slug\n              }\n              playlist {\n                id\n                indexInWeek\n                title\n                artist\n                year\n                nation\n                selector\n                youtube\n                corner\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return React.useMemo(() => {\n    return data.allProgram.group\n      .filter(group => group.fieldValue !== '草野マサムネ')\n      .map(group => {\n        const edges = removeMultiple(group.edges);\n        return {\n          fieldValue: group.fieldValue,\n          edges,\n          playlist: edges.reduce<Playlist[]>((accum, curr) => [\n            ...accum,\n            ...curr.node.playlist.filter(tune => tune.selector === group.fieldValue)\n          ], [])\n        };\n      })\n      .sort((a, b) => (b.playlist.length - a.playlist.length) || (b.edges.length) - (a.edges.length));\n  }, []);\n}\n\ntype Edge = {\n  node: Pick<Program, 'id' | 'week' | 'date' | 'title' | 'fields'> & {\n    playlist?: Playlist[];\n  };\n};\ntype Playlist = Pick<ProgramPlaylist, 'id' | 'title' | 'artist' | 'year' | 'selector' | 'youtube'>[];\n\nfunction removeMultiple(edges: Edge[]): Edge[] {\n  return edges.reduce((accum, curr) => {\n    if (accum.map(d => d.node.id).indexOf(curr.node.id) >= 0) return accum;\n    return [...accum, curr];\n  }, []);\n}\n"],"sourceRoot":""}