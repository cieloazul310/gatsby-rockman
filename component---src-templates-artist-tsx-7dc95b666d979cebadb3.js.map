{"version":3,"sources":["webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/templates/artist.tsx"],"names":["TunesByProgram","program","filter","variant","component","week","date","gutterBottom","to","fields","slug","title","playlist","map","tune","key","id","ArtistTemplate","data","pageContext","console","log","previous","next","artist","maxWidth","allProgram","edges","index","node","query"],"mappings":"2FAAA,oDA4BeA,IAjBf,YAAiE,IAAvCC,EAAuC,EAAvCA,QAAuC,IAA9BC,cAA8B,MAArB,kBAAM,GAAe,EAC/D,OACE,2BACE,gBAAC,IAAD,CAAYC,QAAQ,YAAYC,UAAU,QAA1C,IACIH,EAAQI,KADZ,KACoBJ,EAAQK,MAG5B,gBAAC,IAAD,CAAYH,QAAQ,KAAKC,UAAU,KAAKG,cAAY,GAClD,gBAAC,IAAD,CAASC,GAAIP,EAAQQ,OAAOC,MAAOT,EAAQU,QAE5CV,EAAQW,SAASV,OAAOA,GAAQW,KAAI,SAAAC,GAAI,OACvC,gBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIF,KAAMA,U,kCCtBtC,iGAwCeG,UAxBf,YAAsD,IAA5BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YAC9BC,QAAQC,IAAIF,GACZC,QAAQC,IAAIH,GAFwC,IAG5CI,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,gBAAC,IAAD,CAAQZ,MAAOQ,EAAYK,OAAQC,SAAS,MAC1C,2BACGP,EAAKQ,WAAWC,MAAMd,KAAI,WAAWe,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACzB,gBAAC,IAAD,CACEd,IAAKa,EACL3B,QAAS4B,EACT3B,OAAQ,SAAAY,GAAI,OAAIA,EAAKU,SAAWL,EAAYK,aAG/CF,EACC,gBAAC,IAAD,CAASd,GAAE,WAAac,EAAS,GAAtB,KAA8BA,EAAS,IAChD,KACHC,EAAO,gBAAC,IAAD,CAASf,GAAE,WAAae,EAAK,GAAlB,KAA0BA,EAAK,IAAgB,QAQnE,IAAMO,EAAQ","file":"component---src-templates-artist-tsx-7dc95b666d979cebadb3.js","sourcesContent":["import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { AppLink } from 'gatsby-theme-typescript-material-ui/src/components/AppLink';\nimport TuneCard from './TuneCard';\nimport { Program, ProgramPlaylist } from '../../graphql-types';\n\ninterface Props {\n  program: Pick<Program, 'week' | 'date' | 'fields' | 'title' | 'playlist'>;\n  filter?: (tune?: ProgramPlaylist) => boolean;\n}\n\nfunction TunesByProgram({ program, filter = () => true }: Props) {\n  return (\n    <div>\n      <Typography variant=\"subtitle2\" component=\"span\">\n        第{program.week}回 {program.date}\n      </Typography>\n\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        <AppLink to={program.fields.slug}>{program.title}</AppLink>\n      </Typography>\n      {program.playlist.filter(filter).map(tune => (\n        <TuneCard key={tune.id} tune={tune} />\n      ))}\n    </div>\n  );\n}\n\nexport default TunesByProgram;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'gatsby-theme-typescript-material-ui/src/layout';\nimport { AppLink } from 'gatsby-theme-typescript-material-ui/src/components/AppLink';\nimport TunesByProgram from '../components/TunesByProgram';\nimport { ArtistTemplateQuery, Program } from '../../graphql-types';\n\ninterface Props {\n  data: ArtistTemplateQuery;\n  pageContext: {\n    artist: string;\n    previous: [string, string, string, Program[]];\n    next: [string, string, string, Program[]];\n  };\n}\n\nfunction ArtistTemplate({ data, pageContext }: Props) {\n  console.log(pageContext);\n  console.log(data);\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout title={pageContext.artist} maxWidth=\"md\">\n      <div>\n        {data.allProgram.edges.map(({ node }, index) => (\n          <TunesByProgram\n            key={index}\n            program={node}\n            filter={tune => tune.artist === pageContext.artist}\n          />\n        ))}\n        {previous ? (\n          <AppLink to={`/artist/${previous[0]}/`}>{previous[0]}</AppLink>\n        ) : null}\n        {next ? <AppLink to={`/artist/${next[0]}/`}>{next[0]}</AppLink> : null}\n      </div>\n    </Layout>\n  );\n}\n\nexport default ArtistTemplate;\n\nexport const query = graphql`\n  query ArtistTemplate($artist: String!) {\n    allProgram(\n      filter: { playlist: { elemMatch: { artist: { glob: $artist } } } }\n      sort: { fields: week, order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          categories\n          fields {\n            slug\n          }\n          guests\n          subtitle\n          week\n          year\n          playlist {\n            artist\n            corner\n            id\n            indexInWeek\n            index\n            kana\n            label\n            name\n            nation\n            producer\n            selector\n            title\n            week\n            year\n            youtube\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}