{"version":3,"sources":["webpack:///./src/components/JunkList.tsx","webpack:///./src/components/SimpleNationBar.tsx","webpack:///./src/components/SimpleYearsBar.tsx","webpack:///./src/components/ProgramSummary.tsx","webpack:///./src/pages/index.tsx"],"names":["JunkList","program","playlist","map","tune","index","key","id","useStyles","makeStyles","theme","createStyles","root","fontSize","fontWeight","typography","fontWeightBold","bar","height","display","overflow","borderRadius","barInner","justifyContent","transition","transitions","create","flex","SimpleNationBar","classes","useTheme","isDark","palette","type","nations","React","nation","reduce","accum","curr","d","indexOf","filter","length","sort","a","b","className","Tooltip","arrow","title","style","width","Math","round","background","getNationColor","color","getContrastText","paddingTop","spacing","textAlign","backgroundColor","grey","borderRight","SimpleYearsBar","years","year","existedIndex","floor","padding","flexDirection","summaryHeader","chip","margin","titleLink","text","primary","ProgramSummary","enableLink","Typography","variant","component","week","date","gutterBottom","AppLink","to","fields","slug","subtitle","categories","category","Chip","label","icon","onClick","navigate","state","guests","guest","selector","IndexPage","props","console","log","recentProgram","allProgram","edges","node","maxWidth"],"mappings":"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","file":"component---src-pages-index-tsx-5dee321d344e61256a65.js","sourcesContent":["import * as React from 'react';\n//import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ProgramSummary from './ProgramSummary';\nimport TuneCard from './TuneCard';\nimport { Program } from '../../graphql-types';\n\n//const useStyles = makeStyles((theme: Theme) => createStyles({}));\n\ninterface Props {\n  program: Exclude<Partial<Program>, 'children' | 'internal'>;\n}\n\nfunction JunkList({ program }: Props) {\n  //const classes = useStyles();\n  return (\n    <div>\n      <ProgramSummary program={program} />\n      {program.playlist.map((tune, index) => (\n        <TuneCard tune={tune} key={tune.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default JunkList;\n","import * as React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  useTheme,\n} from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport getNationColor from '../utils/getNationColor';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: '.5em',\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    bar: {\n      height: 16,\n      display: 'flex',\n      overflow: 'hidden',\n      borderRadius: 8,\n    },\n    barInner: {\n      display: 'flex',\n      justifyContent: 'center',\n      transition: theme.transitions.create(['width', 'background']),\n      '&:last-child': {\n        flex: 1,\n      },\n    },\n  })\n);\n\ninterface Props {\n  playlist: Pick<ProgramPlaylist, 'nation'>[];\n}\n\nfunction SimpleNationBar({ playlist }: Props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDark = theme.palette.type === 'dark';\n  const nations = React.useMemo(\n    () =>\n      playlist\n        .map(tune => tune.nation)\n        .reduce(\n          (accum, curr) =>\n            accum.map(d => d[0]).indexOf(curr) < 0\n              ? [\n                  ...accum,\n                  [curr, playlist.filter(d => d.nation === curr).length],\n                ]\n              : [...accum],\n          []\n        )\n        .sort((a, b) => b[1] - a[1]),\n    [playlist]\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.bar}>\n        {nations.map((nation, index) => (\n          <Tooltip key={index} arrow title={`${nation[1]}曲`}>\n            <div\n              key={index}\n              className={classes.barInner}\n              style={{\n                width: `${Math.round((nation[1] * 100) / playlist.length)}%`,\n                background: getNationColor(nation[0], isDark),\n                color: theme.palette.getContrastText(\n                  getNationColor(nation[0], isDark)\n                ),\n              }}\n            >\n              <span>{nation[0]}</span>\n            </div>\n          </Tooltip>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SimpleNationBar;\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: '.5em',\n      fontWeight: theme.typography.fontWeightBold,\n      paddingTop: theme.spacing(1),\n    },\n    bar: {\n      height: 16,\n      display: 'flex',\n      overflow: 'hidden',\n      borderRadius: 8,\n    },\n    barInner: {\n      display: 'flex',\n      justifyContent: 'center',\n      textAlign: 'center',\n      backgroundColor:\n        theme.palette.type === 'dark'\n          ? theme.palette.grey[700]\n          : theme.palette.grey[300],\n      color:\n        theme.palette.type === 'dark'\n          ? theme.palette.grey[300]\n          : theme.palette.grey[700],\n      transition: theme.transitions.create(['width', 'background']),\n      borderRight: '.5px solid silver',\n      '&:last-child': {\n        borderRight: 'none',\n        flex: 1,\n      },\n    },\n  })\n);\n\ninterface Props {\n  playlist: Pick<ProgramPlaylist, 'year'>[];\n}\n\nfunction SimpleYearsBar({ playlist }: Props) {\n  const classes = useStyles();\n  const years = React.useMemo(\n    () =>\n      playlist\n        .map(tune => tune.year)\n        .reduce((accum, curr) => {\n          // [[197, 1], [198, 2]]\n          const existedIndex = accum\n            .map(d => d[0])\n            .indexOf(Math.floor(curr / 10));\n          if (existedIndex < 0) {\n            return [...accum, [Math.floor(curr / 10), 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => a[0] - b[0])\n        .map(d => [d[0] * 10, d[1]]),\n    [playlist]\n  );\n  return (\n    <div className={classes.root}>\n      <div className={classes.bar}>\n        {years.map((years, index) => (\n          <Tooltip key={index} arrow title={`${years[1]}曲`}>\n            <div\n              key={index}\n              className={classes.barInner}\n              style={{\n                width: `${Math.round((years[1] * 100) / playlist.length)}%`,\n              }}\n            >\n              <span>{years[0]}s</span>\n            </div>\n          </Tooltip>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SimpleYearsBar;\n","import * as React from 'react';\nimport { navigate } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { CategoryIcon, SelectorIcon } from '../icons';\nimport AppLink from 'gatsby-theme-typescript-material-ui/src/components/AppLink';\nimport SimpleNationBar from './SimpleNationBar';\nimport SimpleYearsBar from './SimpleYearsBar';\nimport { Program } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 280,\n      padding: `${theme.spacing(6)}px 0`,\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    summaryHeader: {\n      flex: 1,\n    },\n    chip: {\n      margin: `0 ${theme.spacing(0.5)}px ${theme.spacing(1)}px 0`,\n    },\n    titleLink: {\n      color: theme.palette.text.primary,\n    },\n  })\n);\n\ninterface Props {\n  program: Exclude<Partial<Program>, 'children' | 'internal'>;\n  enableLink?: boolean;\n}\n\nfunction ProgramSummary({ program, enableLink = false }: Props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.summaryHeader}>\n        <Typography variant=\"subtitle2\" component=\"span\">\n          第{program.week}回 {program.date}\n        </Typography>\n        {enableLink ? (\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            <AppLink to={program.fields.slug} className={classes.titleLink}>\n              {program.title}\n            </AppLink>\n          </Typography>\n        ) : (\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            {program.title}\n          </Typography>\n        )}\n        {program.subtitle ? (\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {program.subtitle}\n          </Typography>\n        ) : null}\n      </div>\n      <div>\n        {program.categories && program.categories.length\n          ? program.categories.map(category => (\n              <Chip\n                className={classes.chip}\n                key={category}\n                label={category}\n                color=\"primary\"\n                icon={<CategoryIcon />}\n                onClick={() => {\n                  navigate('/categories/', {\n                    state: {\n                      category,\n                    },\n                  });\n                }}\n              />\n            ))\n          : null}\n        {program.guests && program.guests.length\n          ? program.guests.map(guest => (\n              <Chip\n                className={classes.chip}\n                key={guest}\n                label={guest}\n                icon={<SelectorIcon />}\n                onClick={() => {\n                  navigate('/selectors/', {\n                    state: {\n                      selector: guest,\n                    },\n                  });\n                }}\n              />\n            ))\n          : null}\n      </div>\n      <SimpleNationBar playlist={program.playlist} />\n      <SimpleYearsBar playlist={program.playlist} />\n    </div>\n  );\n}\nexport default ProgramSummary;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'gatsby-theme-typescript-material-ui/src/layout';\nimport JunkList from '../components/JunkList';\nimport { IndexQuery } from '../../graphql-types';\n\ninterface Props {\n  //location: LocationWithState;\n}\n\nfunction IndexPage(props: Props) {\n  console.log(props);\n  const data = useStaticQuery<IndexQuery>(graphql`\n    query Index {\n      allProgram(sort: { fields: week, order: DESC }, limit: 1) {\n        edges {\n          node {\n            id\n            title\n            week\n            date(formatString: \"YYYY-MM-DD\")\n            subtitle\n            year\n            categories\n            guests\n            playlist {\n              artist\n              corner\n              id\n              index\n              indexInWeek\n              kana\n              label\n              producer\n              nation\n              selector\n              title\n              week\n              year\n              youtube\n            }\n          }\n        }\n      }\n    }\n  `);\n  const recentProgram = data.allProgram.edges[0].node;\n\n  return (\n    <Layout maxWidth=\"md\">\n      <Typography variant=\"h5\" component=\"h2\">\n        最新のプレイリスト\n      </Typography>\n      <JunkList program={recentProgram} />\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}