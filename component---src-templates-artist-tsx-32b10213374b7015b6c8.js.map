{"version":3,"sources":["webpack:///./src/utils/sortByYomi.ts","webpack:///./src/components/Jumbotron.tsx","webpack:///./src/components/DrawerNavigation.tsx","webpack:///./src/utils/useSorter.tsx","webpack:///./src/utils/graphql-hooks/useAllPrograms.tsx","webpack:///./src/utils/graphql-hooks/useAllArtists.tsx","webpack:///./src/utils/graphql-hooks/useAllCategories.tsx","webpack:///./src/utils/graphql-hooks/useAllNations.tsx","webpack:///./src/utils/graphql-hooks/useAllYears.tsx","webpack:///./src/utils/graphql-hooks/useAllTunes.tsx","webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/components/LazyViewer.tsx","webpack:///./src/utils/useDividedArray.tsx","webpack:///./src/components/PageNavigation.tsx","webpack:///./src/components/RelatedArtists.tsx","webpack:///./src/templates/artist.tsx","webpack:///../node_modules/@material-ui/icons/ArrowBack.js","webpack:///../node_modules/@material-ui/icons/ArrowForward.js"],"names":["sortArtists","artists","options","sortType","sort","a","b","edges","length","sortByEdges","sortByYomi","tunes","sortByTunes","getYomi","fieldValue","kana","localeCompare","artistName","the","slice","useStyles","makeStyles","theme","createStyles","jumbotronBg","imgUrl","height","backgroundColor","palette","grey","backgroundImage","undefined","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","margin","artist","marginRight","Jumbotron","header","subtitle","title","classes","overflow","className","variant","component","gutterBottom","map","key","DrawerPageNavigation","previous","next","subheader","dense","button","to","primary","secondary","useSorter","useAppState","React","value","useAllPrograms","data","useStaticQuery","allProgram","node","img","playlist","tune","index","youtube","useAllArtists","group","item","reduce","accum","curr","d","id","indexOf","removeMultiple","nation","useArtists","limit","allArtists","useAllCategories","useCategories","fieldValues","categories","category","includes","useAllNations","nations","Array","from","Set","useSchemeNations","allNations","schemeNations","schemed","notSchemed","useAllYears","allTunes","year","parseInt","useDecades","years","forEach","Error","allYears","first","Math","floor","last","Date","getFullYear","_","i","decade","items","TunesByProgram","program","Box","py","Typography","week","date","AppLink","fields","slug","TuneCard","DummyItem","DisplayOnScreen","children","once","useInView","rootMargin","triggerOnce","ref","inView","LazyViewer","programs","divisor","dividedItems","sorter","filtered","getPlaylistLength","push","useDividedPrograms","renderItems","v","root","createNavigationProps","baseUrl","PageNavigation","pr","textAlign","GatsbyLink","pl","RelatedArtists","getRelatedArtists","Button","VirtualizedSwipeableViews","bindKeyboard","virtualize","SwipeableViews","ArtistTemplate","pageContext","loading","setLoading","tab","setTab","timer","setTimeout","navigate","clearTimeout","disableGutters","disablePaddingTop","maxWidth","componentViewports","BottomNav","drawerContents","DrawerNavigation","onChangeIndex","slideRenderer","Container","pt","ContentBasis","NavigationBox","Skeleton","width","slideCount","resistance","query","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement"],"mappings":"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","file":"component---src-templates-artist-tsx-32b10213374b7015b6c8.js","sourcesContent":["import { ArtistItem } from './graphql-hooks';\n\nexport type SortType = 'abc' | 'edges' | 'tunes';\n\ninterface SortArtistsOptions {\n  sortType?: SortType;\n  sortAsc?: boolean;\n}\n\nexport default function sortArtists(artists: ArtistItem[], options: SortArtistsOptions = {}) {\n  const sortType = options.sortType || 'abc';\n  return [...artists].sort((a, b) =>\n    sortType === 'edges'\n      ? sortByEdges(a, b) || sortByYomi(a, b)\n      : sortType === 'tunes'\n      ? sortByTunes(a, b) || sortByYomi(a, b)\n      : sortByYomi(a, b)\n  );\n}\n\nexport function sortByYomi(a: ArtistItem, b: ArtistItem) {\n  return getYomi(a.fieldValue, a.kana).localeCompare(getYomi(b.fieldValue, b.kana));\n}\n\nexport function sortByEdges(a: ArtistItem, b: ArtistItem) {\n  return -(a.edges.length - b.edges.length);\n}\n\nexport function sortByTunes(a: ArtistItem, b: ArtistItem) {\n  return -(a.tunes.length - b.tunes.length);\n}\n\nexport function getYomi(artistName: string, kana?: string) {\n  const the = artistName.slice(0, 4);\n  if (the === 'The ' || the === 'THE ' || the === 'the ') return artistName.slice(4);\n  return kana || artistName;\n}\n\nexport function encodeArtistName(artistName: string) {\n  return encodeURIComponent(artistName.replace(/[' ']+/g, '_'));\n}\n\nexport function decodeArtistName(artistName: string) {\n  return decodeURIComponent(artistName.replace(/['_']+/g, ' '));\n}\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\ninterface StyleProps {\n  height: number;\n  imgUrl?: string;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ imgUrl }) => ({\n      height: '100%',\n      backgroundColor: theme.palette.grey[700],\n      backgroundImage: imgUrl ? `url(${imgUrl})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: imgUrl ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: imgUrl ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: ({ height }) => ({\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    }),\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n    artists: {\n      margin: 0,\n      padding: 0,\n    },\n    artist: {\n      display: 'inline-block',\n      marginRight: '.6em',\n    },\n  })\n);\n\ninterface Props {\n  header?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  title: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  height?: number;\n  artists?: string[];\n  subtitle?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  imgUrl?: string;\n}\n\nfunction Jumbotron({ header, subtitle, title, artists, imgUrl, height = 300 }: Props) {\n  const classes = useStyles({ imgUrl, height });\n  return (\n    <Box height={height} overflow=\"hidden\" position=\"relative\">\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        <Typography variant=\"subtitle2\">{header}</Typography>\n        <Typography variant=\"h3\" component=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n        {artists ? (\n          <ul className={classes.artists}>\n            {artists.map((artist) => (\n              <Typography className={classes.artist} variant=\"subtitle2\" component=\"li\" key={artist}>\n                {artist}\n              </Typography>\n            ))}\n          </ul>\n        ) : null}\n      </div>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ListItemAppLink from 'gatsby-theme-aoi/src/components/ListItemAppLink';\n//import { QueriedProgram } from '../types';\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction DrawerPageNavigation({ previous, next }: Props) {\n  return (\n    <List subheader={<ListSubheader>Navigation</ListSubheader>}>\n      {previous ? (\n        <ListItemAppLink dense button to={previous.to}>\n          <ListItemIcon>\n            <ArrowBackIcon />\n          </ListItemIcon>\n          <ListItemText primary={previous.title} secondary=\"prev\" />\n        </ListItemAppLink>\n      ) : null}\n      {next ? (\n        <ListItemAppLink dense button to={next.to}>\n          <ListItemIcon>\n            <ArrowForwardIcon />\n          </ListItemIcon>\n          <ListItemText primary={next.title} secondary=\"next\" />\n        </ListItemAppLink>\n      ) : null}\n    </List>\n  );\n}\n\nexport default DrawerPageNavigation;\n","import * as React from 'react';\nimport { useAppState } from 'gatsby-theme-aoi-top-layout/src/utils/AppStateContext';\n\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllProgramQuery } from '../../../graphql-types';\n\nexport type ProgramEdge = AllProgramQuery['allProgram']['edges'][number];\n\nexport function useAllPrograms() {\n  const data = useStaticQuery<AllProgramQuery>(graphql`\n    query AllProgram {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.edges.map(({ node }) => {\n      const [img] =\n        node.playlist?.filter((tune, index) => index !== 0 && tune?.youtube && tune.youtube !== '').map((tune) => tune?.youtube) ?? [];\n      return {\n        ...node,\n        img: img ? `https://i.ytimg.com/vi/${img}/0.jpg` : null,\n      };\n    });\n  }, [data.allProgram.edges]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport sortArtists, { SortType } from '../sortByYomi';\nimport { AllArtistsQuery } from '../../../graphql-types';\n\ntype ArtistGroup = AllArtistsQuery['allProgram']['group'][number];\ntype ArtistEdge = ArtistGroup['edges'][number];\ntype ArtistTune = NonNullable<NonNullable<ArtistEdge['node']['playlist']>[number]>;\n\nexport interface ArtistItem {\n  fieldValue: string;\n  kana?: string;\n  nation: string;\n  edges: ArtistEdge[];\n  tunes: ArtistTune[];\n  img?: string;\n}\n\nexport function useAllArtists() {\n  const data = useStaticQuery<AllArtistsQuery>(graphql`\n    query AllArtists {\n      allProgram(sort: { fields: date, order: ASC }) {\n        group(field: playlist___artist) {\n          edges {\n            node {\n              id\n              playlist {\n                artist\n                kana\n                nation\n                youtube\n              }\n            }\n          }\n          fieldValue\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.group.map((item) => {\n      const edges = removeMultiple(item.edges).map(({ node }) => ({\n        ...node,\n        playlist: (node?.playlist?.filter((tune) => tune?.artist === item.fieldValue) ?? []) as ArtistTune[],\n      }));\n      const tunes = edges.reduce<ArtistTune[]>((accum, curr) => (curr.playlist ? [...accum, ...curr.playlist] : accum), []);\n      const [{ kana, nation }] = tunes;\n      const [img] = tunes\n        .filter((tune) => tune?.youtube && tune.youtube !== '')\n        .map((tune) => tune?.youtube)\n        .slice(-1);\n\n      return {\n        fieldValue: item.fieldValue ?? '',\n        kana: kana ?? undefined,\n        nation: nation ?? '',\n        edges,\n        tunes,\n        img: img ? `https://i.ytimg.com/vi/${img}/0.jpg` : undefined,\n      };\n    });\n  }, [data]);\n}\n\nfunction removeMultiple(edges: ArtistEdge[]) {\n  return edges.reduce<ArtistEdge[]>((accum, curr) => {\n    if (accum.map((d) => d.node.id).indexOf(curr.node.id) >= 0) return accum;\n    return [...accum, curr];\n  }, []);\n}\n\nexport function useArtists(sortType: SortType, limit = 0) {\n  const allArtists = useAllArtists();\n  return React.useMemo(() => {\n    return sortArtists(allArtists, { sortType }).slice(0, limit || allArtists.length);\n  }, [sortType, limit, allArtists]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllCategoriesQuery } from '../../../graphql-types';\n\nexport function useAllCategories() {\n  const data = useStaticQuery<AllCategoriesQuery>(graphql`\n    query AllCategories {\n      allProgram(sort: { fields: week, order: ASC }) {\n        group(field: categories) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              title\n              date(formatString: \"YYYY-MM-DD\")\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.group.sort((a, b) => b.edges.length - a.edges.length);\n  }, [data]);\n}\n\nexport function useCategories(fieldValues: string[]) {\n  const categories = useAllCategories();\n  return React.useMemo(() => {\n    return categories.filter((category) => category.fieldValue && fieldValues.includes(category.fieldValue));\n  }, [fieldValues, categories]);\n}\n","import * as React from 'react';\nimport { useAllArtists } from './useAllArtists';\nimport { schemeNations } from '../getNationColor';\n\nexport function useAllNations() {\n  const allArtists = useAllArtists();\n  const nations = Array.from(new Set(allArtists.map((artist) => artist.nation)));\n\n  return React.useMemo(() => {\n    return nations\n      .map((nation) => ({\n        nation,\n        artists: allArtists.filter((artist) => nation === artist.nation).length,\n        tunes: allArtists.filter((artist) => nation === artist.nation).reduce((accum, curr) => accum + curr.tunes.length, 0),\n      }))\n      .sort((a, b) => b.artists - a.artists || a.nation.localeCompare(b.nation));\n  }, [nations, allArtists]);\n}\n\nexport function useSchemeNations() {\n  const allNations = useAllNations();\n  type NationItem = typeof allNations[number];\n  return React.useMemo(() => {\n    const [schemed, notSchemed] = allNations.reduce<[NationItem[], NationItem[]]>(\n      (accum, curr) => (schemeNations.includes(curr.nation) ? [[...accum[0], curr], [...accum[1]]] : [[...accum[0]], [...accum[1], curr]]),\n      [[], []]\n    );\n    return [\n      ...schemed,\n      notSchemed.reduce<NationItem>(\n        (accum, curr) => ({\n          ...accum,\n          artists: accum.artists + curr.artists,\n          tunes: accum.tunes + curr.tunes,\n        }),\n        {\n          nation: 'others',\n          artists: 0,\n          tunes: 0,\n        }\n      ),\n    ];\n  }, [allNations]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useAllTunes } from './useAllTunes';\nimport { AllYearsQuery } from '../../../graphql-types';\n\nexport function useAllYears() {\n  const allTunes = useAllTunes();\n  const data = useStaticQuery<AllYearsQuery>(graphql`\n    query AllYears {\n      allProgram {\n        group(field: playlist___year) {\n          fieldValue\n        }\n      }\n    }\n  `);\n  return React.useMemo(\n    () =>\n      data.allProgram.group.map(({ fieldValue }) => ({\n        fieldValue: fieldValue,\n        tunes: allTunes.filter((tune) => tune?.year === parseInt(fieldValue ?? '0', 10)),\n      })),\n    [allTunes, data]\n  );\n}\n\nexport function useDecades(years: number[] = []) {\n  years.forEach((year) => {\n    if (year % 10 !== 0) throw new Error();\n  });\n  const allYears = useAllYears();\n\n  return React.useMemo(() => {\n    const first = Math.floor(parseInt(allYears[0].fieldValue ?? '1960', 10) / 10) * 10;\n    const last = Math.floor(new Date().getFullYear() / 10) * 10;\n    const decades = years.length ? years : Array.from({ length: (last - first) / 10 + 1 }, (_, i) => first + i * 10);\n    return decades.map((decade) => {\n      const items = allYears.filter(({ fieldValue }) => Math.floor(parseInt(fieldValue ?? '0', 10) / 10) === decade / 10);\n      return {\n        fieldValue: `${decade}s`,\n        value: items.reduce((accum, curr) => accum + curr.tunes.length, 0),\n        items,\n      };\n    });\n  }, [allYears, years]);\n}\n","import * as React from 'react';\nimport { useAllPrograms, ProgramEdge } from './useAllPrograms';\n\nexport function useAllTunes() {\n  const allProgram = useAllPrograms();\n  type Playlist = NonNullable<ProgramEdge['node']['playlist']>;\n  return React.useMemo(() => allProgram.reduce<Playlist>((accum, curr) => (curr.playlist ? [...accum, ...curr.playlist] : accum), []), [\n    allProgram,\n  ]);\n}\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport TuneCard from './TuneCard';\nimport { Program, ProgramPlaylist } from '../../graphql-types';\n\ninterface Props {\n  program: Pick<Program, 'week' | 'date' | 'fields' | 'title' | 'playlist'>;\n  filter?: (tune?: ProgramPlaylist) => boolean;\n}\n\nfunction TunesByProgram({ program, filter = () => true }: Props) {\n  return (\n    <Box py={2}>\n      <Typography variant=\"subtitle2\" component=\"span\">\n        第{program.week}回 {program.date}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        <AppLink to={program.fields?.slug ?? '#'}>{program.title}</AppLink>\n      </Typography>\n      {program?.playlist?.filter(filter).map((tune, index) => <TuneCard key={tune?.id ?? index} tune={tune} />) ?? null}\n    </Box>\n  );\n}\n\nexport default TunesByProgram;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useInView } from 'react-intersection-observer';\nimport TunesByProgram from './TunesByProgram';\nimport { TuneCardSkeleton } from './TuneCard';\nimport { useDividedPrograms } from '../utils/useDividedArray';\nimport { QueriedProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nfunction DummyItem() {\n  return (\n    <Box py={4}>\n      <TuneCardSkeleton />\n    </Box>\n  );\n}\n\ninterface DisplayOnScreenProps {\n  children: JSX.Element | JSX.Element[];\n  margin?: number;\n  once?: boolean;\n}\n\nfunction DisplayOnScreen({ children, margin = 0, once = true }: DisplayOnScreenProps) {\n  const [ref, inView] = useInView({\n    rootMargin: `${margin}px`,\n    triggerOnce: once,\n  });\n\n  return <div ref={ref}>{inView ? children : <DummyItem />}</div>;\n}\n\ninterface Props {\n  programs: QueriedProgram[];\n  divisor?: number;\n  filter?: (tune: ProgramPlaylist) => boolean;\n}\n\nfunction LazyViewer({ programs, filter = () => true, divisor = 15 }: Props) {\n  const dividedItems = useDividedPrograms(programs, divisor, filter);\n  const renderItems = React.useMemo(() => {\n    return dividedItems.map((d, i) =>\n      i === 0 ? (\n        <div key={i}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </div>\n      ) : (\n        <DisplayOnScreen key={i} margin={40}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </DisplayOnScreen>\n      )\n    );\n  }, [dividedItems]);\n  return <div>{renderItems}</div>;\n}\n\nexport default LazyViewer;\n","import * as React from 'react';\nimport useSorter from './useSorter';\nimport { AbstractProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nexport default function useDividedArray<T>(items: T[], divisor: number) {\n  return React.useMemo(() => {\n    if (items.length <= divisor) {\n      return [items];\n    } else {\n      // ex. length = 105, divisor = 20, result = 6\n      const result = Math.ceil(items.length / divisor);\n      return Array.from({ length: result }, (d, i) => {\n        return items.slice(i * divisor, (i + 1) * divisor);\n      });\n    }\n  }, [items, divisor]);\n}\n\nexport function useDividedPrograms(\n  programs: AbstractProgram[],\n  divisor: number,\n  filter: (tune: ProgramPlaylist) => boolean = () => true\n): AbstractProgram[][] {\n  const sorter = useSorter();\n  return React.useMemo(() => {\n    return programs\n      .sort((a, b) => sorter(a.week && b.week ? a.week - b.week : 0))\n      .reduce<AbstractProgram[][]>((accum, curr, index) => {\n        const filtered = {\n          ...curr,\n          playlist: curr.playlist?.filter(filter) ?? [],\n        };\n        if (index === 0) {\n          return [[filtered]];\n        }\n        if (getPlaylistLength(accum[accum.length - 1]) < divisor) {\n          accum[accum.length - 1].push(filtered);\n          return accum;\n        } else {\n          return [...accum, [filtered]];\n        }\n      }, []);\n  }, [programs, divisor, filter, sorter]);\n}\n\nfunction getPlaylistLength(programs: AbstractProgram[]) {\n  return programs.reduce((accum, curr) => (curr.playlist ? accum + curr.playlist.length : accum), 0);\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column',\n      },\n    },\n  })\n);\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\n\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction PageNavigation({ previous, next }: Props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {previous ? (\n        <Box py={1} pr={1} textAlign=\"left\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={previous.to}>\n            <ArrowBackIcon />\n            {previous.title}\n          </Button>\n        </Box>\n      ) : null}\n      {next ? (\n        <Box py={1} pl={1} textAlign=\"right\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={next.to}>\n            {next.title}\n            <ArrowForwardIcon />\n          </Button>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nexport default PageNavigation;\n\nexport function PageNavigationSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box p={1} textAlign=\"left\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"circle\" width={24} height={24} />\n          <Skeleton variant=\"text\" width={120} />\n        </Button>\n      </Box>\n      <Box p={1} textAlign=\"right\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"text\" width={120} />\n          <Skeleton variant=\"circle\" width={24} height={24} />\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Item {\n  fieldValue: string;\n}\n\nexport function createNavigationProps(previous: Item | undefined, next: Item | undefined, baseUrl: string): Props {\n  return {\n    previous: previous\n      ? {\n          to: `${baseUrl}/${previous.fieldValue}/`,\n          title: previous.fieldValue,\n        }\n      : undefined,\n    next: next\n      ? {\n          to: `${baseUrl}/${next.fieldValue}`,\n          title: next.fieldValue,\n        }\n      : undefined,\n  };\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { ArtistTemplateQuery } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: 0,\n    },\n    item: {\n      display: 'inline-block',\n      padding: 0,\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  edges: ArtistTemplateQuery['allProgram']['edges'];\n}\n\nfunction RelatedArtists({ edges }: Props) {\n  const classes = useStyles();\n  return (\n    <ul className={classes.root}>\n      {getRelatedArtists(edges).map((artist) => (\n        <li key={artist} className={classes.item}>\n          <Button component={GatsbyLink} to={`/artist/${artist}/`}>\n            {artist}\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction getRelatedArtists(edges: ArtistTemplateQuery['allProgram']['edges']): string[] {\n  const playlist = edges.map(({ node }) => node.playlist ?? []).reduce((accum, curr) => (accum && curr ? [...accum, ...curr] : accum), []);\n\n  return Array.from(new Set(playlist.map((tune) => tune?.artist ?? ''))).sort((a, b) => a.localeCompare(b));\n}\n\nexport default RelatedArtists;\n","import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize, bindKeyboard, SlideRenderProps } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layout';\nimport Jumbotron from '../components/Jumbotron';\nimport LazyViewer from '../components/LazyViewer';\nimport { TuneCardSkeleton } from '../components/TuneCard';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport PageNavigation, { createNavigationProps } from '../components/PageNavigation';\nimport ContentBasis from '../components/ContentBasis';\nimport NavigationBox from '../components/NavigationBox';\nimport RelatedArtists from '../components/RelatedArtists';\nimport sortArtists from '../utils/sortByYomi';\nimport { useAllArtists } from '../utils/graphql-hooks/';\nimport { ArtistTemplateQuery, Program, ProgramPlaylist } from '../../graphql-types';\n\nconst VirtualizedSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\n\ninterface Artist {\n  fieldValue: string;\n  edges: Program[];\n  tunes: ProgramPlaylist[];\n  img?: string;\n}\n\ninterface Props {\n  data: ArtistTemplateQuery;\n  pageContext: {\n    fieldValue: string;\n    previous?: Artist;\n    next?: Artist;\n    current: Artist;\n    index: number;\n  };\n}\n\nfunction ArtistTemplate({ data, pageContext }: Props) {\n  const allArtists = useAllArtists();\n  const artists = React.useMemo(() => sortArtists(allArtists), [allArtists]);\n  const { previous, next, index, fieldValue } = pageContext;\n  const programs = data.allProgram.group.map(({ edges }) => edges[0]);\n  const [loading, setLoading] = React.useState(false);\n  const [tab, setTab] = React.useState(index);\n  const _onChangeIndex = (i: number) => {\n    setTab(i);\n  };\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (tab !== index) {\n        setLoading(true);\n        navigate(`/artist/${artists[tab].fieldValue}`);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [tab, artists, index]);\n\n  function slideRenderer({ index, key }: SlideRenderProps) {\n    const item = artists[index];\n    return (\n      <div key={key}>\n        <Jumbotron title={item.fieldValue} subtitle={`登場回: ${item.edges.length} 曲数: ${item.tunes.length}`} imgUrl={item.img} />\n        <Container maxWidth=\"md\">\n          <Box pt={4}>\n            {item.fieldValue === fieldValue ? (\n              <div>\n                <LazyViewer programs={programs.map(({ node }) => node)} filter={(tune) => tune.artist === fieldValue} />\n                <ContentBasis>\n                  <PageNavigation {...createNavigationProps(previous, next, '/artist')} />\n                </ContentBasis>\n                {item.fieldValue !== 'スピッツ' ? (\n                  <ContentBasis>\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                      {item.fieldValue}と同じ回で登場したアーティスト\n                    </Typography>\n                    <RelatedArtists edges={programs} />\n                  </ContentBasis>\n                ) : null}\n                <ContentBasis>\n                  <NavigationBox />\n                </ContentBasis>\n              </div>\n            ) : (\n              <div>\n                <Box py={2}>\n                  <Typography variant=\"subtitle2\">\n                    <Skeleton variant=\"text\" width={100} />\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    <Skeleton variant=\"text\" />\n                  </Typography>\n                  <TuneCardSkeleton />\n                </Box>\n              </div>\n            )}\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      title={fieldValue}\n      disableGutters\n      disablePaddingTop\n      loading={loading}\n      maxWidth={false}\n      componentViewports={{ BottomNav: false }}\n      drawerContents={<DrawerNavigation {...createNavigationProps(previous, next, '/artist')} />}\n    >\n      <VirtualizedSwipeableViews\n        index={tab}\n        onChangeIndex={_onChangeIndex}\n        slideRenderer={slideRenderer}\n        slideCount={artists.length}\n        resistance\n      />\n    </Layout>\n  );\n}\n\nexport default ArtistTemplate;\n\nexport const query = graphql`\n  query ArtistTemplate($fieldValue: String!) {\n    allProgram(filter: { playlist: { elemMatch: { artist: { eq: $fieldValue } } } }, sort: { fields: date, order: ASC }) {\n      group(field: date, limit: 1) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n            }\n            guests\n            subtitle\n            week\n            year\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              name\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports.default = _default;"],"sourceRoot":""}