{"version":3,"sources":["webpack:///./src/utils/sortByYomi.ts","webpack:///./src/pages/page-2.tsx"],"names":["getYomi","artistName","kana","the","slice","SecondPage","data","categories","React","allProgram","edges","map","node","reduce","accum","curr","existedIndex","d","indexOf","sort","a","b","console","log","guests","allTunes","playlist","artists","artist","nation","push","length","localeCompare","selectors","selector","title","Typography","variant","component","SimpleNationBar","SimpleYearsBar","key","AppLink","to"],"mappings":"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","file":"component---src-pages-page-2-tsx-dbad80c78f208a859bcb.js","sourcesContent":["/*\nexport default function sortByYomi(a: YamlPlaylist, b: YamlPlaylist) {\n                 return getYomi(a) !== getYomi(b)\n                   ? getYomi(a).localeCompare(getYomi(b))\n                   : sortByYear(a, b);\n               }\n               */\nexport function getYomi(artistName: string, kana: string) {\n  const the = artistName.slice(0, 4);\n  if (the === 'The ' || the === 'THE ' || the === 'the ')\n    return artistName.slice(4);\n  return kana || artistName;\n}\n\nexport function encodeArtistName(artistName: string) {\n  return encodeURIComponent(artistName.replace(/[' ']+/g, '_'));\n}\n\nexport function decodeArtistName(artistName: string) {\n  return decodeURIComponent(artistName.replace(/['_']+/g, ' '));\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'gatsby-theme-typescript-material-ui/src/layout';\nimport { AppLink } from 'gatsby-theme-typescript-material-ui/src/components/AppLink';\nimport SimpleNationBar from '../components/SimpleNationBar';\nimport SimpleYearsBar from '../components/SimpleYearsBar';\nimport { getYomi } from '../utils/sortByYomi';\nimport { AllDataQuery } from '../../graphql-types';\n\nfunction SecondPage() {\n  const data = useStaticQuery<AllDataQuery>(graphql`\n    query AllData {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              name\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n          next {\n            title\n            fields {\n              slug\n            }\n            week\n          }\n          previous {\n            fields {\n              slug\n            }\n            title\n            week\n          }\n        }\n      }\n    }\n  `);\n  const categories = React.useMemo(\n    () =>\n      data.allProgram.edges\n        .map(({ node }) => node.categories)\n        .reduce((accum, curr) => [...accum, ...curr], [])\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [data]\n  );\n  console.log(categories);\n\n  const guests = React.useMemo(\n    () =>\n      data.allProgram.edges\n        .map(({ node }) => node.guests)\n        .reduce((accum, curr) => [...accum, ...curr], [])\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [data]\n  );\n  console.log(guests);\n\n  const allTunes = React.useMemo(\n    () =>\n      data.allProgram.edges\n        .map(({ node }) => node.playlist)\n        .reduce((accum, curr) => [...accum, ...curr]),\n    [data]\n  );\n  // [artist, kana, playlist][]\n  const artists = React.useMemo(\n    () =>\n      allTunes\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr.artist);\n          if (existedIndex < 0) {\n            return [...accum, [curr.artist, curr.kana, curr.nation, [curr]]];\n          } else {\n            accum[existedIndex][3].push(curr);\n            return accum;\n          }\n        }, [])\n        .sort(\n          (a, b) =>\n            b[3].length - a[3].length ||\n            getYomi(a[0], a[1]).localeCompare(getYomi(b[0], b[1]))\n        ),\n    [allTunes]\n  );\n  const selectors = React.useMemo(\n    () =>\n      allTunes\n        .map(d => d.selector)\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1] || a.kana - b.kana),\n    [allTunes]\n  );\n\n  return (\n    <Layout title=\"Second Page\">\n      <Typography variant=\"h5\" component=\"h3\">\n        Summary\n      </Typography>\n      <SimpleNationBar playlist={allTunes} />\n      <SimpleYearsBar playlist={allTunes} />\n      <Typography variant=\"h5\" component=\"h3\">\n        カテゴリー\n      </Typography>\n      <div>\n        {categories.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        ゲスト\n      </Typography>\n      <div>\n        {guests.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        選曲者\n      </Typography>\n      <div>\n        {selectors.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        アーティスト\n      </Typography>\n      <div>\n        {artists.map(d => (\n          <AppLink key={d[0]} to={`/artist/${d[0]}/`}>\n            <Typography key={d[0]} variant=\"body1\">\n              {d[0]} {d[3].length}\n            </Typography>\n          </AppLink>\n        ))}\n      </div>\n    </Layout>\n  );\n}\n\nexport default SecondPage;\n"],"sourceRoot":""}