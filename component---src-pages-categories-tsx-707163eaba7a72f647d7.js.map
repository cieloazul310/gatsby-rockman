{"version":3,"sources":["webpack:///./src/utils/graphql-hooks/useProgramTop25.tsx","webpack:///./src/pages/categories.tsx","webpack:///./src/components/Jumbotron.tsx","webpack:///./src/utils/graphql-hooks/useAllPrograms.tsx","webpack:///./src/utils/useSorter.tsx","webpack:///./src/layout/TabPane.tsx","webpack:///./src/utils/graphql-hooks/index.tsx","webpack:///./node_modules/@material-ui/core/esm/colors/purple.js","webpack:///./node_modules/@material-ui/core/esm/colors/lime.js","webpack:///./src/utils/getNationColor.ts","webpack:///./src/components/MuiTab.tsx","webpack:///./src/utils/graphql-hooks/useAllSelectors.tsx","webpack:///./src/utils/graphql-hooks/useAllNations.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///./src/utils/graphql-hooks/useTunesTop25.tsx","webpack:///./node_modules/gatsby-theme-aoi/src/components/ListItemLink.tsx","webpack:///./src/components/ProgramItem.tsx","webpack:///./src/utils/useHash.tsx","webpack:///./src/components/Article.tsx","webpack:///./src/utils/graphql-hooks/useAllArtists.tsx","webpack:///./node_modules/gatsby-theme-aoi/src/layouts/TabPageLayout/index.tsx","webpack:///./src/layout/TabLayout.tsx","webpack:///./src/utils/graphql-hooks/useAllCategories.tsx"],"names":["useProgramTop25","data","useStaticQuery","React","allArtist","edges","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","CategoriesPage","categories","useAllCategories","titles","map","fieldValue","initialTab","useParseHash","state","category","undefined","tab","setTab","sortProgramNode","useSortProgramNode","onItemClicked","index","useHash","window","scrollTo","title","tabs","value","onChange","event","newValue","variant","scrollButtons","aria-label","label","d","key","length","onChangeIndex","resistance","animateHeight","disableGutters","button","onClick","primary","component","footer","sort","i","node","id","program","last","useStyles","makeStyles","theme","createStyles","root","height","overflow","position","jumbotronBg","image","backgroundColor","palette","type","grey","secondary","light","backgroundImage","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","classes","className","gutterBottom","useAllPrograms","allProgram","useSorter","useAppState","useSortProgram","sorter","a","b","week","TabPane","children","props","role","hidden","aria-labelledby","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","colorScheme","JPN","blue","UK","orange","US","green","FR","purple","CAN","red","AUS","lime","schemeNations","Object","keys","isSchemeNations","nation","includes","getNationColor","isDark","textTransform","MuiTab","useAllSelectors","group","reduce","accum","curr","indexOf","removeMultiple","playlist","tune","selector","useAllNations","totalCount","tunesCount","localeCompare","ListItemAvatar","ref","other","context","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","name","ListItemLink","inset","to","primaryText","secondaryText","avatar","secondaryAction","useMediaQuery","ListItem","GatsbyLink","ListItemText","ListItemSecondaryAction","AppLink","ProgramItem","useAvatarStyles","Avatar","src","fields","slug","date","divider","stateFunction","useLocation","hash","console","log","stateTitle","stateTitleIndex","hashedTitle","slice","decodeURI","parseHash","initialTabIndex","pathname","history","replaceState","section","paddingBottom","h2","h4","typography","fontWeightBold","ArticleSection","ArticleTitle","align","Paragraph","paragraph","H3","H4","Link","href","target","rel","Article","maxWidth","useAllArtists","TabPageLayout","disablePaddingTop","TabLayout","tabSticky","componentViewports","BottomNav"],"mappings":"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","file":"component---src-pages-categories-tsx-707163eaba7a72f647d7.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { ProgramCountQuery } from '../../../graphql-types';\n\nexport function useProgramTop25() {\n  const data = useStaticQuery<ProgramCountQuery>(graphql`\n    query ProgramCount {\n      allArtist(sort: { fields: programCount, order: DESC }, limit: 25, filter: { name: { ne: \"スピッツ\" } }) {\n        edges {\n          node {\n            id\n            image\n            kana\n            name\n            nation\n            programCount\n            tunesCount\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allArtist.edges, [data]);\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from '../layout/TabLayout';\nimport TabPane from '../layout/TabPane';\nimport Tab from '../components/MuiTab';\nimport Section, { SectionDivider } from '../components/Section';\nimport Article, { Paragraph } from '../components/Article';\nimport ProgramItem from '../components/ProgramItem';\nimport Jumbotron from '../components/Jumbotron';\nimport NavigationBox from '../components/NavigationBox';\nimport { AdInArticle } from '../components/Ads';\nimport { useSortProgramNode } from '../utils/useSorter';\nimport { useParseHash, useHash } from '../utils/useHash';\nimport { useAllCategories } from '../utils/graphql-hooks';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\ninterface WindowState {\n  category?: string;\n}\n\nfunction CategoriesPage() {\n  const categories = useAllCategories();\n  const titles = React.useMemo(() => ['', ...categories.map(({ fieldValue }) => fieldValue ?? '')], [categories]);\n  const initialTab = useParseHash<WindowState>(titles, (state) => state?.category ?? undefined);\n  const [tab, setTab] = React.useState(initialTab);\n\n  const sortProgramNode = useSortProgramNode();\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n    setTab(newValue);\n  };\n  const handleChangeIndex = (index: number) => {\n    setTab(index);\n  };\n  const onItemClicked = (index: number) => () => {\n    setTab(index);\n  };\n\n  useHash(tab, titles);\n  React.useEffect(() => {\n    if (typeof window === 'object') {\n      window.scrollTo(0, 0);\n    }\n  }, [tab]);\n\n  return (\n    <Layout\n      title=\"テーマ\"\n      tabs={\n        <Tabs value={tab} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\" aria-label=\"scrollable auto tabs example\">\n          <Tab label=\"概要\" />\n          {categories.map((d, index) => (\n            <Tab key={d.fieldValue ?? index} label={`${d.fieldValue} ${d.edges.length}`} />\n          ))}\n        </Tabs>\n      }\n    >\n      <BindKeyboardSwipeableViews index={tab} onChangeIndex={handleChangeIndex} resistance animateHeight>\n        <TabPane value={tab} index={0} disableGutters>\n          <Jumbotron title=\"テーマ\" />\n          <SectionDivider />\n          <Section>\n            <Article>\n              <Paragraph>\n                ロック大陸漫遊記の放送回を「ワン・アーティスト特集」「スピッツメンバーと漫遊記」など特定のテーマで分類したページです。\n              </Paragraph>\n              <List>\n                {categories.map((category, index) => (\n                  <ListItem key={index} button onClick={onItemClicked(index + 1)}>\n                    <ListItemText primary={category.fieldValue} />\n                    <Typography variant=\"button\" component=\"span\">\n                      {category.edges.length}回\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </Article>\n          </Section>\n        </TabPane>\n        {categories.map((d, index) => (\n          <TabPane key={index} value={tab} index={index + 1} disableGutters>\n            <Jumbotron title={d.fieldValue} footer={`全${d.edges.length}回`} />\n            <SectionDivider />\n            <Section>\n              <List>\n                {d.edges.sort(sortProgramNode).map(({ node }, i) => (\n                  <ProgramItem key={node.id} program={node} last={i === d.edges.length - 1} />\n                ))}\n              </List>\n            </Section>\n          </TabPane>\n        ))}\n      </BindKeyboardSwipeableViews>\n      <SectionDivider />\n      <AdInArticle />\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default CategoriesPage;\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  image?: string;\n}\nconst height = 240;\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    root: {\n      height,\n      overflow: 'hidden',\n      position: 'relative',\n    },\n    jumbotronBg: ({ image }) => ({\n      height: '100%',\n      backgroundColor: !image && theme.palette.type === 'light' ? theme.palette.secondary.light : theme.palette.grey[700],\n      backgroundImage: image ? `url(${image})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: image ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: image ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: {\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\ninterface Props {\n  header?: React.ReactNode;\n  title: React.ReactNode;\n  footer?: React.ReactNode;\n  image?: string;\n}\n\nfunction Jumbotron({ header, footer, title, image }: Props) {\n  const classes = useStyles({ image });\n  return (\n    <div className={classes.root}>\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        {header ? <Typography variant=\"subtitle2\">{header}</Typography> : null}\n        <Typography variant=\"h5\" component=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {footer ? <Typography variant=\"subtitle2\">{footer}</Typography> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllProgramQuery } from '../../../graphql-types';\n\nexport function useAllPrograms() {\n  const data = useStaticQuery<AllProgramQuery>(graphql`\n    query AllProgram {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n              image\n            }\n            guests\n            playlist {\n              artist {\n                name\n              }\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.edges.map(({ node }) => node);\n  }, [data.allProgram.edges]);\n}\n","import * as React from 'react';\nimport { useAppState } from '../gatsby-theme-aoi-top-layout/utils/AppStateContext';\nimport { Maybe, Program, ProgramPlaylist } from '../../graphql-types';\n\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n\nexport function useSortProgram() {\n  const sorter = useSorter();\n  return (a: Maybe<Pick<Program, 'week'>> | undefined, b: Maybe<Pick<Program, 'week'>> | undefined) =>\n    sorter((a?.week ?? 0) - (b?.week ?? 0));\n}\n\nexport function useSortProgramNode() {\n  const sorter = useSorter();\n  return (a: { node: Maybe<Pick<Program, 'week'>> }, b: { node: Maybe<Pick<Program, 'week'>> }) =>\n    sorter((a?.node?.week ?? 0) - (b?.node?.week ?? 0));\n}\n\nexport function useSortPlaylist() {\n  const sorter = useSorter();\n  return (\n    a: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined,\n    b: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined\n  ) => sorter((a?.week ?? 0) - (b?.week ?? 0) || (a?.indexInWeek ?? 0) - (b?.indexInWeek ?? 0));\n}\n","import * as React from 'react';\nimport Container, { ContainerProps } from '@material-ui/core/Container';\n\ntype Props = {\n  // tab state value\n  value: number;\n  // this tab's index\n  index: number;\n  children: React.ReactNode;\n  visible?: boolean;\n} & ContainerProps;\n\nfunction TabPane({ index, value, children, ...props }: Props) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index && value !== index + 1 && value !== index - 1}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n    >\n      <Container {...props}>\n        <div>{value === index || value === index - 1 || value === index + 1 ? children : null}</div>\n      </Container>\n    </div>\n  );\n}\n\nexport default TabPane;\n","export * from './useAllPrograms';\nexport * from './useAllTunes';\nexport * from './useAllArtists';\nexport * from './useAllCategories';\nexport * from './useAllSelectors';\nexport * from './useAllNations';\nexport * from './useAllYears';\nexport * from './useProgramTop25';\nexport * from './useTunesTop25';\n","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","var lime = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\nexport default lime;","import * as React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { blue, orange, green, red, purple, lime, grey } from '@material-ui/core/colors';\n\nconst colorScheme = {\n  JPN: blue,\n  UK: orange,\n  US: green,\n  FR: purple,\n  CAN: red,\n  AUS: lime,\n};\n\nexport type SchemeNations = keyof typeof colorScheme;\nexport const schemeNations = Object.keys(colorScheme);\nexport function isSchemeNations(nation: string): nation is SchemeNations {\n  return schemeNations.includes(nation);\n}\n\nexport default function getNationColor(nation: string, isDark = false) {\n  if (isSchemeNations(nation)) {\n    return isDark ? colorScheme[nation][300] : colorScheme[nation][500];\n  } else {\n    return grey[500];\n  }\n}\n\nexport function useGetNationColor() {\n  const isDark = useTheme().palette.type === 'dark';\n  return React.useCallback((nation: string) => getNationColor(nation, isDark), [isDark]);\n}\n","import * as React from 'react';\nimport Tab, { TabProps } from '@material-ui/core/Tab';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      textTransform: 'none',\n    },\n  })\n);\n\nfunction MuiTab(props: TabProps) {\n  const classes = useStyles();\n  return <Tab classes={classes} {...props} />;\n}\n\nexport default MuiTab;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllSelectorsQuery } from '../../../graphql-types';\n\ntype SelectorsGroup = AllSelectorsQuery['allProgram']['group'][number];\ntype SelectorsEdge = SelectorsGroup['edges'][number];\ntype SelectorsPlaylist = NonNullable<SelectorsEdge['node']['playlist']>[number];\n\nexport interface CategoryItem {\n  fieldValue: string;\n  edges: SelectorsEdge[];\n  playlist: SelectorsPlaylist[];\n}\n\nexport function useAllSelectors(): CategoryItem[] {\n  const data = useStaticQuery<AllSelectorsQuery>(graphql`\n    query AllSelectors {\n      allProgram {\n        group(field: playlist___selector) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              fields {\n                slug\n              }\n              playlist {\n                id\n                indexInWeek\n                title\n                artist {\n                  name\n                }\n                year\n                nation\n                selector\n                youtube\n                corner\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return React.useMemo(() => {\n    return data.allProgram.group\n      .filter((group) => group.fieldValue !== '草野マサムネ')\n      .map((group) => {\n        const edges = removeMultiple(group.edges);\n        return {\n          fieldValue: group.fieldValue ?? 'selector',\n          edges,\n          playlist: edges.reduce<SelectorsPlaylist[]>(\n            (accum, curr) =>\n              curr.node.playlist ? [...accum, ...curr.node.playlist.filter((tune) => tune?.selector === group.fieldValue)] : [...accum],\n            []\n          ),\n        };\n      })\n      .sort((a, b) => b.playlist.length - a.playlist.length || b.edges.length - a.edges.length);\n  }, [data]);\n}\n\nfunction removeMultiple(edges: SelectorsEdge[]) {\n  return edges.reduce<SelectorsEdge[]>((accum, curr) => {\n    if (accum.map((d) => d.node.id).indexOf(curr.node.id) >= 0) return accum;\n    return [...accum, curr];\n  }, []);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { isSchemeNations } from '../getNationColor';\nimport { AllNationsQuery } from '../../../graphql-types';\n\nexport function useAllNations() {\n  const { group } = useStaticQuery<AllNationsQuery>(graphql`\n    query AllNations {\n      allArtist(filter: { name: { ne: \"スピッツ\" } }) {\n        group(field: nation) {\n          fieldValue\n          totalCount\n          edges {\n            node {\n              tunesCount\n            }\n          }\n        }\n      }\n    }\n  `).allArtist;\n\n  return React.useMemo(() => {\n    return group\n      .map(({ fieldValue, totalCount, edges }) => ({\n        nation: fieldValue,\n        totalCount,\n        tunesCount: edges.reduce((accum, curr) => accum + curr.node.tunesCount, 0),\n      }))\n      .sort((a, b) => b.totalCount - a.totalCount || (a.nation ?? '').localeCompare(b.nation ?? ''));\n  }, [group]);\n}\n\nexport function useSchemeNations() {\n  const allNations = useAllNations();\n  return React.useMemo(() => {\n    const schemed = allNations.filter(({ nation }) => isSchemeNations(nation ?? ''));\n    const notSchemed = allNations\n      .filter(({ nation }) => !isSchemeNations(nation ?? ''))\n      .reduce(\n        (accum, curr) => ({\n          ...accum,\n          totalCount: accum.totalCount + curr.totalCount,\n          tunesCount: accum.tunesCount + curr.tunesCount,\n        }),\n        { nation: 'others', totalCount: 0, tunesCount: 0 }\n      );\n    return [...schemed, notSchemed];\n  }, [allNations]);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { TunesCountQuery } from '../../../graphql-types';\n\nexport function useTunesTop25() {\n  const data = useStaticQuery<TunesCountQuery>(graphql`\n    query TunesCount {\n      allArtist(sort: { fields: tunesCount, order: DESC }, limit: 25, filter: { name: { ne: \"スピッツ\" } }) {\n        edges {\n          node {\n            id\n            image\n            kana\n            name\n            nation\n            programCount\n            tunesCount\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allArtist.edges, [data]);\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = Record<string, unknown>> = Omit<ListItemProps, 'ref'> &\n  Pick<MuiLinkProps, 'color'> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n    inset?: boolean;\n    avatar?: JSX.Element;\n    secondaryAction?: JSX.Element;\n  } & Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nfunction ListItemLink({\n  color = 'inherit',\n  button = false,\n  inset = false,\n  to,\n  primaryText,\n  secondaryText,\n  avatar,\n  secondaryAction,\n  ...props\n}: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n\n  return isMobile || button ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText primary={primaryText} secondary={secondaryText} inset={inset} />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText\n        inset={inset}\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n","import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport { useAvatarStyles } from '../styles';\nimport { Maybe, Program } from '../../graphql-types';\n\ninterface Props {\n  program: Maybe<Pick<Program, 'fields' | 'title' | 'week' | 'date'>>;\n  last?: boolean;\n}\n\nfunction ProgramItem({ program, last }: Props) {\n  const classes = useAvatarStyles();\n  return (\n    <ListItemLink\n      avatar={<Avatar className={classes.avatar} src={program?.fields?.image ?? undefined} variant=\"square\" />}\n      to={program?.fields?.slug ?? '#'}\n      primaryText={program?.title ?? 'タイトル'}\n      secondaryText={`第${program?.week}回 ${program?.date}`}\n      divider={!last}\n      inset\n    />\n  );\n}\n\nexport default ProgramItem;\n","import * as React from 'react';\nimport { useLocation, WindowLocation } from '@reach/router';\n\nexport function useParseHash<T = null>(titles: string[], stateFunction?: (state?: T | null) => string | undefined | null) {\n  const { hash, state } = useLocation() as WindowLocation<T>;\n  console.log(hash, state);\n  return React.useMemo(() => {\n    console.log(state);\n    const stateTitle = typeof state === 'object' && typeof stateFunction === 'function' ? stateFunction(state) : null;\n    const stateTitleIndex = stateTitle ? titles.indexOf(stateTitle) : -1;\n    if (stateTitleIndex >= 0) return stateTitleIndex;\n    const hashedTitle = parseHash(hash);\n    const initialTabIndex = titles.indexOf(hashedTitle);\n    return initialTabIndex >= 0 ? initialTabIndex : 0;\n  }, []);\n}\n\nexport function useHash(tab: number, titles: string[]) {\n  const { pathname } = useLocation();\n  React.useEffect(() => {\n    if (window && typeof window === 'object') window.history.replaceState(tab, '', tab !== 0 ? withHash(titles[tab]) : pathname);\n  }, [tab, titles, pathname]);\n}\n\nexport function withHash(title: string) {\n  return title !== '' ? `#${title}` : '';\n}\nexport function parseHash(hash: string) {\n  const title = hash !== '' && hash.slice(0, 1) === '#' ? decodeURI(hash.slice(1)) : '';\n  return title;\n}\n","import * as React from 'react';\nimport Container, { ContainerProps } from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport MuiLink, { LinkProps } from '@material-ui/core/Link';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(2, 0),\n    },\n    section: {\n      paddingBottom: theme.spacing(1),\n    },\n    h2: {\n      paddingBottom: theme.spacing(4),\n    },\n    h4: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  })\n);\n\nfunction Article({ children, maxWidth, ...props }: ContainerProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Container maxWidth={maxWidth ?? 'sm'} {...props}>\n        <article>{children}</article>\n      </Container>\n    </div>\n  );\n}\n\nexport default Article;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function ArticleSection({ children }: Props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.section}>\n      <section>{children}</section>\n    </div>\n  );\n}\n\nexport function ArticleTitle({ children }: Props) {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.h2} variant=\"h6\" component=\"h2\" align=\"center\">\n      {children}\n    </Typography>\n  );\n}\n\nexport function Paragraph({ children }: Props) {\n  return (\n    <Typography variant=\"body2\" paragraph>\n      {children}\n    </Typography>\n  );\n}\n\nexport function H3({ children }: Props) {\n  return (\n    <Typography variant=\"subtitle1\" component=\"h3\" gutterBottom>\n      {children}\n    </Typography>\n  );\n}\n\nexport function H4({ children }: Props) {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.h4} variant=\"body2\" component=\"h4\" gutterBottom>\n      {children}\n    </Typography>\n  );\n}\n\nexport function Link({ children, href, ...props }: LinkProps) {\n  return (\n    <MuiLink color=\"secondary\" href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n      {children}\n    </MuiLink>\n  );\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllArtistsQuery } from '../../../graphql-types';\n\nexport function useAllArtists() {\n  const data = useStaticQuery<AllArtistsQuery>(graphql`\n    query AllArtists {\n      allArtist(sort: { fields: sortName, order: ASC }, filter: { name: { ne: \"スピッツ\" } }) {\n        edges {\n          node {\n            id\n            image\n            kana\n            name\n            nation\n            programCount\n            tunesCount\n            program {\n              date(formatString: \"YYYY-MM-DD\")\n              week\n            }\n            tunes {\n              title\n              year\n              week\n            }\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allArtist.edges, [data]);\n}\n\nexport type ArtistItem = ReturnType<typeof useAllArtists>[number];\n","import * as React from 'react';\nimport Layout, { LayoutProps } from '../../layout';\n\ninterface Props extends LayoutProps {\n  tabSticky?: boolean;\n}\n\nfunction TabPageLayout({ children, maxWidth = 'xl', disablePaddingTop = true, disableGutters = true, ...props }: Props) {\n  return (\n    <Layout maxWidth={maxWidth} disablePaddingTop={disablePaddingTop} disableGutters={disableGutters} {...props}>\n      {children}\n    </Layout>\n  );\n}\n\nexport default TabPageLayout;\n","import * as React from 'react';\nimport Layout from 'gatsby-theme-aoi/src/layouts/TabPageLayout';\nimport { LayoutProps } from 'gatsby-theme-aoi/src/layout';\n\nfunction TabLayout({\n  children,\n  tabs,\n  ...props\n}: Omit<LayoutProps, 'tabSticky' | 'disableGutters' | 'componentViewports' | 'tabs'> & Required<Pick<LayoutProps, 'tabs'>>) {\n  return (\n    <Layout tabSticky disableGutters componentViewports={{ BottomNav: false }} {...props} tabs={tabs}>\n      {children}\n    </Layout>\n  );\n}\n\nexport default TabLayout;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllCategoriesQuery } from '../../../graphql-types';\n\nexport function useAllCategories() {\n  const data = useStaticQuery<AllCategoriesQuery>(graphql`\n    query AllCategories {\n      allProgram(sort: { fields: week, order: ASC }) {\n        group(field: categories) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              title\n              date(formatString: \"YYYY-MM-DD\")\n              fields {\n                slug\n                image\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.group.sort((a, b) => b.edges.length - a.edges.length);\n  }, [data]);\n}\n\nexport function useCategories(fieldValues: string[]) {\n  const categories = useAllCategories();\n  return React.useMemo(() => {\n    return categories.filter((category) => category.fieldValue && fieldValues.includes(category.fieldValue));\n  }, [fieldValues, categories]);\n}\n"],"sourceRoot":""}