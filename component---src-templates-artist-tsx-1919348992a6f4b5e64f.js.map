{"version":3,"sources":["webpack:///./src/components/Jumbotron.tsx","webpack:///./src/components/DrawerNavigation.tsx","webpack:///../gatsby-theme-aoi/src/components/ListItemAppLink.tsx","webpack:///./src/utils/useSorter.tsx","webpack:///./src/components/PageNavigation.tsx","webpack:///./src/templates/artist.tsx","webpack:///../node_modules/@material-ui/icons/ArrowBack.js","webpack:///../node_modules/@material-ui/icons/ArrowForward.js"],"names":["useStyles","makeStyles","theme","createStyles","jumbotronBg","imgUrl","height","backgroundColor","palette","grey","backgroundImage","undefined","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","subtitle","title","artists","classes","overflow","className","variant","gutterBottom","component","DrawerPageNavigation","previous","next","subheader","dense","button","to","primary","secondary","GatsbyLinkComposed","React","props","ref","state","other","ListItemAppLink","innerRef","naked","useSorter","sort","useAppState","value","root","createNavigationProps","baseUrl","fieldValue","PageNavigation","py","pr","textAlign","GatsbyLink","pl","VirtualizedSwipeableViews","bindKeyboard","virtualize","SwipeableViews","ArtistTemplate","data","pageContext","allArtists","useAllArtists","sortArtists","index","programs","allProgram","edges","loading","setLoading","tab","setTab","timer","setTimeout","navigate","clearTimeout","disableGutters","disablePaddingTop","componentViewports","BottomNav","drawerContents","onChangeIndex","i","slideRenderer","key","item","length","tunes","img","maxWidth","pt","map","node","tune","artist","width","slideCount","resistance","query","_interopRequireDefault","Object","defineProperty","exports","_react","_default","createElement","d"],"mappings":"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","file":"component---src-templates-artist-tsx-1919348992a6f4b5e64f.js","sourcesContent":["import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\ninterface StyleProps {\n  height: number;\n  imgUrl?: string;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ imgUrl }) => ({\n      height: '100%',\n      backgroundColor: theme.palette.grey[700],\n      backgroundImage: imgUrl ? `url(${imgUrl})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: imgUrl ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: imgUrl ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: ({ height }) => ({\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    }),\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\ninterface Props {\n  header?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  title: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  height?: number;\n  artists?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  subtitle?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  imgUrl?: string;\n}\n\nfunction Jumbotron({ header, subtitle, title, artists, imgUrl, height = 300 }: Props) {\n  const classes = useStyles({ imgUrl, height });\n  return (\n    <Box height={height} overflow=\"hidden\" position=\"relative\">\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        <Typography variant=\"subtitle2\">{header}</Typography>\n        <Typography variant=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n        {artists ? (\n          <Typography variant=\"body2\" component=\"div\">\n            {artists}\n          </Typography>\n        ) : null}\n      </div>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ListItemAppLink from 'gatsby-theme-aoi/src/components/ListItemAppLink';\n//import { QueriedProgram } from '../types';\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction DrawerPageNavigation({ previous, next }: Props) {\n  return (\n    <List subheader={<ListSubheader>Navigation</ListSubheader>}>\n      {previous ? (\n        <ListItemAppLink dense button to={previous.to}>\n          <ListItemIcon>\n            <ArrowBackIcon />\n          </ListItemIcon>\n          <ListItemText primary={previous.title} secondary=\"prev\" />\n        </ListItemAppLink>\n      ) : null}\n      {next ? (\n        <ListItemAppLink dense button to={next.to}>\n          <ListItemIcon>\n            <ArrowForwardIcon />\n          </ListItemIcon>\n          <ListItemText primary={next.title} secondary=\"next\" />\n        </ListItemAppLink>\n      ) : null}\n    </List>\n  );\n}\n\nexport default DrawerPageNavigation;\n","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\n\ntype GatsbyLinkComposedProps<T = Record<string, unknown>> = Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nconst GatsbyLinkComposed = React.forwardRef<unknown, GatsbyLinkComposedProps>((props, ref) => {\n  const { to, state, ...other } = props;\n  return <GatsbyLink to={to} state={state} ref={ref} {...other} />;\n});\n\ninterface ListItemAppLinkPropsBase {\n  innerRef?: React.Ref<unknown>;\n  naked?: boolean;\n}\n\nexport type ListItemAppLinkProps = ListItemAppLinkPropsBase & GatsbyLinkComposedProps & Omit<ListItemProps, 'ref'>;\n\nexport function ListItemAppLink(props: ListItemAppLinkProps) {\n  const { className, innerRef, naked, to, button, ...other } = props;\n\n  if (naked) {\n    return <GatsbyLinkComposed className={className} ref={innerRef} to={to} {...other} />;\n  }\n  if (button) {\n    return <ListItem component={GatsbyLinkComposed} className={className} to={to} ref={innerRef} button {...other} />;\n  }\n\n  return <ListItem component={GatsbyLinkComposed} className={className} to={to} ref={innerRef} {...other} />;\n}\n\nexport default ListItemAppLink;\n","import * as React from 'react';\nimport { useAppState } from 'gatsby-theme-aoi-top-layout/src/utils/AppStateContext';\n\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column',\n      },\n    },\n  })\n);\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\n\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction PageNavigation({ previous, next }: Props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {previous ? (\n        <Box py={1} pr={1} textAlign=\"left\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={previous.to}>\n            <ArrowBackIcon />\n            {previous.title}\n          </Button>\n        </Box>\n      ) : null}\n      {next ? (\n        <Box py={1} pl={1} textAlign=\"right\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={next.to}>\n            {next.title}\n            <ArrowForwardIcon />\n          </Button>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nexport default PageNavigation;\n\nexport function PageNavigationSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box p={1} textAlign=\"left\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"circle\" width={24} height={24} />\n          <Skeleton variant=\"text\" width={120} />\n        </Button>\n      </Box>\n      <Box p={1} textAlign=\"right\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"text\" width={120} />\n          <Skeleton variant=\"circle\" width={24} height={24} />\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Item {\n  fieldValue: string;\n}\n\nexport function createNavigationProps(previous: Item, next: Item, baseUrl: string): Props {\n  return {\n    previous: previous\n      ? {\n          to: `${baseUrl}/${previous.fieldValue}/`,\n          title: previous.fieldValue,\n        }\n      : undefined,\n    next: next\n      ? {\n          to: `${baseUrl}/${next.fieldValue}`,\n          title: next.fieldValue,\n        }\n      : undefined,\n  };\n}\n","import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize, bindKeyboard, SlideRenderProps } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layout';\nimport Jumbotron from '../components/Jumbotron';\nimport LazyViewer from '../components/LazyViewer';\nimport { TuneCardSkeleton } from '../components/TuneCard';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport PageNavigation, { createNavigationProps } from '../components/PageNavigation';\nimport sortArtists from '../utils/sortByYomi';\nimport { useAllArtists } from '../utils/graphql-hooks/';\nimport { ArtistTemplateQuery, Program, ProgramPlaylist } from '../../graphql-types';\n\nconst VirtualizedSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\n\ninterface Artist {\n  fieldValue: string;\n  edges: Program[];\n  tunes: ProgramPlaylist[];\n  img?: string;\n}\n\ninterface Props {\n  data: ArtistTemplateQuery;\n  pageContext: {\n    fieldValue: string;\n    previous?: Artist;\n    next?: Artist;\n    current: Artist;\n    index: number;\n  };\n}\n\nfunction ArtistTemplate({ data, pageContext }: Props) {\n  const allArtists = useAllArtists();\n  const artists = React.useMemo(() => sortArtists(allArtists), [allArtists]);\n  const { previous, next, index, fieldValue } = pageContext;\n  const programs = data.allProgram.edges;\n  const [loading, setLoading] = React.useState(false);\n  const [tab, setTab] = React.useState(index);\n  const _onChangeIndex = (i: number) => {\n    setTab(i);\n  };\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (tab !== index) {\n        setLoading(true);\n        navigate(`/artist/${artists[tab].fieldValue}`);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [tab, artists, index]);\n\n  function slideRenderer({ index, key }: SlideRenderProps) {\n    const item = artists[index];\n    return (\n      <div key={key}>\n        <Jumbotron title={item.fieldValue} subtitle={`登場回: ${item.edges.length} 曲数: ${item.tunes.length}`} imgUrl={item.img} />\n        <Container maxWidth=\"md\">\n          <Box pt={4}>\n            {item.fieldValue === fieldValue ? (\n              <div>\n                <LazyViewer programs={programs.map(({ node }) => node)} filter={(tune) => tune.artist === fieldValue} />\n                <PageNavigation {...createNavigationProps(previous, next, '/artist')} />\n              </div>\n            ) : (\n              <div>\n                <Box py={2}>\n                  <Typography variant=\"subtitle2\">\n                    <Skeleton variant=\"text\" width={100} />\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    <Skeleton variant=\"text\" />\n                  </Typography>\n                  <TuneCardSkeleton />\n                </Box>\n              </div>\n            )}\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      title={fieldValue}\n      disableGutters\n      disablePaddingTop\n      loading={loading}\n      componentViewports={{ BottomNav: false }}\n      drawerContents={<DrawerNavigation {...createNavigationProps(previous, next, '/artist')} />}\n    >\n      <VirtualizedSwipeableViews\n        index={tab}\n        onChangeIndex={_onChangeIndex}\n        slideRenderer={slideRenderer}\n        slideCount={artists.length}\n        resistance\n      />\n    </Layout>\n  );\n}\n\nexport default ArtistTemplate;\n\nfunction getYomi(artistName: string, kana?: string) {\n  const the = artistName.slice(0, 4);\n  if (the === 'The ' || the === 'THE ' || the === 'the ') return artistName.slice(4);\n  return kana || artistName;\n}\n\nexport const query = graphql`\n  query ArtistTemplate($fieldValue: String!) {\n    allProgram(filter: { playlist: { elemMatch: { artist: { glob: $fieldValue } } } }, sort: { fields: week, order: ASC }) {\n      edges {\n        node {\n          id\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          categories\n          fields {\n            slug\n          }\n          guests\n          subtitle\n          week\n          year\n          playlist {\n            artist\n            corner\n            id\n            indexInWeek\n            index\n            kana\n            label\n            name\n            nation\n            producer\n            selector\n            title\n            week\n            year\n            youtube\n          }\n        }\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports[\"default\"] = _default;","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports[\"default\"] = _default;"],"sourceRoot":""}