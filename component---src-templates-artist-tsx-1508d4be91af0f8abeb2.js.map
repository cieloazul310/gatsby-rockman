{"version":3,"sources":["webpack:///./src/components/DrawerNavigation.tsx","webpack:///./src/components/PageNavigation.tsx","webpack:///./src/templates/artist.tsx","webpack:///../node_modules/@material-ui/icons/ArrowBack.js","webpack:///../node_modules/@material-ui/icons/ArrowForward.js"],"names":["DrawerPageNavigation","previous","next","subheader","dense","button","to","primary","title","secondary","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","breakpoints","down","createNavigationProps","baseUrl","fieldValue","undefined","PageNavigation","classes","className","py","pr","textAlign","component","GatsbyLink","variant","pl","VirtualizedSwipeableViews","bindKeyboard","virtualize","SwipeableViews","ArtistTemplate","data","pageContext","allArtists","useAllArtists","artists","React","sortArtists","index","programs","allProgram","edges","loading","setLoading","tab","setTab","timer","setTimeout","navigate","clearTimeout","disableGutters","disablePaddingTop","maxWidth","componentViewports","BottomNav","drawerContents","onChangeIndex","i","slideRenderer","key","item","subtitle","length","tunes","imgUrl","img","pt","map","node","filter","tune","artist","width","slideCount","resistance","query","_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","d"],"mappings":"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","file":"component---src-templates-artist-tsx-1508d4be91af0f8abeb2.js","sourcesContent":["import * as React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ListItemAppLink from 'gatsby-theme-aoi/src/components/ListItemAppLink';\n//import { QueriedProgram } from '../types';\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction DrawerPageNavigation({ previous, next }: Props) {\n  return (\n    <List subheader={<ListSubheader>Navigation</ListSubheader>}>\n      {previous ? (\n        <ListItemAppLink dense button to={previous.to}>\n          <ListItemIcon>\n            <ArrowBackIcon />\n          </ListItemIcon>\n          <ListItemText primary={previous.title} secondary=\"prev\" />\n        </ListItemAppLink>\n      ) : null}\n      {next ? (\n        <ListItemAppLink dense button to={next.to}>\n          <ListItemIcon>\n            <ArrowForwardIcon />\n          </ListItemIcon>\n          <ListItemText primary={next.title} secondary=\"next\" />\n        </ListItemAppLink>\n      ) : null}\n    </List>\n  );\n}\n\nexport default DrawerPageNavigation;\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column',\n      },\n    },\n  })\n);\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\n\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction PageNavigation({ previous, next }: Props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {previous ? (\n        <Box py={1} pr={1} textAlign=\"left\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={previous.to}>\n            <ArrowBackIcon />\n            {previous.title}\n          </Button>\n        </Box>\n      ) : null}\n      {next ? (\n        <Box py={1} pl={1} textAlign=\"right\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={next.to}>\n            {next.title}\n            <ArrowForwardIcon />\n          </Button>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nexport default PageNavigation;\n\nexport function PageNavigationSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box p={1} textAlign=\"left\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"circle\" width={24} height={24} />\n          <Skeleton variant=\"text\" width={120} />\n        </Button>\n      </Box>\n      <Box p={1} textAlign=\"right\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"text\" width={120} />\n          <Skeleton variant=\"circle\" width={24} height={24} />\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Item {\n  fieldValue: string;\n}\n\nexport function createNavigationProps(previous: Item | undefined, next: Item | undefined, baseUrl: string): Props {\n  return {\n    previous: previous\n      ? {\n          to: `${baseUrl}/${previous.fieldValue}/`,\n          title: previous.fieldValue,\n        }\n      : undefined,\n    next: next\n      ? {\n          to: `${baseUrl}/${next.fieldValue}`,\n          title: next.fieldValue,\n        }\n      : undefined,\n  };\n}\n","import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize, bindKeyboard, SlideRenderProps } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layout';\nimport Jumbotron from '../components/Jumbotron';\nimport LazyViewer from '../components/LazyViewer';\nimport { TuneCardSkeleton } from '../components/TuneCard';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport PageNavigation, { createNavigationProps } from '../components/PageNavigation';\nimport ContentBasis from '../components/ContentBasis';\nimport NavigationBox from '../components/NavigationBox';\nimport sortArtists from '../utils/sortByYomi';\nimport { useAllArtists } from '../utils/graphql-hooks/';\nimport { ArtistTemplateQuery, Program, ProgramPlaylist } from '../../graphql-types';\n\nconst VirtualizedSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\n\ninterface Artist {\n  fieldValue: string;\n  edges: Program[];\n  tunes: ProgramPlaylist[];\n  img?: string;\n}\n\ninterface Props {\n  data: ArtistTemplateQuery;\n  pageContext: {\n    fieldValue: string;\n    previous?: Artist;\n    next?: Artist;\n    current: Artist;\n    index: number;\n  };\n}\n\nfunction ArtistTemplate({ data, pageContext }: Props) {\n  const allArtists = useAllArtists();\n  const artists = React.useMemo(() => sortArtists(allArtists), [allArtists]);\n  const { previous, next, index, fieldValue } = pageContext;\n  const programs = data.allProgram.edges;\n  const [loading, setLoading] = React.useState(false);\n  const [tab, setTab] = React.useState(index);\n  const _onChangeIndex = (i: number) => {\n    setTab(i);\n  };\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (tab !== index) {\n        setLoading(true);\n        navigate(`/artist/${artists[tab].fieldValue}`);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [tab, artists, index]);\n\n  function slideRenderer({ index, key }: SlideRenderProps) {\n    const item = artists[index];\n    return (\n      <div key={key}>\n        <Jumbotron title={item.fieldValue} subtitle={`登場回: ${item.edges.length} 曲数: ${item.tunes.length}`} imgUrl={item.img} />\n        <Container maxWidth=\"md\">\n          <Box pt={4}>\n            {item.fieldValue === fieldValue ? (\n              <div>\n                <LazyViewer programs={programs.map(({ node }) => node)} filter={(tune) => tune.artist === fieldValue} />\n                <ContentBasis>\n                  <PageNavigation {...createNavigationProps(previous, next, '/artist')} />\n                </ContentBasis>\n                <ContentBasis>\n                  <NavigationBox />\n                </ContentBasis>\n              </div>\n            ) : (\n              <div>\n                <Box py={2}>\n                  <Typography variant=\"subtitle2\">\n                    <Skeleton variant=\"text\" width={100} />\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    <Skeleton variant=\"text\" />\n                  </Typography>\n                  <TuneCardSkeleton />\n                </Box>\n              </div>\n            )}\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      title={fieldValue}\n      disableGutters\n      disablePaddingTop\n      loading={loading}\n      maxWidth={false}\n      componentViewports={{ BottomNav: false }}\n      drawerContents={<DrawerNavigation {...createNavigationProps(previous, next, '/artist')} />}\n    >\n      <VirtualizedSwipeableViews\n        index={tab}\n        onChangeIndex={_onChangeIndex}\n        slideRenderer={slideRenderer}\n        slideCount={artists.length}\n        resistance\n      />\n    </Layout>\n  );\n}\n\nexport default ArtistTemplate;\n\nexport const query = graphql`\n  query ArtistTemplate($fieldValue: String!) {\n    allProgram(filter: { playlist: { elemMatch: { artist: { glob: $fieldValue } } } }, sort: { fields: week, order: ASC }) {\n      edges {\n        node {\n          id\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          categories\n          fields {\n            slug\n          }\n          guests\n          subtitle\n          week\n          year\n          playlist {\n            artist\n            corner\n            id\n            indexInWeek\n            index\n            kana\n            label\n            name\n            nation\n            producer\n            selector\n            title\n            week\n            year\n            youtube\n          }\n        }\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports[\"default\"] = _default;","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports[\"default\"] = _default;"],"sourceRoot":""}