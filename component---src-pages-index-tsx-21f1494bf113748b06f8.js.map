{"version":3,"sources":["webpack:///./src/components/Jumbotron.tsx","webpack:///../node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///../gatsby-theme-aoi/src/layouts/JumbotronLayout/index.tsx","webpack:///./src/components/NavigationBox/index.tsx","webpack:///./src/pages/index.tsx","webpack:///../gatsby-theme-aoi/src/components/ListItemLink.tsx"],"names":["useStyles","makeStyles","theme","createStyles","jumbotronBg","imgUrl","height","backgroundColor","palette","grey","backgroundImage","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","subtitle","title","artists","classes","overflow","className","variant","gutterBottom","component","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","withStyles","boxSizing","flexWrap","width","margin","minWidth","breakpoint","styles","forEach","themeSpacing","generateGutter","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","JumbotronLayout","jumbotron","disableGutters","children","disablePaddingTop","Container","Box","py","transition","transitions","create","background","paper","NavigationBox","icon","label","to","ButtonBase","GatsbyLink","IndexPage","console","log","data","firstSong","allProgram","edges","accum","node","playlist","tune","youtube","componentViewports","BottomNav","Typography","List","map","index","ListItemLink","fields","slug","primaryText","secondaryText","week","date","divider","button","inset","useMediaQuery","primary","secondary"],"mappings":"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","file":"component---src-pages-index-tsx-21f1494bf113748b06f8.js","sourcesContent":["import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\ninterface StyleProps {\n  height: number;\n  imgUrl?: string;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ imgUrl }) => ({\n      height: '100%',\n      backgroundColor: theme.palette.grey[700],\n      backgroundImage: imgUrl ? `url(${imgUrl})` : null,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: imgUrl ? 'blur(6px) brightness(0.8)' : null,\n      transform: imgUrl ? 'scale(1.1)' : null\n    }),\n    jumbotronText: ({ height }) => ({\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2)\n      }\n    }),\n    jumbotronTitle: {\n      fontWeight: 'bold'\n    }\n  })\n);\n\ninterface Props {\n  header?:\n    | string\n    | JSX.Element\n    | JSX.Element[]\n    | (JSX.Element | JSX.Element[])[];\n  title: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  height?: number;\n  artists?:\n    | string\n    | JSX.Element\n    | JSX.Element[]\n    | (JSX.Element | JSX.Element[])[];\n  subtitle?:\n    | string\n    | JSX.Element\n    | JSX.Element[]\n    | (JSX.Element | JSX.Element[])[];\n  imgUrl?: string;\n}\n\nfunction Jumbotron({\n  header,\n  subtitle,\n  title,\n  artists,\n  imgUrl,\n  height = 300\n}: Props) {\n  const classes = useStyles({ imgUrl, height });\n  return (\n    <Box height={height} overflow=\"hidden\" position=\"relative\">\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        <Typography variant=\"subtitle2\">{header}</Typography>\n        <Typography\n          variant=\"h2\"\n          className={classes.jumbotronTitle}\n          gutterBottom\n        >\n          {title}\n        </Typography>\n        {subtitle ? (\n          <Typography variant=\"subtitle1\">{subtitle}</Typography>\n        ) : null}\n        {artists ? (\n          <Typography variant=\"body2\" component=\"div\">\n            {artists}\n          </Typography>\n        ) : null}\n      </div>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import * as React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Layout, { LayoutProps } from '../../layout';\n\ntype Props = {\n  jumbotron: JSX.Element | JSX.Element[];\n} & LayoutProps;\n\nexport default function JumbotronLayout({ jumbotron, disableGutters, children, maxWidth = false, ...props }: Props) {\n  return (\n    <Layout maxWidth={false} disableGutters disablePaddingTop {...props}>\n      {jumbotron}\n      <Container maxWidth={maxWidth} disableGutters={disableGutters}>\n        <Box py={4}>{children}</Box>\n      </Container>\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Link as GatsbyLink } from 'gatsby';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 120,\n      height: 120,\n      padding: theme.spacing(1),\n      boxSizing: 'border-box',\n      transition: theme.transitions.create('background'),\n      '&:hover': {\n        backgroundColor: theme.palette.background.paper,\n      },\n    },\n  })\n);\n\ninterface Props {\n  icon: JSX.Element;\n  label: string;\n  to: string;\n}\n\nfunction NavigationBox({ icon, label, to }: Props) {\n  const classes = useStyles();\n  return (\n    <ButtonBase className={classes.root} component={GatsbyLink} to={to}>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box display=\"flex\" justifyContent=\"center\">\n          {icon}\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          {label}\n        </Box>\n      </Box>\n    </ButtonBase>\n  );\n}\n\nexport default NavigationBox;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Layout from 'gatsby-theme-aoi/src/layouts/JumbotronLayout';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport Jumbotron from '../components/Jumbotron';\nimport JunkList from '../components/JunkList';\nimport ProgramSummary from '../components/ProgramSummary';\nimport NavigationBox from '../components/NavigationBox';\nimport {\n  ProgramIcon,\n  ArtistIcon,\n  CategoryIcon,\n  SelectorIcon,\n  CornerIcon\n} from '../icons';\nimport { IndexQuery } from '../../graphql-types';\n\ninterface Props {\n  //location: LocationWithState;\n}\n\nfunction IndexPage(props: Props) {\n  console.log(props);\n  const data = useStaticQuery<IndexQuery>(graphql`\n    query Index {\n      allProgram(sort: { fields: week, order: DESC }, limit: 8) {\n        edges {\n          node {\n            id\n            title\n            week\n            date(formatString: \"YYYY-MM-DD\")\n            subtitle\n            year\n            categories\n            guests\n            fields {\n              slug\n            }\n            playlist {\n              artist\n              corner\n              id\n              index\n              indexInWeek\n              kana\n              label\n              producer\n              nation\n              selector\n              title\n              week\n              year\n              youtube\n            }\n          }\n        }\n      }\n    }\n  `);\n  const [firstSong] = data.allProgram.edges.reduce(\n    (accum, { node }) => [\n      ...accum,\n      ...node.playlist.filter(tune => tune.youtube !== '')\n    ],\n    []\n  );\n  const jumbotron = (\n    <Jumbotron\n      title=\"SPITZ草野マサムネのロック大陸漫遊記 プレイリスト集\"\n      header=\"TOKYO-FM 全国38局ネットで放送中\"\n      imgUrl={`https://i.ytimg.com/vi/${firstSong.youtube}/0.jpg`}\n      height={346}\n    />\n  );\n\n  return (\n    <Layout\n      maxWidth=\"md\"\n      componentViewports={{ BottomNav: false }}\n      jumbotron={jumbotron}\n    >\n      <Typography variant=\"h5\" component=\"h2\">\n        最新のプレイリスト\n      </Typography>\n      <List>\n        {data.allProgram.edges.map(({ node }, index) => (\n          <ListItemLink\n            key={index}\n            to={node.fields.slug}\n            primaryText={node.title}\n            secondaryText={`第${node.week}回 ${node.date}`}\n            divider\n          />\n        ))}\n      </List>\n      <Grid>\n        <Grid item xs={6} sm={4} md={2}>\n          <NavigationBox\n            icon={<ProgramIcon />}\n            label=\"放送回\"\n            to=\"/programs/\"\n          />\n        </Grid>\n        <Grid item xs={6} sm={4} md={2}>\n          <NavigationBox\n            icon={<ArtistIcon />}\n            label=\"アーティスト\"\n            to=\"/artists/\"\n          />\n        </Grid>\n        <Grid item xs={6} sm={4} md={2}>\n          <NavigationBox\n            icon={<CategoryIcon />}\n            label=\"放送テーマ\"\n            to=\"/categories/\"\n          />\n        </Grid>\n        <Grid item xs={6} sm={4} md={2}>\n          <NavigationBox\n            icon={<SelectorIcon />}\n            label=\"選曲者\"\n            to=\"/selectors/\"\n          />\n        </Grid>\n        <Grid item xs={6} sm={4} md={2}>\n          <NavigationBox\n            icon={<CornerIcon />}\n            label=\"コーナー\"\n            to=\"/corners/\"\n          />\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = {}> = Omit<ListItemProps, 'ref'> &\n  Pick<MuiLinkProps, 'color'> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n    inset?: boolean;\n  } & Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nfunction ListItemLink({ color = 'inherit', button = false, inset = false, to, primaryText, secondaryText, ...props }: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n\n  return isMobile || button ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      <ListItemText primary={primaryText} secondary={secondaryText} inset={inset} />\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      <ListItemText\n        inset={inset}\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n"],"sourceRoot":""}