{"version":3,"sources":["webpack:///../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","webpack:///../node_modules/@material-ui/core/esm/colors/purple.js","webpack:///../node_modules/@material-ui/core/esm/colors/lime.js","webpack:///./src/utils/getNationColor.ts","webpack:///./src/utils/graphql-hooks/useAllSelectors.tsx"],"names":["createSvgIcon","path","displayName","Component","props","ref","createElement","muiName","memo","forwardRef","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","colorScheme","JPN","blue","UK","orange","US","green","FR","purple","CAN","red","AUS","lime","schemeNations","Object","keys","getNationColor","nation","isDark","grey","useGetNationColor","useTheme","palette","type","React","useAllSelectors","data","allProgram","group","filter","fieldValue","map","edges","reduce","accum","curr","d","node","id","indexOf","removeMultiple","playlist","tune","selector","sort","a","b","length"],"mappings":"2FAAA,mFAOe,SAASA,EAAcC,EAAMC,GAC1C,IAAIC,EAAY,SAAmBC,EAAOC,GACxC,OAAoB,IAAMC,cAAc,IAAS,YAAS,CACxDD,IAAKA,GACJD,GAAQH,IAUb,OADAE,EAAUI,QAAU,IAAQA,QACR,IAAMC,KAAmB,IAAMC,WAAWN,M,wMCLjD,EAhBF,CACXO,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,W,YCEO,EAhBJ,CACTb,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,W,YCVFC,EAAc,CAClBC,IAAKC,IACLC,GAAIC,IACJC,GAAIC,IACJC,GAAIC,EACJC,IAAKC,IACLC,IAAKC,GAIMC,EAAgBC,OAAOC,KAAKf,GAE1B,SAASgB,EAAeC,EAAgBC,GACrD,YADqE,IAAhBA,OAAS,GAC/C,QAAXD,GAA+B,OAAXA,GAA8B,OAAXA,GAA8B,OAAXA,GAA8B,QAAXA,GAA+B,QAAXA,EAC5FC,EAASlB,EAAYiB,GAAQ,KAAOjB,EAAYiB,GAAQ,KAExDE,IAAK,KAIT,SAASC,IACd,IAAMF,EAAqC,SAA5BG,cAAWC,QAAQC,KAClC,OAAOC,eAAkB,SAACP,GAAD,OAAoBD,EAAeC,EAAQC,KAAS,CAACA,M,4GCZzE,SAASO,IACd,IAAMC,EAAO,OAgCb,OAAOF,WAAc,WACnB,OAAOE,EAAKC,WAAWC,MACpBC,QAAO,SAACD,GAAD,MAAgC,WAArBA,EAAME,cACxBC,KAAI,SAACH,GAAU,MACRI,EAed,SAAwBA,GACtB,OAAOA,EAAMC,QAAwB,SAACC,EAAOC,GAC3C,OAAID,EAAMH,KAAI,SAACK,GAAD,OAAOA,EAAEC,KAAKC,MAAIC,QAAQJ,EAAKE,KAAKC,KAAO,EAAUJ,EACnE,sBAAWA,GAAX,CAAkBC,MACjB,IAnBiBK,CAAeZ,EAAMI,OACnC,MAAO,CACLF,WAAU,UAAEF,EAAME,kBAAR,QAAsB,WAChCE,QACAS,SAAUT,EAAMC,QACd,SAACC,EAAOC,GAAR,OACEA,EAAKE,KAAKI,SAAV,sBAAyBP,GAAzB,YAAmCC,EAAKE,KAAKI,SAASZ,QAAO,SAACa,GAAD,OAAUA,aAAA,EAAAA,EAAMC,YAAaf,EAAME,gBAAhG,YAAmHI,KACrH,QAILU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEL,SAASM,OAASF,EAAEJ,SAASM,QAAUD,EAAEd,MAAMe,OAASF,EAAEb,MAAMe,YACnF,CAACrB,M","file":"fcde4a6f4b323dda9a5db2def4a26f1dd590c792-d5c3874453f6deed9463.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","var lime = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\nexport default lime;","import * as React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { blue, orange, green, red, purple, lime, grey } from '@material-ui/core/colors';\n\nconst colorScheme = {\n  JPN: blue,\n  UK: orange,\n  US: green,\n  FR: purple,\n  CAN: red,\n  AUS: lime,\n};\n\nexport type SchemeNations = keyof typeof colorScheme;\nexport const schemeNations = Object.keys(colorScheme);\n\nexport default function getNationColor(nation: string, isDark = false) {\n  if (nation === 'JPN' || nation === 'UK' || nation === 'US' || nation === 'FR' || nation === 'AUS' || nation === 'CAN') {\n    return isDark ? colorScheme[nation][300] : colorScheme[nation][500];\n  } else {\n    return grey[500];\n  }\n}\n\nexport function useGetNationColor() {\n  const isDark = useTheme().palette.type === 'dark';\n  return React.useCallback((nation: string) => getNationColor(nation, isDark), [isDark]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllSelectorsQuery } from '../../../graphql-types';\n\ntype SelectorsGroup = AllSelectorsQuery['allProgram']['group'][number];\ntype SelectorsEdge = SelectorsGroup['edges'][number];\ntype SelectorsPlaylist = NonNullable<SelectorsEdge['node']['playlist']>[number];\n\nexport interface CategoryItem {\n  fieldValue: string;\n  edges: SelectorsEdge[];\n  playlist: SelectorsPlaylist[];\n}\n\nexport function useAllSelectors(): CategoryItem[] {\n  const data = useStaticQuery<AllSelectorsQuery>(graphql`\n    query AllSelectors {\n      allProgram {\n        group(field: playlist___selector) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              fields {\n                slug\n              }\n              playlist {\n                id\n                indexInWeek\n                title\n                artist\n                year\n                nation\n                selector\n                youtube\n                corner\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return React.useMemo(() => {\n    return data.allProgram.group\n      .filter((group) => group.fieldValue !== '草野マサムネ')\n      .map((group) => {\n        const edges = removeMultiple(group.edges);\n        return {\n          fieldValue: group.fieldValue ?? 'selector',\n          edges,\n          playlist: edges.reduce<SelectorsPlaylist[]>(\n            (accum, curr) =>\n              curr.node.playlist ? [...accum, ...curr.node.playlist.filter((tune) => tune?.selector === group.fieldValue)] : [...accum],\n            []\n          ),\n        };\n      })\n      .sort((a, b) => b.playlist.length - a.playlist.length || b.edges.length - a.edges.length);\n  }, [data]);\n}\n\nfunction removeMultiple(edges: SelectorsEdge[]) {\n  return edges.reduce<SelectorsEdge[]>((accum, curr) => {\n    if (accum.map((d) => d.node.id).indexOf(curr.node.id) >= 0) return accum;\n    return [...accum, curr];\n  }, []);\n}\n"],"sourceRoot":""}