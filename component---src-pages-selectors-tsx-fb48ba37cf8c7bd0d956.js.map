{"version":3,"sources":["webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/components/LazyViewer.tsx","webpack:///./src/utils/useDividedArray.tsx","webpack:///../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///../node_modules/react-intersection-observer/react-intersection-observer.esm.js","webpack:///./src/pages/selectors.tsx"],"names":["TunesByProgram","program","filter","Box","py","Typography","variant","component","week","date","gutterBottom","AppLink","to","fields","slug","title","playlist","map","tune","TuneCard","key","id","DummyItem","DisplayOnScreen","children","margin","once","useInView","rootMargin","triggerOnce","ref","inView","LazyViewer","programs","divisor","dividedItems","sorter","useSorter","React","sort","a","b","reduce","accum","curr","index","filtered","length","getPlaylistLength","push","useDividedPrograms","renderItems","d","i","v","condition","message","Error","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","INSTANCE_MAP","Map","OBSERVER_MAP","ROOT_IDS","consecutiveRootId","observe","element","callback","options","threshold","_options","root","has","observerId","get","set","toString","getRootId","observerInstance","IntersectionObserver","instance","observer","thresholds","Array","isArray","unobserve","itemsLeft","rootObserved","forEach","item","disconnect","changes","intersection","isIntersecting","intersectionRatio","some","undefined","_React$Component","subClass","superClass","InView","_this","_len","args","_key","concat","entry","node","props","setState","observeNode","state","onChange","create","constructor","__proto__","_proto","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","_this$props","handleChange","render","_this$state","isPlainChildren","handleNode","_this$props2","as","tag","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","initialState","_React$useState","setRef","current","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","SelectorsPage","location","useLocation","selectors","useAllSelectors","initialSelector","hash","decodeURI","slice","initialValue","fieldValue","selector","setValue","window","history","replaceState","tabSticky","componentViewports","BottomNav","tabs","event","newValue","scrollButtons","aria-label","label","onChangeIndex","resistance","edges"],"mappings":"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","file":"component---src-pages-selectors-tsx-fb48ba37cf8c7bd0d956.js","sourcesContent":["import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport TuneCard from './TuneCard';\nimport { Program, ProgramPlaylist } from '../../graphql-types';\n\ninterface Props {\n  program: Pick<Program, 'week' | 'date' | 'fields' | 'title' | 'playlist'>;\n  filter?: (tune?: ProgramPlaylist) => boolean;\n}\n\nfunction TunesByProgram({ program, filter = () => true }: Props) {\n  return (\n    <Box py={2}>\n      <Typography variant=\"subtitle2\" component=\"span\">\n        第{program.week}回 {program.date}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        <AppLink to={program.fields.slug}>{program.title}</AppLink>\n      </Typography>\n      {program.playlist.filter(filter).map((tune) => (\n        <TuneCard key={tune.id} tune={tune} />\n      ))}\n    </Box>\n  );\n}\n\nexport default TunesByProgram;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useInView } from 'react-intersection-observer';\nimport TunesByProgram from './TunesByProgram';\nimport { TuneCardSkeleton } from './TuneCard';\nimport { useDividedPrograms } from '../utils/useDividedArray';\nimport { QueriedProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nfunction DummyItem() {\n  return (\n    <Box py={4}>\n      <TuneCardSkeleton />\n    </Box>\n  );\n}\n\ninterface DisplayOnScreenProps {\n  children: JSX.Element | JSX.Element[];\n  margin?: number;\n  once?: boolean;\n}\n\nfunction DisplayOnScreen({ children, margin = 0, once = true }: DisplayOnScreenProps) {\n  const [ref, inView] = useInView({\n    rootMargin: `${margin}px`,\n    triggerOnce: once,\n  });\n\n  return <div ref={ref}>{inView ? children : <DummyItem />}</div>;\n}\n\ninterface Props {\n  programs: QueriedProgram[];\n  divisor?: number;\n  filter?: (tune: ProgramPlaylist) => boolean;\n}\n\nfunction LazyViewer({ programs, filter = () => true, divisor = 15 }: Props) {\n  const dividedItems = useDividedPrograms(programs, divisor, filter);\n  const renderItems = React.useMemo(() => {\n    return dividedItems.map((d, i) =>\n      i === 0 ? (\n        <div key={i}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </div>\n      ) : (\n        <DisplayOnScreen key={i} margin={40}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </DisplayOnScreen>\n      )\n    );\n  }, [dividedItems]);\n  return <div>{renderItems}</div>;\n}\n\nexport default LazyViewer;\n","import * as React from 'react';\nimport useSorter from './useSorter';\nimport { AbstractProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nexport default function useDividedArray<T>(items: T[], divisor: number) {\n  return React.useMemo(() => {\n    if (items.length <= divisor) {\n      return [items];\n    } else {\n      // ex. length = 105, divisor = 20, result = 6\n      const result = Math.ceil(items.length / divisor);\n      return Array.from({ length: result }, (d, i) => {\n        return items.slice(i * divisor, (i + 1) * divisor);\n      });\n    }\n  }, [items, divisor]);\n}\n\nexport function useDividedPrograms(\n  programs: AbstractProgram[],\n  divisor: number,\n  filter: (tune: ProgramPlaylist) => boolean = () => true\n): AbstractProgram[][] {\n  const sorter = useSorter();\n  return React.useMemo(() => {\n    return programs\n      .sort((a, b) => sorter(a.week - b.week))\n      .reduce<AbstractProgram[][]>((accum, curr, index) => {\n        const filtered = {\n          ...curr,\n          playlist: curr.playlist.filter(filter),\n        };\n        if (index === 0) {\n          return [[filtered]];\n        }\n        if (getPlaylistLength(accum[accum.length - 1]) < divisor) {\n          accum[accum.length - 1].push(filtered);\n          return accum;\n        } else {\n          return [...accum, [filtered]];\n        }\n      }, []);\n  }, [programs, divisor, filter, sorter]);\n}\n\nfunction getPlaylistLength(programs: AbstractProgram[]) {\n  return programs.reduce((accum, curr) => accum + curr.playlist.length, 0);\n}\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  }\n\n  throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\nimport invariant from 'tiny-invariant';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar INSTANCE_MAP = new Map();\nvar OBSERVER_MAP = new Map();\nvar ROOT_IDS = new Map();\nvar consecutiveRootId = 0;\n/**\n * Generate a unique ID for the root element\n * @param root\n */\n\nfunction getRootId(root) {\n  if (!root) return '';\n  if (ROOT_IDS.has(root)) return ROOT_IDS.get(root);\n  consecutiveRootId += 1;\n  ROOT_IDS.set(root, consecutiveRootId.toString());\n  return ROOT_IDS.get(root) + '_';\n}\n/**\n * Monitor element, and trigger callback when element becomes inView\n * @param element {HTMLElement}\n * @param callback {Function} Called with inView\n * @param options {Object} InterSection observer options\n * @param options.threshold {Number} Number between 0 and 1, indicating how much of the element should be inView before triggering\n * @param options.root {HTMLElement}\n * @param options.rootMargin {String} The CSS margin to apply to the root element.\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  } // IntersectionObserver needs a threshold to trigger, so set it to 0 if it's not defined.\n  // Modify the options object, since it's used in the onChange handler.\n\n\n  if (!options.threshold) options.threshold = 0;\n  var _options = options,\n      root = _options.root,\n      rootMargin = _options.rootMargin,\n      threshold = _options.threshold; // Validate that the element is not being used in another <Observer />\n\n  !!INSTANCE_MAP.has(element) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\\nMake sure the `ref` is only used by a single <Observer /> instance.\\n\\n%s\") : invariant(false) : void 0;\n  /* istanbul ignore if */\n\n  if (!element) return; // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  // An observer with the same options can be reused, so lets use this fact\n\n  var observerId = getRootId(root) + (rootMargin ? threshold.toString() + \"_\" + rootMargin : threshold.toString());\n  var observerInstance = OBSERVER_MAP.get(observerId);\n\n  if (!observerInstance) {\n    observerInstance = new IntersectionObserver(onChange, options);\n    /* istanbul ignore else  */\n\n    if (observerId) OBSERVER_MAP.set(observerId, observerInstance);\n  }\n\n  var instance = {\n    callback: callback,\n    element: element,\n    inView: false,\n    observerId: observerId,\n    observer: observerInstance,\n    // Make sure we have the thresholds value. It's undefined on a browser like Chrome 51.\n    thresholds: observerInstance.thresholds || (Array.isArray(threshold) ? threshold : [threshold])\n  };\n  INSTANCE_MAP.set(element, instance);\n  observerInstance.observe(element);\n  return instance;\n}\n/**\n * Stop observing an element. If an element is removed from the DOM or otherwise destroyed,\n * make sure to call this method.\n * @param element {Element}\n */\n\n\nfunction unobserve(element) {\n  if (!element) return;\n  var instance = INSTANCE_MAP.get(element);\n\n  if (instance) {\n    var observerId = instance.observerId,\n        observer = instance.observer;\n    var root = observer.root;\n    observer.unobserve(element); // Check if we are still observing any elements with the same threshold.\n\n    var itemsLeft = false; // Check if we still have observers configured with the same root.\n\n    var rootObserved = false;\n    /* istanbul ignore else  */\n\n    if (observerId) {\n      INSTANCE_MAP.forEach(function (item, key) {\n        if (key !== element) {\n          if (item.observerId === observerId) {\n            itemsLeft = true;\n            rootObserved = true;\n          }\n\n          if (item.observer.root === root) {\n            rootObserved = true;\n          }\n        }\n      });\n    }\n\n    if (!rootObserved && root) ROOT_IDS[\"delete\"](root);\n\n    if (observer && !itemsLeft) {\n      // No more elements to observe for threshold, disconnect observer\n      observer.disconnect();\n    } // Remove reference to element\n\n\n    INSTANCE_MAP[\"delete\"](element);\n  }\n}\n\nfunction onChange(changes) {\n  changes.forEach(function (intersection) {\n    var isIntersecting = intersection.isIntersecting,\n        intersectionRatio = intersection.intersectionRatio,\n        target = intersection.target;\n    var instance = INSTANCE_MAP.get(target); // Firefox can report a negative intersectionRatio when scrolling.\n\n    /* istanbul ignore else */\n\n    if (instance && intersectionRatio >= 0) {\n      // If threshold is an array, check if any of them intersects. This just triggers the onChange event multiple times.\n      var inView = instance.thresholds.some(function (threshold) {\n        return instance.inView ? intersectionRatio > threshold : intersectionRatio >= threshold;\n      });\n\n      if (isIntersecting !== undefined) {\n        // If isIntersecting is defined, ensure that the element is actually intersecting.\n        // Otherwise it reports a threshold of 0\n        inView = inView && isIntersecting;\n      }\n\n      instance.inView = inView;\n      instance.callback(inView, intersection);\n    }\n  });\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\n * Monitors scroll, and triggers the children function with updated props\n *\n <InView>\n {({inView, ref}) => (\n   <h1 ref={ref}>{`${inView}`}</h1>\n )}\n </InView>\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      inView: false,\n      entry: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"node\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNode\", function (node) {\n      if (_this.node) {\n        unobserve(_this.node);\n\n        if (!node && !_this.props.triggerOnce) {\n          _this.setState({\n            inView: false,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (inView, entry) {\n      // Only trigger a state update if inView has changed.\n      // This prevents an unnecessary extra state update during mount, when the element stats outside the viewport\n      if (inView !== _this.state.inView || inView) {\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    !this.node ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-intersection-observer: No DOM node found. Make sure you forward \\\"ref\\\" to the root DOM element you want to observe.\") : invariant(false) : void 0;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold) {\n      unobserve(this.node);\n      this.observeNode();\n    }\n\n    if (prevState.inView !== this.state.inView) {\n      if (this.state.inView && this.props.triggerOnce) {\n        unobserve(this.node);\n        this.node = null;\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.node) {\n      unobserve(this.node);\n      this.node = null;\n    }\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin;\n    observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        inView = _this$state.inView,\n        entry = _this$state.entry;\n\n    if (!isPlainChildren(this.props)) {\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        triggerOnce = _this$props2.triggerOnce,\n        threshold = _this$props2.threshold,\n        root = _this$props2.root,\n        rootMargin = _this$props2.rootMargin,\n        onChange = _this$props2.onChange,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\"]);\n\n    return createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\n_defineProperty(InView, \"displayName\", 'InView');\n\n_defineProperty(InView, \"defaultProps\", {\n  threshold: 0,\n  triggerOnce: false\n});\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nvar initialState = {\n  inView: false,\n  entry: undefined\n};\n\nfunction useInView(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ref = useRef();\n\n  var _React$useState = useState(initialState),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (ref.current) {\n      unobserve(ref.current);\n    }\n\n    if (node) {\n      observe(node, function (inView, intersection) {\n        setState({\n          inView: inView,\n          entry: intersection\n        });\n\n        if (inView && options.triggerOnce) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve(node);\n        }\n      }, options);\n    } // Store a reference to the node, so we can unobserve it later\n\n\n    ref.current = node;\n  }, [options.threshold, options.root, options.rootMargin, options.triggerOnce]);\n  useEffect(function () {\n    if (!ref.current && state !== initialState && !options.triggerOnce) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState(initialState);\n    }\n  });\n  return [setRef, state.inView, state.entry];\n}\n\nexport default InView;\nexport { InView, useInView };","import * as React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useLocation, WindowLocation } from '@reach/router';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layouts/TabPageLayout';\nimport TabPane from 'gatsby-theme-aoi/src/layout/TabPane';\nimport LazyViewer from '../components/LazyViewer';\n//import { useSelectors } from '../utils/graphql-hooks';\nimport { useAllSelectors } from '../utils/graphql-hooks/useAllSelectors';\n\ntype LocationWithState = WindowLocation & {\n  state?: {\n    selector?: string;\n  };\n};\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nfunction SelectorsPage() {\n  const location: LocationWithState = useLocation();\n  // [[name, programs]]\n  const selectors = useAllSelectors();\n  const initialSelector = location.hash !== '' ? decodeURI(location.hash.slice(1)) : null;\n  const initialValue =\n    selectors.map((d) => d.fieldValue).indexOf(initialSelector) >= 0\n      ? selectors.map((d) => d.fieldValue).indexOf(initialSelector)\n      : location.state && location.state.selector\n      ? selectors.map((d) => d.fieldValue).indexOf(location.state.selector)\n      : 0;\n  const [value, setValue] = React.useState(initialValue);\n  const _handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n    setValue(newValue);\n  };\n  const _handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n  React.useEffect(() => {\n    if (window) window.history.replaceState(value, '', `#${selectors[value].fieldValue}`);\n  }, [value]);\n\n  return (\n    <Layout\n      title={`${selectors[value].fieldValue}の選曲`}\n      tabSticky\n      componentViewports={{ BottomNav: false }}\n      tabs={\n        <Tabs value={value} onChange={_handleChange} variant=\"scrollable\" scrollButtons=\"auto\" aria-label=\"scrollable auto tabs example\">\n          {selectors.map((d) => (\n            <Tab key={d.fieldValue} label={`${d.fieldValue} ${d.playlist.length}`} />\n          ))}\n        </Tabs>\n      }\n    >\n      <BindKeyboardSwipeableViews index={value} onChangeIndex={_handleChangeIndex} resistance>\n        {selectors.map((d, index) => (\n          <TabPane key={index} value={value} index={index}>\n            <LazyViewer programs={d.edges.map((v) => v.node)} divisor={15} filter={(tune) => tune.selector === d.fieldValue} />\n          </TabPane>\n        ))}\n      </BindKeyboardSwipeableViews>\n    </Layout>\n  );\n}\n\nexport default SelectorsPage;\n"],"sourceRoot":""}