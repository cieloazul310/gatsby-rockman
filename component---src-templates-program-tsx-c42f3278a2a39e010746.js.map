{"version":3,"sources":["webpack:///./src/templates/program.tsx","webpack:///./src/utils/createDescriptionString.ts","webpack:///../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///../gatsby-theme-aoi/src/components/ListItemLink.tsx"],"names":["VirtualizedSwipeableViews","bindKeyboard","virtualize","SwipeableViews","ProgramTemplate","data","pageContext","program","previous","next","index","slug","allPrograms","useAllPrograms","categories","useCategories","description","week","title","date","subtitle","guests","dt","Date","getFullYear","getMonth","getDate","length","join","createDescriptionString","React","loading","setLoading","tab","setTab","timer","setTimeout","navigate","fields","clearTimeout","disableGutters","disablePaddingTop","maxWidth","componentViewports","BottomNav","drawerContents","DrawerNavigation","createNavigationProps","onChangeIndex","i","slideRenderer","key","item","Jumbotron","header","playlist","undefined","imgUrl","img","Container","Box","pt","map","tune","TuneCard","id","PageNavigation","category","List","subheader","ListSubheader","fieldValue","edges","slice","v","ListItemLink","node","selected","to","primaryText","secondaryText","divider","NavigationBox","slideCount","resistance","query","ListItemAvatar","props","ref","classes","className","other","context","root","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","name","color","button","inset","avatar","secondaryAction","useMediaQuery","theme","breakpoints","down","component","GatsbyLink","primary","secondary"],"mappings":"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","file":"component---src-templates-program-tsx-c42f3278a2a39e010746.js","sourcesContent":["import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard, virtualize, SlideRenderProps } from 'react-swipeable-views-utils';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Layout from 'gatsby-theme-aoi/src/layout';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport Jumbotron from '../components/Jumbotron';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport TuneCard, { TuneCardSkeleton } from '../components/TuneCard';\nimport PageNavigation from '../components/PageNavigation';\nimport NavigationBox from '../components/NavigationBox';\nimport { useAllPrograms, useCategories } from '../utils/graphql-hooks';\nimport createDescriptionString from '../utils/createDescriptionString';\nimport { QueriedProgram } from '../types';\nimport { ProgramTemplateQuery } from '../../graphql-types';\n\nconst VirtualizedSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\n\ninterface Props {\n  data: ProgramTemplateQuery;\n  pageContext: {\n    slug: string;\n    previous: QueriedProgram;\n    next: QueriedProgram;\n    index: number;\n  };\n}\n\nfunction ProgramTemplate({ data, pageContext }: Props) {\n  const { program } = data;\n  const { previous, next, index, slug } = pageContext;\n  const allPrograms = useAllPrograms();\n  const categories = useCategories((program?.categories as string[]) ?? []);\n  const description = createDescriptionString(program);\n  const [loading, setLoading] = React.useState(false);\n  const [tab, setTab] = React.useState(index);\n  const _onChangeIndex = (i: number) => {\n    setTab(i);\n  };\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (tab !== index) {\n        setLoading(true);\n        navigate(allPrograms[tab]?.fields?.slug ?? '#');\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [tab, index, allPrograms]);\n\n  function slideRenderer({ index, key }: SlideRenderProps) {\n    const item = allPrograms[index];\n    return (\n      <div key={key}>\n        <Jumbotron\n          title={item.title ?? 'Artist'}\n          header={`第${item.week}回 ${item.date} 全${item.playlist?.length ?? 0}曲`}\n          subtitle={item.subtitle ?? undefined}\n          imgUrl={item.img ?? undefined}\n        />\n        <Container maxWidth=\"md\">\n          <Box pt={4}>\n            {item.fields?.slug === slug ? (\n              <div>\n                {program?.playlist?.map((tune, index) => (tune ? <TuneCard key={tune.id ?? index} tune={tune} /> : null))}\n                <PageNavigation {...createNavigationProps(previous, next)} />\n                <div>\n                  {categories.map((category, index) => (\n                    <List key={index} subheader={<ListSubheader>{category.fieldValue}</ListSubheader>}>\n                      {category.edges.slice(0, 5).map((v) => (\n                        <ListItemLink\n                          key={v.node.id}\n                          selected={v.node.id === program?.id}\n                          to={v.node.fields?.slug ?? '#'}\n                          primaryText={v.node.title ?? 'Program'}\n                          secondaryText={`第${v.node.week}回 ${v.node.date}`}\n                          divider\n                        />\n                      ))}\n                    </List>\n                  ))}\n                </div>\n                <NavigationBox />\n              </div>\n            ) : (\n              <div>\n                <TuneCardSkeleton />\n                <TuneCardSkeleton />\n                <TuneCardSkeleton />\n              </div>\n            )}\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      title={program?.title ?? '放送回'}\n      description={description}\n      disableGutters\n      disablePaddingTop\n      maxWidth={false}\n      loading={loading}\n      componentViewports={{ BottomNav: false }}\n      drawerContents={<DrawerNavigation {...createNavigationProps(previous, next)} />}\n    >\n      <VirtualizedSwipeableViews\n        index={tab}\n        onChangeIndex={_onChangeIndex}\n        slideRenderer={slideRenderer}\n        slideCount={allPrograms.length}\n        resistance\n      />\n    </Layout>\n  );\n}\n\nexport default ProgramTemplate;\n\nfunction createNavigationProps(previous: QueriedProgram, next: QueriedProgram) {\n  return {\n    previous: previous ? { to: previous.fields?.slug ?? '#', title: previous.title } : null,\n\n    next: next ? { to: next.fields?.slug ?? '#', title: next.title } : null,\n  };\n}\n\nexport const query = graphql`\n  query ProgramTemplate($slug: String!) {\n    program(fields: { slug: { eq: $slug } }) {\n      id\n      date(formatString: \"YYYY-MM-DD\")\n      subtitle\n      title\n      week\n      year\n      guests\n      categories\n      playlist {\n        artist\n        corner\n        id\n        index\n        indexInWeek\n        label\n        kana\n        name\n        nation\n        producer\n        selector\n        title\n        year\n        week\n        youtube\n      }\n    }\n  }\n`;\n","import { Program } from '../../graphql-types';\n\nexport default function DescriptionString({ week, title, date, subtitle, guests }: Partial<Program>): string {\n  const dt = new Date(date);\n  const year = dt.getFullYear();\n  const month = dt.getMonth() + 1;\n  const day = dt.getDate();\n  return [\n    `スピッツ・草野マサムネがパーソナリティを務める`,\n    `「SPITZ 草野マサムネのロック大陸漫遊記」`,\n    `${year}年${month}月${day}日放送の`,\n    `第${week}回`,\n    `「${title}」`,\n    subtitle ? `〜${subtitle}〜` : ``,\n    `のプレイリスト。`,\n    guests?.length ? `ゲストは${guests.join('、')}。` : ``,\n  ].join('');\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = Record<string, unknown>> = Omit<ListItemProps, 'ref'> &\n  Pick<MuiLinkProps, 'color'> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n    inset?: boolean;\n    avatar?: JSX.Element;\n    secondaryAction?: JSX.Element;\n  } & Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nfunction ListItemLink({\n  color = 'inherit',\n  button = false,\n  inset = false,\n  to,\n  primaryText,\n  secondaryText,\n  avatar,\n  secondaryAction,\n  ...props\n}: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n\n  return isMobile || button ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText primary={primaryText} secondary={secondaryText} inset={inset} />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText\n        inset={inset}\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n"],"sourceRoot":""}