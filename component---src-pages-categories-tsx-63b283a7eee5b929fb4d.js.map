{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./src/utils/sortByYomi.ts","webpack:///./node_modules/gatsby-theme-aoi/src/components/ListItemLink.tsx","webpack:///./src/utils/graphql-hooks/useAllPrograms.tsx","webpack:///./src/utils/graphql-hooks/useAllArtists.tsx","webpack:///./src/utils/graphql-hooks/useAllCategories.tsx","webpack:///./src/utils/graphql-hooks/useAllNations.tsx","webpack:///./src/utils/graphql-hooks/useAllYears.tsx","webpack:///./src/utils/graphql-hooks/useAllTunes.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js"],"names":["BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","CategoriesPage","location","useLocation","hash","state","categories","useAllCategories","fieldValues","map","fieldValue","initialCategory","decodeURI","slice","initialValue","indexOf","category","React","tab","setTab","sorter","useSorter","window","history","replaceState","title","tabSticky","componentViewports","BottomNav","tabs","value","onChange","event","newValue","variant","scrollButtons","aria-label","d","index","key","label","edges","length","onChangeIndex","resistance","sort","a","b","node","week","v","id","to","fields","slug","primaryText","secondaryText","date","divider","maxWidth","sortArtists","artists","options","sortType","sortByEdges","sortByYomi","tunes","sortByTunes","getYomi","kana","localeCompare","artistName","the","ListItemLink","color","button","inset","avatar","secondaryAction","props","useMediaQuery","theme","breakpoints","down","component","GatsbyLink","primary","secondary","useAllPrograms","data","useStaticQuery","allProgram","img","playlist","filter","tune","youtube","useAllArtists","group","item","reduce","accum","curr","removeMultiple","artist","nation","undefined","useArtists","limit","allArtists","useCategories","includes","useAllNations","nations","Array","from","Set","useSchemeNations","allNations","schemeNations","schemed","notSchemed","useAllYears","allTunes","year","parseInt","useDecades","years","forEach","Error","allYears","first","Math","floor","last","Date","getFullYear","_","i","decade","items","ListItemAvatar","ref","classes","className","other","context","root","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","name"],"mappings":"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","file":"component---src-pages-categories-tsx-63b283a7eee5b929fb4d.js","sourcesContent":["import * as React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport List from '@material-ui/core/List';\nimport Container from '@material-ui/core/Container';\nimport { useLocation, WindowLocation } from '@reach/router';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layouts/TabPageLayout';\nimport TabPane from 'gatsby-theme-aoi/src/layout/TabPane';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport ContentBasis from '../components/ContentBasis';\nimport NavigationBox from '../components/NavigationBox';\nimport useSorter from '../utils/useSorter';\nimport { useAllCategories } from '../utils/graphql-hooks';\n\ntype LocationWithState = WindowLocation & {\n  state?: {\n    category?: string;\n  };\n};\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\nfunction CategoriesPage() {\n  const location = useLocation() as LocationWithState;\n  const { hash, state } = location;\n  const categories = useAllCategories();\n  const fieldValues = categories.map(({ fieldValue }) => fieldValue);\n  const initialCategory = hash !== '' ? decodeURI(hash.slice(1)) : null;\n  // @TODO: add Hash support\n  const initialValue =\n    fieldValues.indexOf(initialCategory) >= 0\n      ? fieldValues.indexOf(initialCategory)\n      : state?.category\n      ? fieldValues.indexOf(state.category)\n      : 0;\n  const [tab, setTab] = React.useState(initialValue);\n  const sorter = useSorter();\n  const _handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newValue: number) => {\n    setTab(newValue);\n  };\n  const _handleChangeIndex = (index: number) => {\n    setTab(index);\n  };\n  React.useEffect(() => {\n    if (window && typeof window === 'object') window.history.replaceState(tab, '', `#${categories[tab].fieldValue}`);\n  }, [tab, categories]);\n\n  return (\n    <Layout\n      title={categories[tab]?.fieldValue ?? 'Category'}\n      tabSticky\n      componentViewports={{ BottomNav: false }}\n      tabs={\n        <Tabs value={tab} onChange={_handleChange} variant=\"scrollable\" scrollButtons=\"auto\" aria-label=\"scrollable auto tabs example\">\n          {categories.map((d, index) => (\n            <Tab key={d.fieldValue ?? index} label={`${d.fieldValue} ${d.edges.length}`} />\n          ))}\n        </Tabs>\n      }\n    >\n      <BindKeyboardSwipeableViews index={tab} onChangeIndex={_handleChangeIndex} resistance>\n        {categories.map((d, index) => (\n          <TabPane key={index} value={tab} index={index}>\n            <List>\n              {d.edges\n                .sort((a, b) => sorter(a.node.week && b.node.week ? a.node.week - b.node.week : 0))\n                .map((v) => (\n                  <ListItemLink\n                    key={v.node.id}\n                    to={v.node.fields?.slug ?? '#'}\n                    primaryText={v.node.title ?? 'Program'}\n                    secondaryText={`第${v.node.week}回 ${v.node.date}`}\n                    divider\n                  />\n                ))}\n            </List>\n          </TabPane>\n        ))}\n      </BindKeyboardSwipeableViews>\n      <Container maxWidth=\"md\">\n        <ContentBasis>\n          <NavigationBox />\n        </ContentBasis>\n      </Container>\n    </Layout>\n  );\n}\n\nexport default CategoriesPage;\n","import { ArtistItem } from './graphql-hooks';\n\nexport type SortType = 'abc' | 'edges' | 'tunes';\n\ninterface SortArtistsOptions {\n  sortType?: SortType;\n  sortAsc?: boolean;\n}\n\nexport default function sortArtists(artists: ArtistItem[], options: SortArtistsOptions = {}) {\n  const sortType = options.sortType || 'abc';\n  return [...artists].sort((a, b) =>\n    sortType === 'edges'\n      ? sortByEdges(a, b) || sortByYomi(a, b)\n      : sortType === 'tunes'\n      ? sortByTunes(a, b) || sortByYomi(a, b)\n      : sortByYomi(a, b)\n  );\n}\n\nexport function sortByYomi(a: ArtistItem, b: ArtistItem) {\n  return getYomi(a.fieldValue, a.kana).localeCompare(getYomi(b.fieldValue, b.kana));\n}\n\nexport function sortByEdges(a: ArtistItem, b: ArtistItem) {\n  return -(a.edges.length - b.edges.length);\n}\n\nexport function sortByTunes(a: ArtistItem, b: ArtistItem) {\n  return -(a.tunes.length - b.tunes.length);\n}\n\nexport function getYomi(artistName: string, kana?: string) {\n  const the = artistName.slice(0, 4);\n  if (the === 'The ' || the === 'THE ' || the === 'the ') return artistName.slice(4);\n  return kana || artistName;\n}\n\nexport function encodeArtistName(artistName: string) {\n  return encodeURIComponent(artistName.replace(/[' ']+/g, '_'));\n}\n\nexport function decodeArtistName(artistName: string) {\n  return decodeURIComponent(artistName.replace(/['_']+/g, ' '));\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = Record<string, unknown>> = Omit<ListItemProps, 'ref'> &\n  Pick<MuiLinkProps, 'color'> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n    inset?: boolean;\n    avatar?: JSX.Element;\n    secondaryAction?: JSX.Element;\n  } & Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nfunction ListItemLink({\n  color = 'inherit',\n  button = false,\n  inset = false,\n  to,\n  primaryText,\n  secondaryText,\n  avatar,\n  secondaryAction,\n  ...props\n}: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n\n  return isMobile || button ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText primary={primaryText} secondary={secondaryText} inset={inset} />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText\n        inset={inset}\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllProgramQuery } from '../../../graphql-types';\n\nexport type ProgramEdge = AllProgramQuery['allProgram']['edges'][number];\n\nexport function useAllPrograms() {\n  const data = useStaticQuery<AllProgramQuery>(graphql`\n    query AllProgram {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.edges.map(({ node }) => {\n      const [img] =\n        node.playlist?.filter((tune, index) => index !== 0 && tune?.youtube && tune.youtube !== '').map((tune) => tune?.youtube) ?? [];\n      return {\n        ...node,\n        img: img ? `https://i.ytimg.com/vi/${img}/0.jpg` : null,\n      };\n    });\n  }, [data.allProgram.edges]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport sortArtists, { SortType } from '../sortByYomi';\nimport { AllArtistsQuery } from '../../../graphql-types';\n\ntype ArtistGroup = AllArtistsQuery['allProgram']['group'][number];\ntype ArtistEdge = ArtistGroup['edges'][number];\ntype ArtistTune = NonNullable<NonNullable<ArtistEdge['node']['playlist']>[number]>;\n\nexport interface ArtistItem {\n  fieldValue: string;\n  kana?: string;\n  nation: string;\n  edges: ArtistEdge[];\n  tunes: ArtistTune[];\n  img?: string;\n}\n\nexport function useAllArtists() {\n  const data = useStaticQuery<AllArtistsQuery>(graphql`\n    query AllArtists {\n      allProgram(sort: { fields: date, order: ASC }) {\n        group(field: playlist___artist) {\n          edges {\n            node {\n              id\n              playlist {\n                artist\n                kana\n                nation\n                youtube\n              }\n            }\n          }\n          fieldValue\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.group.map((item) => {\n      const edges = removeMultiple(item.edges).map(({ node }) => ({\n        ...node,\n        playlist: (node?.playlist?.filter((tune) => tune?.artist === item.fieldValue) ?? []) as ArtistTune[],\n      }));\n      const tunes = edges.reduce<ArtistTune[]>((accum, curr) => (curr.playlist ? [...accum, ...curr.playlist] : accum), []);\n      const [{ kana, nation }] = tunes;\n      const [img] = tunes\n        .filter((tune) => tune?.youtube && tune.youtube !== '')\n        .map((tune) => tune?.youtube)\n        .slice(-1);\n\n      return {\n        fieldValue: item.fieldValue ?? '',\n        kana: kana ?? undefined,\n        nation: nation ?? '',\n        edges,\n        tunes,\n        img: img ? `https://i.ytimg.com/vi/${img}/0.jpg` : undefined,\n      };\n    });\n  }, [data]);\n}\n\nfunction removeMultiple(edges: ArtistEdge[]) {\n  return edges.reduce<ArtistEdge[]>((accum, curr) => {\n    if (accum.map((d) => d.node.id).indexOf(curr.node.id) >= 0) return accum;\n    return [...accum, curr];\n  }, []);\n}\n\nexport function useArtists(sortType: SortType, limit = 0) {\n  const allArtists = useAllArtists();\n  return React.useMemo(() => {\n    return sortArtists(allArtists, { sortType }).slice(0, limit || allArtists.length);\n  }, [sortType, limit, allArtists]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { AllCategoriesQuery } from '../../../graphql-types';\n\nexport function useAllCategories() {\n  const data = useStaticQuery<AllCategoriesQuery>(graphql`\n    query AllCategories {\n      allProgram(sort: { fields: week, order: ASC }) {\n        group(field: categories) {\n          fieldValue\n          edges {\n            node {\n              id\n              week\n              title\n              date(formatString: \"YYYY-MM-DD\")\n              fields {\n                slug\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    return data.allProgram.group.sort((a, b) => b.edges.length - a.edges.length);\n  }, [data]);\n}\n\nexport function useCategories(fieldValues: string[]) {\n  const categories = useAllCategories();\n  return React.useMemo(() => {\n    return categories.filter((category) => category.fieldValue && fieldValues.includes(category.fieldValue));\n  }, [fieldValues, categories]);\n}\n","import * as React from 'react';\nimport { useAllArtists } from './useAllArtists';\nimport { schemeNations } from '../getNationColor';\n\nexport function useAllNations() {\n  const allArtists = useAllArtists();\n  const nations = Array.from(new Set(allArtists.map((artist) => artist.nation)));\n\n  return React.useMemo(() => {\n    return nations\n      .map((nation) => ({\n        nation,\n        artists: allArtists.filter((artist) => nation === artist.nation).length,\n        tunes: allArtists.filter((artist) => nation === artist.nation).reduce((accum, curr) => accum + curr.tunes.length, 0),\n      }))\n      .sort((a, b) => b.artists - a.artists || a.nation.localeCompare(b.nation));\n  }, [nations, allArtists]);\n}\n\nexport function useSchemeNations() {\n  const allNations = useAllNations();\n  type NationItem = typeof allNations[number];\n  return React.useMemo(() => {\n    const [schemed, notSchemed] = allNations.reduce<[NationItem[], NationItem[]]>(\n      (accum, curr) => (schemeNations.includes(curr.nation) ? [[...accum[0], curr], [...accum[1]]] : [[...accum[0]], [...accum[1], curr]]),\n      [[], []]\n    );\n    return [\n      ...schemed,\n      notSchemed.reduce<NationItem>(\n        (accum, curr) => ({\n          ...accum,\n          artists: accum.artists + curr.artists,\n          tunes: accum.tunes + curr.tunes,\n        }),\n        {\n          nation: 'others',\n          artists: 0,\n          tunes: 0,\n        }\n      ),\n    ];\n  }, [allNations]);\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useAllTunes } from './useAllTunes';\nimport { AllYearsQuery } from '../../../graphql-types';\n\nexport function useAllYears() {\n  const allTunes = useAllTunes();\n  const data = useStaticQuery<AllYearsQuery>(graphql`\n    query AllYears {\n      allProgram {\n        group(field: playlist___year) {\n          fieldValue\n        }\n      }\n    }\n  `);\n  return React.useMemo(\n    () =>\n      data.allProgram.group.map(({ fieldValue }) => ({\n        fieldValue: fieldValue,\n        tunes: allTunes.filter((tune) => tune?.year === parseInt(fieldValue ?? '0', 10)),\n      })),\n    [allTunes, data]\n  );\n}\n\nexport function useDecades(years: number[] = []) {\n  years.forEach((year) => {\n    if (year % 10 !== 0) throw new Error();\n  });\n  const allYears = useAllYears();\n\n  return React.useMemo(() => {\n    const first = Math.floor(parseInt(allYears[0].fieldValue ?? '1960', 10) / 10) * 10;\n    const last = Math.floor(new Date().getFullYear() / 10) * 10;\n    const decades = years.length ? years : Array.from({ length: (last - first) / 10 + 1 }, (_, i) => first + i * 10);\n    return decades.map((decade) => {\n      const items = allYears.filter(({ fieldValue }) => Math.floor(parseInt(fieldValue ?? '0', 10) / 10) === decade / 10);\n      return {\n        fieldValue: `${decade}s`,\n        value: items.reduce((accum, curr) => accum + curr.tunes.length, 0),\n        items,\n      };\n    });\n  }, [allYears, years]);\n}\n","import * as React from 'react';\nimport { useAllPrograms, ProgramEdge } from './useAllPrograms';\n\nexport function useAllTunes() {\n  const allProgram = useAllPrograms();\n  type Playlist = NonNullable<ProgramEdge['node']['playlist']>;\n  return React.useMemo(() => allProgram.reduce<Playlist>((accum, curr) => (curr.playlist ? [...accum, ...curr.playlist] : accum), []), [\n    allProgram,\n  ]);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);"],"sourceRoot":""}