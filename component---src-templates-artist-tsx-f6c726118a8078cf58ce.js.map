{"version":3,"sources":["webpack:///./src/components/Jumbotron.tsx","webpack:///./src/components/DrawerNavigation.tsx","webpack:///./src/utils/useSorter.tsx","webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/components/LazyViewer.tsx","webpack:///./src/utils/useDividedArray.tsx","webpack:///./src/components/PageNavigation.tsx","webpack:///./src/components/RelatedArtists.tsx","webpack:///./src/templates/artist.tsx","webpack:///../node_modules/@material-ui/icons/ArrowBack.js","webpack:///../node_modules/@material-ui/icons/ArrowForward.js"],"names":["useStyles","makeStyles","theme","createStyles","jumbotronBg","imgUrl","height","backgroundColor","palette","grey","backgroundImage","undefined","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","position","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","artists","margin","artist","marginRight","Jumbotron","header","subtitle","title","classes","overflow","className","variant","component","gutterBottom","map","key","DrawerPageNavigation","previous","next","subheader","dense","button","to","primary","secondary","useSorter","sort","useAppState","React","value","TunesByProgram","program","Box","py","Typography","week","date","AppLink","fields","slug","playlist","tune","index","TuneCard","id","DummyItem","DisplayOnScreen","children","once","useInView","rootMargin","triggerOnce","ref","inView","LazyViewer","programs","divisor","dividedItems","sorter","a","b","reduce","accum","curr","filtered","length","getPlaylistLength","push","useDividedPrograms","renderItems","d","i","v","root","createNavigationProps","baseUrl","fieldValue","PageNavigation","pr","textAlign","GatsbyLink","pl","item","RelatedArtists","edges","node","Array","from","Set","localeCompare","getRelatedArtists","Button","VirtualizedSwipeableViews","bindKeyboard","virtualize","SwipeableViews","ArtistTemplate","data","pageContext","allArtists","useAllArtists","sortArtists","allProgram","loading","setLoading","tab","setTab","timer","setTimeout","navigate","clearTimeout","disableGutters","disablePaddingTop","maxWidth","componentViewports","BottomNav","drawerContents","DrawerNavigation","onChangeIndex","slideRenderer","tunes","img","Container","pt","ContentBasis","NavigationBox","Skeleton","width","slideCount","resistance","query","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement"],"mappings":"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","file":"component---src-templates-artist-tsx-f6c726118a8078cf58ce.js","sourcesContent":["import * as React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\ninterface StyleProps {\n  height: number;\n  imgUrl?: string;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    jumbotronBg: ({ imgUrl }) => ({\n      height: '100%',\n      backgroundColor: theme.palette.grey[700],\n      backgroundImage: imgUrl ? `url(${imgUrl})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: imgUrl ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: imgUrl ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: ({ height }) => ({\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    }),\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n    artists: {\n      margin: 0,\n      padding: 0,\n    },\n    artist: {\n      display: 'inline-block',\n      marginRight: '.6em',\n    },\n  })\n);\n\ninterface Props {\n  header?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  title: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  height?: number;\n  artists?: string[];\n  subtitle?: string | JSX.Element | JSX.Element[] | (JSX.Element | JSX.Element[])[];\n  imgUrl?: string;\n}\n\nfunction Jumbotron({ header, subtitle, title, artists, imgUrl, height = 300 }: Props) {\n  const classes = useStyles({ imgUrl, height });\n  return (\n    <Box height={height} overflow=\"hidden\" position=\"relative\">\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        <Typography variant=\"subtitle2\">{header}</Typography>\n        <Typography variant=\"h3\" component=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {subtitle ? <Typography variant=\"subtitle1\">{subtitle}</Typography> : null}\n        {artists ? (\n          <ul className={classes.artists}>\n            {artists.map((artist) => (\n              <Typography className={classes.artist} variant=\"subtitle2\" component=\"li\" key={artist}>\n                {artist}\n              </Typography>\n            ))}\n          </ul>\n        ) : null}\n      </div>\n    </Box>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ListItemAppLink from 'gatsby-theme-aoi/src/components/ListItemAppLink';\n//import { QueriedProgram } from '../types';\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction DrawerPageNavigation({ previous, next }: Props) {\n  return (\n    <List subheader={<ListSubheader>Navigation</ListSubheader>}>\n      {previous ? (\n        <ListItemAppLink dense button to={previous.to}>\n          <ListItemIcon>\n            <ArrowBackIcon />\n          </ListItemIcon>\n          <ListItemText primary={previous.title} secondary=\"prev\" />\n        </ListItemAppLink>\n      ) : null}\n      {next ? (\n        <ListItemAppLink dense button to={next.to}>\n          <ListItemIcon>\n            <ArrowForwardIcon />\n          </ListItemIcon>\n          <ListItemText primary={next.title} secondary=\"next\" />\n        </ListItemAppLink>\n      ) : null}\n    </List>\n  );\n}\n\nexport default DrawerPageNavigation;\n","import * as React from 'react';\nimport { useAppState } from 'gatsby-theme-aoi-top-layout/src/utils/AppStateContext';\n\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport TuneCard from './TuneCard';\nimport { Program, ProgramPlaylist } from '../../graphql-types';\n\ninterface Props {\n  program: Pick<Program, 'week' | 'date' | 'fields' | 'title' | 'playlist'>;\n  filter?: (tune?: ProgramPlaylist) => boolean;\n}\n\nfunction TunesByProgram({ program, filter = () => true }: Props) {\n  return (\n    <Box py={2}>\n      <Typography variant=\"subtitle2\" component=\"span\">\n        第{program.week}回 {program.date}\n      </Typography>\n      <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n        <AppLink to={program.fields?.slug ?? '#'}>{program.title}</AppLink>\n      </Typography>\n      {program?.playlist?.filter(filter).map((tune, index) => <TuneCard key={tune?.id ?? index} tune={tune} />) ?? null}\n    </Box>\n  );\n}\n\nexport default TunesByProgram;\n","import * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useInView } from 'react-intersection-observer';\nimport TunesByProgram from './TunesByProgram';\nimport { TuneCardSkeleton } from './TuneCard';\nimport { useDividedPrograms } from '../utils/useDividedArray';\nimport { QueriedProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nfunction DummyItem() {\n  return (\n    <Box py={4}>\n      <TuneCardSkeleton />\n    </Box>\n  );\n}\n\ninterface DisplayOnScreenProps {\n  children: JSX.Element | JSX.Element[];\n  margin?: number;\n  once?: boolean;\n}\n\nfunction DisplayOnScreen({ children, margin = 0, once = true }: DisplayOnScreenProps) {\n  const [ref, inView] = useInView({\n    rootMargin: `${margin}px`,\n    triggerOnce: once,\n  });\n\n  return <div ref={ref}>{inView ? children : <DummyItem />}</div>;\n}\n\ninterface Props {\n  programs: QueriedProgram[];\n  divisor?: number;\n  filter?: (tune: ProgramPlaylist) => boolean;\n}\n\nfunction LazyViewer({ programs, filter = () => true, divisor = 15 }: Props) {\n  const dividedItems = useDividedPrograms(programs, divisor, filter);\n  const renderItems = React.useMemo(() => {\n    return dividedItems.map((d, i) =>\n      i === 0 ? (\n        <div key={i}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </div>\n      ) : (\n        <DisplayOnScreen key={i} margin={40}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v.id} />\n          ))}\n        </DisplayOnScreen>\n      )\n    );\n  }, [dividedItems]);\n  return <div>{renderItems}</div>;\n}\n\nexport default LazyViewer;\n","import * as React from 'react';\nimport useSorter from './useSorter';\nimport { AbstractProgram } from '../types';\nimport { ProgramPlaylist } from '../../graphql-types';\n\nexport default function useDividedArray<T>(items: T[], divisor: number) {\n  return React.useMemo(() => {\n    if (items.length <= divisor) {\n      return [items];\n    } else {\n      // ex. length = 105, divisor = 20, result = 6\n      const result = Math.ceil(items.length / divisor);\n      return Array.from({ length: result }, (d, i) => {\n        return items.slice(i * divisor, (i + 1) * divisor);\n      });\n    }\n  }, [items, divisor]);\n}\n\nexport function useDividedPrograms(\n  programs: AbstractProgram[],\n  divisor: number,\n  filter: (tune: ProgramPlaylist) => boolean = () => true\n): AbstractProgram[][] {\n  const sorter = useSorter();\n  return React.useMemo(() => {\n    return programs\n      .sort((a, b) => sorter(a.week && b.week ? a.week - b.week : 0))\n      .reduce<AbstractProgram[][]>((accum, curr, index) => {\n        const filtered = {\n          ...curr,\n          playlist: curr.playlist?.filter(filter) ?? [],\n        };\n        if (index === 0) {\n          return [[filtered]];\n        }\n        if (getPlaylistLength(accum[accum.length - 1]) < divisor) {\n          accum[accum.length - 1].push(filtered);\n          return accum;\n        } else {\n          return [...accum, [filtered]];\n        }\n      }, []);\n  }, [programs, divisor, filter, sorter]);\n}\n\nfunction getPlaylistLength(programs: AbstractProgram[]) {\n  return programs.reduce((accum, curr) => (curr.playlist ? accum + curr.playlist.length : accum), 0);\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('sm')]: {\n        flexDirection: 'column',\n      },\n    },\n  })\n);\n\ninterface NavigationProps {\n  to: string;\n  title: string;\n}\n\ninterface Props {\n  previous?: NavigationProps;\n  next?: NavigationProps;\n}\n\nfunction PageNavigation({ previous, next }: Props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      {previous ? (\n        <Box py={1} pr={1} textAlign=\"left\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={previous.to}>\n            <ArrowBackIcon />\n            {previous.title}\n          </Button>\n        </Box>\n      ) : null}\n      {next ? (\n        <Box py={1} pl={1} textAlign=\"right\">\n          <Button component={GatsbyLink} variant=\"outlined\" to={next.to}>\n            {next.title}\n            <ArrowForwardIcon />\n          </Button>\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n\nexport default PageNavigation;\n\nexport function PageNavigationSkeleton() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Box p={1} textAlign=\"left\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"circle\" width={24} height={24} />\n          <Skeleton variant=\"text\" width={120} />\n        </Button>\n      </Box>\n      <Box p={1} textAlign=\"right\">\n        <Button variant=\"outlined\">\n          <Skeleton variant=\"text\" width={120} />\n          <Skeleton variant=\"circle\" width={24} height={24} />\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\ninterface Item {\n  fieldValue: string;\n}\n\nexport function createNavigationProps(previous: Item | undefined, next: Item | undefined, baseUrl: string): Props {\n  return {\n    previous: previous\n      ? {\n          to: `${baseUrl}/${previous.fieldValue}/`,\n          title: previous.fieldValue,\n        }\n      : undefined,\n    next: next\n      ? {\n          to: `${baseUrl}/${next.fieldValue}`,\n          title: next.fieldValue,\n        }\n      : undefined,\n  };\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { ArtistTemplateQuery } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: 0,\n    },\n    item: {\n      display: 'inline-block',\n      padding: 0,\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  edges: ArtistTemplateQuery['allProgram']['edges'];\n}\n\nfunction RelatedArtists({ edges }: Props) {\n  const classes = useStyles();\n  return (\n    <ul className={classes.root}>\n      {getRelatedArtists(edges).map((artist) => (\n        <li key={artist} className={classes.item}>\n          <Button component={GatsbyLink} to={`/artist/${artist}/`}>\n            {artist}\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction getRelatedArtists(edges: ArtistTemplateQuery['allProgram']['edges']): string[] {\n  const playlist = edges.map(({ node }) => node.playlist ?? []).reduce((accum, curr) => (accum && curr ? [...accum, ...curr] : accum), []);\n\n  return Array.from(new Set(playlist.map((tune) => tune?.artist ?? ''))).sort((a, b) => a.localeCompare(b));\n}\n\nexport default RelatedArtists;\n","import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport SwipeableViews from 'react-swipeable-views';\nimport { virtualize, bindKeyboard, SlideRenderProps } from 'react-swipeable-views-utils';\nimport Layout from 'gatsby-theme-aoi/src/layout';\nimport Jumbotron from '../components/Jumbotron';\nimport LazyViewer from '../components/LazyViewer';\nimport { TuneCardSkeleton } from '../components/TuneCard';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport PageNavigation, { createNavigationProps } from '../components/PageNavigation';\nimport ContentBasis from '../components/ContentBasis';\nimport NavigationBox from '../components/NavigationBox';\nimport RelatedArtists from '../components/RelatedArtists';\nimport sortArtists from '../utils/sortByYomi';\nimport { useAllArtists } from '../utils/graphql-hooks/';\nimport { ArtistTemplateQuery, Program, ProgramPlaylist } from '../../graphql-types';\n\nconst VirtualizedSwipeableViews = bindKeyboard(virtualize(SwipeableViews));\n\ninterface Artist {\n  fieldValue: string;\n  edges: Program[];\n  tunes: ProgramPlaylist[];\n  img?: string;\n}\n\ninterface Props {\n  data: ArtistTemplateQuery;\n  pageContext: {\n    fieldValue: string;\n    previous?: Artist;\n    next?: Artist;\n    current: Artist;\n    index: number;\n  };\n}\n\nfunction ArtistTemplate({ data, pageContext }: Props) {\n  const allArtists = useAllArtists();\n  const artists = React.useMemo(() => sortArtists(allArtists), [allArtists]);\n  const { previous, next, index, fieldValue } = pageContext;\n  const programs = data.allProgram.edges;\n  const [loading, setLoading] = React.useState(false);\n  const [tab, setTab] = React.useState(index);\n  const _onChangeIndex = (i: number) => {\n    setTab(i);\n  };\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      if (tab !== index) {\n        setLoading(true);\n        navigate(`/artist/${artists[tab].fieldValue}`);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [tab, artists, index]);\n\n  function slideRenderer({ index, key }: SlideRenderProps) {\n    const item = artists[index];\n    return (\n      <div key={key}>\n        <Jumbotron title={item.fieldValue} subtitle={`登場回: ${item.edges.length} 曲数: ${item.tunes.length}`} imgUrl={item.img} />\n        <Container maxWidth=\"md\">\n          <Box pt={4}>\n            {item.fieldValue === fieldValue ? (\n              <div>\n                <LazyViewer programs={programs.map(({ node }) => node)} filter={(tune) => tune.artist === fieldValue} />\n                <ContentBasis>\n                  <PageNavigation {...createNavigationProps(previous, next, '/artist')} />\n                </ContentBasis>\n                {item.fieldValue !== 'スピッツ' ? (\n                  <ContentBasis>\n                    <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                      {item.fieldValue}と同じ回で登場したアーティスト\n                    </Typography>\n                    <RelatedArtists edges={programs} />\n                  </ContentBasis>\n                ) : null}\n                <ContentBasis>\n                  <NavigationBox />\n                </ContentBasis>\n              </div>\n            ) : (\n              <div>\n                <Box py={2}>\n                  <Typography variant=\"subtitle2\">\n                    <Skeleton variant=\"text\" width={100} />\n                  </Typography>\n                  <Typography variant=\"h6\">\n                    <Skeleton variant=\"text\" />\n                  </Typography>\n                  <TuneCardSkeleton />\n                </Box>\n              </div>\n            )}\n          </Box>\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <Layout\n      title={fieldValue}\n      disableGutters\n      disablePaddingTop\n      loading={loading}\n      maxWidth={false}\n      componentViewports={{ BottomNav: false }}\n      drawerContents={<DrawerNavigation {...createNavigationProps(previous, next, '/artist')} />}\n    >\n      <VirtualizedSwipeableViews\n        index={tab}\n        onChangeIndex={_onChangeIndex}\n        slideRenderer={slideRenderer}\n        slideCount={artists.length}\n        resistance\n      />\n    </Layout>\n  );\n}\n\nexport default ArtistTemplate;\n\nexport const query = graphql`\n  query ArtistTemplate($fieldValue: String!) {\n    allProgram(filter: { playlist: { elemMatch: { artist: { glob: $fieldValue } } } }, sort: { fields: week, order: ASC }) {\n      edges {\n        node {\n          id\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          categories\n          fields {\n            slug\n          }\n          guests\n          subtitle\n          week\n          year\n          playlist {\n            artist\n            corner\n            id\n            indexInWeek\n            index\n            kana\n            label\n            name\n            nation\n            producer\n            selector\n            title\n            week\n            year\n            youtube\n          }\n        }\n      }\n    }\n  }\n`;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports.default = _default;"],"sourceRoot":""}