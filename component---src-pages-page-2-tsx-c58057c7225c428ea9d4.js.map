{"version":3,"sources":["webpack:///./src/pages/page-2.tsx"],"names":["SecondPage","data","categories","React","allYaml","edges","map","node","reduce","accum","curr","existedIndex","d","indexOf","sort","a","b","console","log","guests","allTunes","playlist","artists","artist","selectors","selector","title","variant","component","key"],"mappings":"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","file":"component---src-pages-page-2-tsx-c58057c7225c428ea9d4.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Layout from 'gatsby-theme-typescript-material-ui/src/layout';\nimport SimpleNationBar from '../components/SimpleNationBar';\nimport SimpleYearsBar from '../components/SimpleYearsBar';\nimport { AllDataQuery } from '../../graphql-types';\n\nfunction SecondPage() {\n  const data = useStaticQuery<AllDataQuery>(graphql`\n    query AllData {\n      allYaml(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              name\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n          next {\n            title\n            fields {\n              slug\n            }\n            week\n          }\n          previous {\n            fields {\n              slug\n            }\n            title\n            week\n          }\n        }\n      }\n    }\n  `);\n  const categories = React.useMemo(\n    () =>\n      data.allYaml.edges\n        .map(({ node }) => node.categories)\n        .reduce((accum, curr) => [...accum, ...curr], [])\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [data]\n  );\n  console.log(categories);\n\n  const guests = React.useMemo(\n    () =>\n      data.allYaml.edges\n        .map(({ node }) => node.guests)\n        .reduce((accum, curr) => [...accum, ...curr], [])\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [data]\n  );\n  console.log(guests);\n\n  const allTunes = React.useMemo(\n    () =>\n      data.allYaml.edges\n        .map(({ node }) => node.playlist)\n        .reduce((accum, curr) => [...accum, ...curr]),\n    [data]\n  );\n  const artists = React.useMemo(\n    () =>\n      allTunes\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr.artist);\n          if (existedIndex < 0) {\n            return [...accum, [curr.artist, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [allTunes]\n  );\n  const selectors = React.useMemo(\n    () =>\n      allTunes\n        .map(d => d.selector)\n        .reduce((accum, curr) => {\n          const existedIndex = accum.map(d => d[0]).indexOf(curr);\n          if (existedIndex < 0) {\n            return [...accum, [curr, 1]];\n          } else {\n            accum[existedIndex][1] += 1;\n            return accum;\n          }\n        }, [])\n        .sort((a, b) => b[1] - a[1]),\n    [allTunes]\n  );\n\n  console.log(artists);\n\n  return (\n    <Layout title=\"Second Page\">\n      <Typography variant=\"h5\" component=\"h3\">\n        Summary\n      </Typography>\n      <SimpleNationBar playlist={allTunes} />\n      <SimpleYearsBar playlist={allTunes} />\n      <Typography variant=\"h5\" component=\"h3\">\n        カテゴリー\n      </Typography>\n      <div>\n        {categories.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        ゲスト\n      </Typography>\n      <div>\n        {guests.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        選曲者\n      </Typography>\n      <div>\n        {selectors.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n      <Typography variant=\"h5\" component=\"h3\">\n        アーティスト\n      </Typography>\n      <div>\n        {artists.map(d => (\n          <Typography key={d[0]} variant=\"body1\">\n            {d[0]} {d[1]}\n          </Typography>\n        ))}\n      </div>\n    </Layout>\n  );\n}\n\nexport default SecondPage;\n"],"sourceRoot":""}