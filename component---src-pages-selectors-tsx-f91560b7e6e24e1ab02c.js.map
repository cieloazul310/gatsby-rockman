{"version":3,"sources":["webpack:///./src/utils/useSorter.tsx","webpack:///./node_modules/@material-ui/core/esm/colors/purple.js","webpack:///./node_modules/@material-ui/core/esm/colors/lime.js","webpack:///./src/utils/getNationColor.ts","webpack:///./node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/utils/removeMultiple.ts","webpack:///./src/components/TextSpan.tsx","webpack:///./src/components/LazyViewer.tsx","webpack:///./src/utils/useDividedArray.tsx","webpack:///./src/pages/selectors.tsx","webpack:///./src/components/Tune/index.tsx"],"names":["useSorter","sort","useAppState","React","value","useSortProgram","sorter","a","b","week","useSortProgramNode","node","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","colorScheme","JPN","blue","UK","orange","US","green","FR","purple","CAN","red","AUS","lime","schemeNations","Object","keys","isSchemeNations","nation","includes","getNationColor","isDark","grey","useGetNationColor","useTheme","palette","type","Skeleton","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","hasChildren","Boolean","children","root","withChildren","fitContent","heightAuto","style","theme","display","backgroundColor","text","primary","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","name","useStyles","makeStyles","createStyles","padding","spacing","header","title","fontWeight","typography","fontWeightBold","TuneByProgram","tune","color","program","date","to","fields","slug","TunesByProgramSkeleton","Array","from","length","map","_","index","key","TunesByProgram","playlist","id","removeMultiple","arr","getVal","vals","set","Set","val","indexOf","marginRight","TextSpan","DisplayOnScreen","onSeem","margin","once","useInView","rootMargin","triggerOnce","inView","LazyViewer","programs","filter","divisor","dividedItems","sortProgram","reduce","accum","curr","filtered","getPlaylistLength","push","useDividedPrograms","renderItems","d","i","v","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","SelectorsPage","data","selectors","allProgram","allTunes","tunes","indexInWeek","group","fieldValue","selected","selector","toString","totalCount","edges","titles","initialTab","useParseHash","state","undefined","tab","setTab","updater","setUpdateHeight","onItemClicked","useHash","window","scrollTo","tabs","Tabs","onChange","event","newTab","scrollButtons","aria-label","label","onChangeIndex","resistance","animateHeight","updateHeight","TabPane","disableGutters","Jumbotron","Section","Article","List","ListItem","button","onClick","ListItemText","Typography","footer","NavigationBox","alignItems","flexShrink","flexDirection","flexGrow","avatarContainer","nationLabel","nationColor","getContrastText","TuneSkeleton","avatarClass","useAvatarStyles","avatar","src","Tune","youtube","href","target","rel","corner","artist","year"],"mappings":"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","file":"component---src-pages-selectors-tsx-f91560b7e6e24e1ab02c.js","sourcesContent":["import * as React from 'react';\nimport { useAppState } from '../gatsby-theme-aoi-top-layout/utils/AppStateContext';\nimport { Maybe, Program, ProgramPlaylist } from '../../graphql-types';\n\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n\nexport function useSortProgram() {\n  const sorter = useSorter();\n  return (a: Maybe<Pick<Program, 'week'>> | undefined, b: Maybe<Pick<Program, 'week'>> | undefined) =>\n    sorter((a?.week ?? 0) - (b?.week ?? 0));\n}\n\nexport function useSortProgramNode() {\n  const sorter = useSorter();\n  return (a: { node: Maybe<Pick<Program, 'week'>> }, b: { node: Maybe<Pick<Program, 'week'>> }) =>\n    sorter((a?.node?.week ?? 0) - (b?.node?.week ?? 0));\n}\n\nexport function useSortPlaylist() {\n  const sorter = useSorter();\n  return (\n    a: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined,\n    b: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined\n  ) => sorter((a?.week ?? 0) - (b?.week ?? 0) || (a?.indexInWeek ?? 0) - (b?.indexInWeek ?? 0));\n}\n","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","var lime = {\n  50: '#f9fbe7',\n  100: '#f0f4c3',\n  200: '#e6ee9c',\n  300: '#dce775',\n  400: '#d4e157',\n  500: '#cddc39',\n  600: '#c0ca33',\n  700: '#afb42b',\n  800: '#9e9d24',\n  900: '#827717',\n  A100: '#f4ff81',\n  A200: '#eeff41',\n  A400: '#c6ff00',\n  A700: '#aeea00'\n};\nexport default lime;","import * as React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { blue, orange, green, red, purple, lime, grey } from '@material-ui/core/colors';\n\nconst colorScheme = {\n  JPN: blue,\n  UK: orange,\n  US: green,\n  FR: purple,\n  CAN: red,\n  AUS: lime,\n};\n\nexport type SchemeNations = keyof typeof colorScheme;\nexport const schemeNations = Object.keys(colorScheme);\nexport function isSchemeNations(nation: string): nation is SchemeNations {\n  return schemeNations.includes(nation);\n}\n\nexport default function getNationColor(nation: string, isDark = false) {\n  if (isSchemeNations(nation)) {\n    return isDark ? colorScheme[nation][300] : colorScheme[nation][500];\n  } else {\n    return grey[500];\n  }\n}\n\nexport function useGetNationColor() {\n  const isDark = useTheme().palette.type === 'dark';\n  return React.useCallback((nation: string) => getNationColor(nation, isDark), [isDark]);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport Tune, { TuneSkeleton, TuneProps } from './Tune';\nimport TextSpan from './TextSpan';\nimport { Maybe, Program } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0),\n    },\n    header: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  })\n);\n\nexport interface TunesByProgramProps {\n  program: Maybe<\n    Pick<Program, 'id' | 'week' | 'date' | 'fields' | 'title'> & {\n      playlist: TuneProps['tune'][];\n    }\n  >;\n}\n\nfunction TunesByProgram({ program }: TunesByProgramProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>第{program?.week}回</TextSpan>\n          <TextSpan>{program?.date}</TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\">\n          <AppLink to={program?.fields?.slug ?? '#'}>{program?.title}</AppLink>\n        </Typography>\n      </div>\n      <div>{program?.playlist?.map((tune) => <Tune key={tune?.id} tune={tune} />) ?? null}</div>\n    </div>\n  );\n}\n\nexport default TunesByProgram;\n\ninterface TuneByProgramProps {\n  tune: Maybe<\n    TuneProps['tune'] & {\n      program: Maybe<Pick<Program, 'week' | 'date' | 'fields' | 'title'>>;\n    }\n  >;\n}\n\nexport function TuneByProgram({ tune }: TuneByProgramProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>第{tune?.program?.week}回</TextSpan>\n          <TextSpan>{tune?.program?.date}</TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\">\n          <AppLink to={tune?.program?.fields?.slug ?? '#'}>{tune?.program?.title}</AppLink>\n        </Typography>\n      </div>\n      <div>\n        <Tune tune={tune} />\n      </div>\n    </div>\n  );\n}\n\nexport function TunesByProgramSkeleton() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>\n            <Skeleton width={40} />\n          </TextSpan>\n          <TextSpan>\n            <Skeleton width={60} />\n          </TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\" color=\"secondary\">\n          <Skeleton width={260} />\n        </Typography>\n      </div>\n      <div>{Array.from({ length: 4 }).map((_, index) => <TuneSkeleton key={index} />) ?? null}</div>\n    </div>\n  );\n}\n","export function removeMultiple<T>(arr: T[], getVal: (item: T) => unknown): T[] {\n  const vals = arr.map(getVal);\n  const set = new Set(vals);\n  return Array.from(set).map((val) => arr[vals.indexOf(val)]);\n}\n","import * as React from 'react';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(0.5),\n      display: 'inline-block',\n    },\n  })\n);\n\ntype Props = {\n  children?: React.ReactNode | null;\n} & Exclude<TypographyProps, 'children'>;\n\nfunction TextSpan({ children, ...props }: Props) {\n  const classes = useStyles();\n  if (!children) return null;\n  return (\n    <Typography className={classes.root} component=\"span\" {...props} variant={props.variant ?? 'inherit'}>\n      {children}\n    </Typography>\n  );\n}\n\nexport default TextSpan;\n","import * as React from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { TuneProps } from './Tune';\nimport TunesByProgram, { TunesByProgramSkeleton, TunesByProgramProps } from './TunesByProgram';\nimport { useDividedPrograms } from '../utils/useDividedArray';\n\ninterface DisplayOnScreenProps {\n  children: React.ReactNode;\n  margin?: number;\n  once?: boolean;\n  onSeem?: (inView?: boolean) => void;\n}\n\nfunction DisplayOnScreen({ children, onSeem, margin = 0, once = true }: DisplayOnScreenProps) {\n  const [ref, inView] = useInView({\n    rootMargin: `${margin}px`,\n    triggerOnce: once,\n  });\n  React.useEffect(() => {\n    if (inView && onSeem) {\n      onSeem(inView);\n    }\n  }, [inView, onSeem]);\n\n  return (\n    <div ref={ref}>\n      {inView ? (\n        children\n      ) : (\n        <div>\n          <TunesByProgramSkeleton />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface Props {\n  programs: TunesByProgramProps['program'][];\n  divisor?: number;\n  filter?: (tune: TuneProps['tune']) => boolean;\n  onSeem?: (inView?: boolean) => void;\n}\n\nfunction LazyViewer({ programs, onSeem, filter = () => true, divisor = 15 }: Props) {\n  const dividedItems = useDividedPrograms(programs, divisor, filter);\n  const renderItems = React.useMemo(() => {\n    return dividedItems.map((d, i) =>\n      i === 0 ? (\n        <div key={i}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v?.id} />\n          ))}\n        </div>\n      ) : (\n        <DisplayOnScreen key={i} margin={40} onSeem={onSeem}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v?.id} />\n          ))}\n        </DisplayOnScreen>\n      )\n    );\n  }, [dividedItems, onSeem]);\n  return <div>{renderItems}</div>;\n}\n\nexport default LazyViewer;\n","import * as React from 'react';\nimport { TuneProps } from '../components/Tune';\nimport { TunesByProgramProps } from '../components/TunesByProgram';\nimport { useSortProgram } from './useSorter';\n\nexport default function useDividedArray<T>(items: T[], divisor: number) {\n  return React.useMemo(() => {\n    if (items.length <= divisor) {\n      return [items];\n    } else {\n      // ex. length = 105, divisor = 20, result = 6\n      const result = Math.ceil(items.length / divisor);\n      return Array.from({ length: result }, (d, i) => {\n        return items.slice(i * divisor, (i + 1) * divisor);\n      });\n    }\n  }, [items, divisor]);\n}\n\nexport function useDividedPrograms<T extends TunesByProgramProps['program']>(\n  programs: T[],\n  divisor: number,\n  filter: (tune: TuneProps['tune']) => boolean = () => true\n): T[][] {\n  const sortProgram = useSortProgram();\n  return React.useMemo(() => {\n    return programs.sort(sortProgram).reduce<T[][]>((accum, curr, index) => {\n      const filtered = {\n        ...curr,\n        playlist: curr?.playlist?.filter(filter) ?? [],\n      };\n      if (index === 0) {\n        return [[filtered]];\n      }\n      if (getPlaylistLength(accum[accum.length - 1]) < divisor) {\n        accum[accum.length - 1].push(filtered);\n        return accum;\n      } else {\n        return [...accum, [filtered]];\n      }\n    }, []);\n  }, [programs, divisor, filter, sortProgram]);\n}\n\nfunction getPlaylistLength<T extends TunesByProgramProps['program']>(programs: T[]): number {\n  return programs.reduce((accum, curr) => (curr?.playlist ? accum + curr.playlist.length : accum), 0);\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from '../layout/TabLayout';\nimport TabPane from '../layout/TabPane';\nimport Tab from '../components/MuiTab';\nimport Section, { SectionDivider } from '../components/Section';\nimport Article, { Paragraph } from '../components/Article';\nimport Jumbotron from '../components/Jumbotron';\nimport NavigationBox from '../components/NavigationBox';\nimport LazyViewer from '../components/LazyViewer';\nimport { AdInArticle } from '../components/Ads';\nimport { removeMultiple } from '../utils/removeMultiple';\nimport { useParseHash, useHash } from '../utils/useHash';\nimport { SelectorsPageQuery } from '../../graphql-types';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\ninterface WindowState {\n  selector?: string;\n}\n\nfunction SelectorsPage({ data }: PageProps<SelectorsPageQuery, WindowState>) {\n  const selectors = React.useMemo(() => {\n    const { allProgram, allTunes } = data;\n    const tunes = allTunes?.sort((a, b) => (a?.week ?? 0) - (b?.week ?? 0) || (a?.indexInWeek ?? 0) - (b?.indexInWeek ?? 0)) ?? [];\n    return allProgram.group\n      .filter((group) => group.fieldValue !== '草野マサムネ')\n      .map((group, index) => {\n        const selected = tunes.filter((tune) => tune?.selector === group.fieldValue);\n        return {\n          fieldValue: group.fieldValue ?? index.toString(),\n          totalCount: group.totalCount,\n          edges: removeMultiple(group.edges, ({ node }) => node.id).map(({ node }) => ({\n            node: {\n              ...node,\n              playlist: selected.filter((tune) => tune?.week === node.week),\n            },\n          })),\n        };\n      })\n      .sort((a, b) => b.totalCount - a.totalCount || b.edges.length - a.edges.length);\n  }, [data]);\n  const titles = React.useMemo(() => ['', ...selectors.map(({ fieldValue }) => fieldValue)], [selectors]);\n  const initialTab = useParseHash<WindowState>(titles, (state) => state?.selector ?? undefined);\n  const [tab, setTab] = React.useState(initialTab);\n  const [updater, setUpdateHeight] = React.useState<null | (() => void)>(null);\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newTab: number) => {\n    setTab(newTab);\n  };\n  const handleChangeIndex = (index: number) => {\n    setTab(index);\n  };\n  const onItemClicked = (index: number) => () => {\n    setTab(index);\n  };\n  const onSeem = React.useCallback(\n    (inView: boolean) => {\n      if (inView && updater) {\n        updater();\n      }\n    },\n    [updater]\n  );\n  const actionCallbacks = ({ updateHeight }: { updateHeight: () => void }) => {\n    setUpdateHeight(() => updateHeight);\n  };\n\n  useHash(tab, titles);\n  React.useEffect(() => {\n    if (typeof window === 'object') {\n      window.scrollTo(0, 0);\n    }\n  }, [tab]);\n\n  return (\n    <Layout\n      title=\"選曲者\"\n      tabs={\n        <Tabs value={tab} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\" aria-label=\"scrollable auto tabs example\">\n          <Tab label=\"概要\" />\n          {selectors.map((d) => (\n            <Tab key={d.fieldValue} label={`${d.fieldValue} ${d.totalCount}`} />\n          ))}\n        </Tabs>\n      }\n    >\n      <BindKeyboardSwipeableViews\n        index={tab}\n        onChangeIndex={handleChangeIndex}\n        resistance\n        animateHeight={typeof window === 'object'}\n        action={actionCallbacks}\n      >\n        <TabPane index={0} value={tab} disableGutters>\n          <Jumbotron title=\"選曲者\" />\n          <SectionDivider />\n          <Section>\n            <Article>\n              <Paragraph>ロック大陸漫遊記に登場したゲストやリクエストによる選曲を分類したページです。</Paragraph>\n              <List>\n                {selectors.map((selector, index) => (\n                  <ListItem key={index} button onClick={onItemClicked(index + 1)}>\n                    <ListItemText primary={selector.fieldValue} />\n                    <Typography variant=\"button\" component=\"span\">\n                      {selector.totalCount}曲/{selector.edges.length}回\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </Article>\n          </Section>\n        </TabPane>\n        {selectors.map((d, index) => (\n          <TabPane key={index} value={tab} index={index + 1} disableGutters>\n            <Jumbotron title={`${d.fieldValue}の選曲`} footer={`${d.totalCount}曲/${d.edges.length}回`} />\n            <SectionDivider />\n            <Section>\n              <LazyViewer\n                programs={d.edges.map((v) => v.node)}\n                divisor={15}\n                filter={(tune) => tune?.selector === d.fieldValue}\n                onSeem={onSeem}\n              />\n            </Section>\n          </TabPane>\n        ))}\n      </BindKeyboardSwipeableViews>\n      <SectionDivider />\n      <AdInArticle />\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default SelectorsPage;\n\nexport const query = graphql`\n  query SelectorsPage {\n    allProgram(filter: { playlist: { elemMatch: { selector: { regex: \"/^(?!.*草野マサムネ).*$/\" } } } }) {\n      group(field: playlist___selector) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            id\n            week\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n    allTunes(selector: { ne: \"草野マサムネ\" }) {\n      week\n      title\n      artist {\n        name\n      }\n      year\n      indexInWeek\n      corner\n      youtube\n      id\n      nation\n      selector\n    }\n  }\n`;\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport TextSpan from '../TextSpan';\nimport { TuneIcon } from '../../icons';\nimport { useAvatarStyles } from '../../styles';\nimport { useGetNationColor } from '../../utils/getNationColor';\nimport { Maybe, ProgramPlaylist, Artist } from '../../../graphql-types';\n\ninterface StylesProps {\n  nationColor?: string;\n}\n\nconst useStyles = makeStyles<Theme, StylesProps>((theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 0),\n    },\n    left: {\n      display: 'flex',\n      padding: theme.spacing(0, 1),\n      alignItems: 'center',\n      flexShrink: 0,\n    },\n    right: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(0, 1),\n      flexGrow: 1,\n    },\n    avatarContainer: {\n      position: 'relative',\n    },\n    nationLabel: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      padding: '0 .2em',\n      background: ({ nationColor }) => nationColor,\n      color: ({ nationColor }) => (nationColor ? theme.palette.getContrastText(nationColor) : undefined),\n    },\n  })\n);\n\nexport interface TuneProps {\n  tune: Maybe<\n    Pick<ProgramPlaylist, 'id' | 'title' | 'indexInWeek' | 'corner' | 'selector' | 'year' | 'youtube' | 'nation'> & {\n      artist?: Maybe<Pick<Artist, 'name'>>;\n    }\n  >;\n}\n\nfunction Tune({ tune }: TuneProps) {\n  const getNationColor = useGetNationColor();\n  const classes = useStyles({ nationColor: getNationColor(tune?.nation ?? '') });\n  const avatarClass = useAvatarStyles();\n  const avatar = (\n    <div className={classes.avatarContainer}>\n      <Avatar\n        className={avatarClass.avatar}\n        variant=\"square\"\n        src={tune?.youtube ? `https://i.ytimg.com/vi/${tune?.youtube}/0.jpg` : undefined}\n      >\n        <TuneIcon />\n      </Avatar>\n      <div className={classes.nationLabel}>\n        <Typography variant=\"caption\">{tune?.nation}</Typography>\n      </div>\n    </div>\n  );\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {tune?.youtube ? (\n          <a href={`https://youtu.be/${tune?.youtube}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {avatar}\n          </a>\n        ) : (\n          avatar\n        )}\n      </div>\n      <div className={classes.right}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>{`M${tune?.indexInWeek}.`}</TextSpan>\n          <TextSpan>{tune?.corner}</TextSpan>\n          {tune?.selector && tune.selector !== '草野マサムネ' ? <TextSpan>{tune.selector}選曲</TextSpan> : null}\n        </Typography>\n        <div>\n          <Typography>{tune?.title}</Typography>\n          <Typography variant=\"body2\">\n            <TextSpan>\n              {tune?.artist?.name !== 'スピッツ' ? (\n                <AppLink to={`/artist/${tune?.artist?.name}`} color=\"inherit\">\n                  {tune?.artist?.name}\n                </AppLink>\n              ) : (\n                'スピッツ'\n              )}\n            </TextSpan>\n            <TextSpan color=\"textSecondary\">{`(${tune?.year})`}</TextSpan>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tune;\n\nexport function TuneSkeleton() {\n  const classes = useStyles({});\n  const avatarClass = useAvatarStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        <Avatar className={avatarClass.avatar} variant=\"square\" src={undefined}>\n          <TuneIcon />\n        </Avatar>\n      </div>\n      <div className={classes.right}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>\n            <Skeleton width={100} />\n          </TextSpan>\n        </Typography>\n        <div>\n          <Typography>\n            <Skeleton width={160} />\n          </Typography>\n          <Typography variant=\"body2\">\n            <TextSpan>\n              <Skeleton width={100} />\n            </TextSpan>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}