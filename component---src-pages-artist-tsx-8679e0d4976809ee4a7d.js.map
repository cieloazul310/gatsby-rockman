{"version":3,"sources":["webpack:///./src/utils/graphql-hooks/useAllPrograms.tsx","webpack:///./src/pages/artist.tsx"],"names":["useAllPrograms","console","log","data","React","allProgram","edges","map","node","useAllTunes","programs","reduce","accum","curr","playlist","useAllArtists","allTunes","existedIndex","d","indexOf","artist","kana","nation","push","useCategories","categories","filter","program","length","forEach","category","sort","a","b","useCorners","tune","corner","programsContainsCorner","getProgramsContainsValue","filterPlaylist","useSelectors","selector","programsContainsSelector","ArtistPage","useLocation","artists","index","current","setArtist","_onItemClicked","title","key","button","selected","onClick","primary"],"mappings":"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","file":"component---src-pages-artist-tsx-8679e0d4976809ee4a7d.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { QueriedProgram, ArtistItem, CategoryItem, CornerItem, SelectorItem } from '../../types';\nimport { getProgramsContainsValue, filterPlaylist } from '../filterPlaylist';\nimport { AllDataQuery, ProgramPlaylist } from '../../../graphql-types';\n\nexport default function useAllPrograms(): QueriedProgram[] {\n  console.log('useAllPrograms');\n  const data = useStaticQuery<AllDataQuery>(graphql`\n    query {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              name\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => {\n    console.log('useAllPrograms useMemo');\n    return data.allProgram.edges.map(({ node }) => node);\n  }, []);\n}\n\nexport function useAllTunes(): ProgramPlaylist[] {\n  console.log('useAllTunes');\n  const programs = useAllPrograms();\n  return React.useMemo(\n    () => {\n      console.log('useAllTunes useMemo');\n      return programs.reduce((accum, curr) => [...accum, ...curr.playlist], []);\n    },\n    []\n  );\n}\n\nexport function useAllArtists(): ArtistItem[] {\n  console.log('useAllArtists');\n  const allTunes = useAllTunes();\n  return React.useMemo(\n    () =>\n      {\n        console.log('useAllArtists useMemo');\n        return allTunes.reduce<ArtistItem[]>((accum, curr) => {\n        const existedIndex = accum.map(d => d[0]).indexOf(curr.artist);\n        if (existedIndex < 0) {\n          return [...accum, [curr.artist, curr.kana, curr.nation, [curr]]];\n        } else {\n          accum[existedIndex][3].push(curr);\n          return accum;\n        }\n      }, [])},\n    []\n  );\n}\n\nexport function useCategories(): CategoryItem[] {\n  console.log('useCategories');\n  const programs = useAllPrograms();\n  return React.useMemo(() => {\n    console.log('useCategories useMemo');\n    const categories: CategoryItem[] = [];\n    programs.filter(program => program.categories.length).forEach(program => {\n      program.categories.forEach(category => {\n        const existedIndex = categories.map(d => d[0]).indexOf(category);\n        if (existedIndex < 0) {\n          categories.push([category, [program]]);\n        } else {\n          categories[existedIndex][1].push(program);\n        }\n      });\n    });\n    return categories.sort((a, b) => b[1].length - a[1].length);\n  }, []);\n}\n\nexport function useCorners(): CornerItem[] {\n  console.log('useCorners');\n  const programs = useAllPrograms();\n  const allTunes = useAllTunes();\n  return React.useMemo(() => {\n    console.log('useCorners useMemo');\n    return allTunes\n      .filter(tune => tune.corner !== '')\n      .reduce<CornerItem[]>((accum, curr) => {\n        const existedIndex = accum.map(d => d[0]).indexOf(curr.corner);\n        if (existedIndex < 0) {\n          const programsContainsCorner = getProgramsContainsValue(\n            'corner',\n            curr.corner\n          )(programs);\n\n          return [\n            ...accum,\n            [\n              curr.corner,\n              programsContainsCorner,\n              filterPlaylist('corner', curr.corner)(programsContainsCorner)\n                .length\n            ]\n          ];\n        } else {\n          return accum;\n        }\n      }, [])\n      .sort((a, b) => b[2] - a[2]);\n  }, []);\n}\n\nexport function useSelectors(): SelectorItem[] {\n  console.log('useSelectors');\n  const programs = useAllPrograms();\n  const allTunes = useAllTunes();\n  return React.useMemo(() => {\n    console.log('useSelectors useMemo');\n    return allTunes\n      .filter(d => d.selector.length && d.selector !== '草野マサムネ')\n      .reduce<SelectorItem[]>((accum, curr) => {\n        const existedIndex = accum.map(d => d[0]).indexOf(curr.selector);\n        if (existedIndex < 0) {\n          const programsContainsSelector = getProgramsContainsValue(\n            'selector',\n            curr.selector\n          )(programs);\n          return [\n            ...accum,\n            [\n              curr.selector,\n              programsContainsSelector,\n              filterPlaylist(\n                'selector',\n                curr.selector\n              )(programsContainsSelector).length\n            ]\n          ];\n        } else {\n          return accum;\n        }\n      }, [])\n      .sort((a, b) => b[2] - a[2]);\n  }, []);\n}","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n//import Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useLocation } from '@reach/router';\nimport Layout from 'gatsby-theme-typescript-material-ui/src/layout/TabPageLayout';\nimport { useAllArtists } from '../utils/graphql-hooks/useAllPrograms';\nimport { ArtistItem } from '../types';\n/*\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableView from 'react-swipeable-views';\n*/\n\nfunction ArtistPage() {\n  const location = useLocation();\n  const allArtists = useAllArtists();\n  const artists = allArtists\n    .filter(artist => artist[3].length === 1)\n    .filter((artist, index) => index < 20);\n  console.log(artists);\n  const [current, setArtist] = React.useState('');\n  const _onItemClicked = (artist: ArtistItem) => () => {\n    setArtist(artist[0]);\n  };\n  React.useEffect(() => {\n    console.log('useEffect');\n    //window.location.search = `name=${current}`;\n  }, [current]);\n  return (\n    <Layout title={current}>\n      <List>\n        {artists.map((artist, index) => (\n          <ListItem\n            key={index}\n            button\n            selected={current === artist[0]}\n            onClick={_onItemClicked(artist)}\n          >\n            <ListItemText primary={artist[0]} />\n          </ListItem>\n        ))}\n      </List>\n    </Layout>\n  );\n}\n\nexport default ArtistPage;\n"],"sourceRoot":""}