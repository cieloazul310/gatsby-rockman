{"version":3,"sources":["webpack:///./src/utils/graphql-hooks/useProgramTop25.tsx","webpack:///./src/components/Jumbotron.tsx","webpack:///./src/utils/useAnimation.tsx","webpack:///./src/components/index/Stat.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","webpack:///./node_modules/gatsby-theme-aoi/src/components/ListItemLink.tsx","webpack:///./src/components/ProgramItem.tsx"],"names":["useProgramTop25","data","useStaticQuery","React","allArtist","edges","useStyles","makeStyles","theme","createStyles","root","height","overflow","position","jumbotronBg","image","backgroundColor","palette","type","grey","secondary","light","backgroundImage","undefined","backgroundPosition","backgroundSize","filter","transform","jumbotronText","color","display","flexDirection","justifyContent","zIndex","padding","spacing","breakpoints","down","jumbotronTitle","fontWeight","Jumbotron","header","footer","title","classes","className","variant","component","gutterBottom","useAnimation","easingName","duration","delay","elapsed","setTime","animationFrame","timerStop","start","onFrame","Date","now","loop","requestAnimationFrame","timerDelay","setTimeout","cancelAnimationFrame","clearTimeout","useAnimationTimer","n","Math","min","easing","linear","elastic","inExpo","pow","container","alignItems","valueField","flexGrow","icon","label","marginLeft","Stat","value","useInView","triggerOnce","ref","inView","Grid","item","xs","Typography","StatCore","animation","round","Stats","allProgram","fontSize","totalCount","group","IndexPage","top25","images","map","node","fields","Boolean","length","Section","List","subheader","ListSubheader","index","arr","ProgramItem","key","week","program","last","ArtistItemContainer","artists","NavigationBox","ListItemAvatar","props","other","context","alignItemsFlexStart","minWidth","flexShrink","marginTop","name","ListItemLink","button","inset","to","primaryText","secondaryText","avatar","secondaryAction","useMediaQuery","ListItem","GatsbyLink","ListItemText","primary","ListItemSecondaryAction","AppLink","useAvatarStyles","Avatar","src","slug","date","divider"],"mappings":"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","file":"component---src-pages-index-tsx-4efb3e0af5903dd565a6.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { ProgramCountQuery } from '../../../graphql-types';\n\nexport function useProgramTop25() {\n  const data = useStaticQuery<ProgramCountQuery>(graphql`\n    query ProgramCount {\n      allArtist(sort: { fields: programCount, order: DESC }, limit: 25, filter: { name: { ne: \"スピッツ\" } }) {\n        edges {\n          node {\n            id\n            image\n            kana\n            name\n            nation\n            programCount\n            tunesCount\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allArtist.edges, [data]);\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\ninterface StyleProps {\n  image?: string;\n}\nconst height = 240;\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) =>\n  createStyles({\n    root: {\n      height,\n      overflow: 'hidden',\n      position: 'relative',\n    },\n    jumbotronBg: ({ image }) => ({\n      height: '100%',\n      backgroundColor: !image && theme.palette.type === 'light' ? theme.palette.secondary.light : theme.palette.grey[700],\n      backgroundImage: image ? `url(${image})` : undefined,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      filter: image ? 'blur(6px) brightness(0.8)' : undefined,\n      transform: image ? 'scale(1.1)' : undefined,\n    }),\n    jumbotronText: {\n      height: height,\n      color: 'white',\n      position: 'absolute',\n      transform: 'translate(0, -100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      zIndex: 2,\n      padding: theme.spacing(2, 4),\n      [theme.breakpoints.down('xs')]: {\n        padding: theme.spacing(2),\n      },\n    },\n    jumbotronTitle: {\n      fontWeight: 'bold',\n    },\n  })\n);\n\ninterface Props {\n  header?: React.ReactNode;\n  title: React.ReactNode;\n  footer?: React.ReactNode;\n  image?: string;\n}\n\nfunction Jumbotron({ header, footer, title, image }: Props) {\n  const classes = useStyles({ image });\n  return (\n    <div className={classes.root}>\n      <div className={classes.jumbotronBg} />\n      <div className={classes.jumbotronText}>\n        {header ? <Typography variant=\"subtitle2\">{header}</Typography> : null}\n        <Typography variant=\"h5\" component=\"h2\" className={classes.jumbotronTitle} gutterBottom>\n          {title}\n        </Typography>\n        {footer ? <Typography variant=\"subtitle2\">{footer}</Typography> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import * as React from 'react';\n\ntype Easing = {\n  linear: (n: number) => number;\n  elastic: (n: number) => number;\n  inExpo: (n: number) => number;\n};\ntype EasingName = 'linear' | 'elastic' | 'inExpo';\n\n// Hook\nexport default function useAnimation(easingName: EasingName = 'linear', duration = 500, delay = 0) {\n  // The useAnimationTimer hook calls useState every animation frame ...\n  // ... giving us elapsed time and causing a rerender as frequently ...\n  // ... as possible for a smooth animation.\n  const elapsed = useAnimationTimer(duration, delay);\n  // Amount of specified duration elapsed on a scale from 0 - 1\n  const n = Math.min(1, elapsed / duration);\n  // Return altered value based on our specified easing function\n  return easing[easingName](n);\n}\n\n// Some easing functions copied from:\n// https://github.com/streamich/ts-easing/blob/master/src/index.ts\n// Hardcode here or pull in a dependency\nconst easing: Easing = {\n  linear: (n: number) => n,\n  elastic: (n: number) => n * (33 * n * n * n * n - 106 * n * n * n + 126 * n * n - 67 * n + 15),\n  inExpo: (n: number) => Math.pow(2, 10 * (n - 1)),\n};\n\nfunction useAnimationTimer(duration = 1000, delay = 0) {\n  const [elapsed, setTime] = React.useState(0);\n\n  React.useEffect(\n    () => {\n      let animationFrame: number;\n      let timerStop: NodeJS.Timeout;\n      let start: number;\n\n      // Function to be executed on each animation frame\n      function onFrame() {\n        setTime(Date.now() - start);\n        loop();\n      }\n\n      // Call onFrame() on next animation frame\n      function loop() {\n        animationFrame = requestAnimationFrame(onFrame);\n      }\n\n      function onStart() {\n        // Set a timeout to stop things when duration time elapses\n        timerStop = setTimeout(() => {\n          cancelAnimationFrame(animationFrame);\n          setTime(Date.now() - start);\n        }, duration);\n\n        // Start the loop\n        start = Date.now();\n        loop();\n      }\n\n      // Start after specified delay (defaults to 0)\n      const timerDelay = setTimeout(onStart, delay);\n\n      // Clean things up\n      return () => {\n        clearTimeout(timerStop);\n        clearTimeout(timerDelay);\n        cancelAnimationFrame(animationFrame);\n      };\n    },\n    [duration, delay] // Only re-run effect if duration or delay changes\n  );\n\n  return elapsed;\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { useInView } from 'react-intersection-observer';\nimport useAnimation from '../../utils/useAnimation';\nimport { ProgramIcon, ArtistIcon, TuneIcon } from '../../icons';\nimport { StatQuery } from '../../../graphql-types';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      padding: theme.spacing(1),\n    },\n    root: {\n      display: 'flex',\n      padding: theme.spacing(2),\n      alignItems: 'baseline',\n      flexDirection: 'row',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        alignItems: 'inherit',\n        padding: theme.spacing(2, 0),\n      },\n    },\n    title: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    valueField: {\n      display: 'flex',\n      flexGrow: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'baseline',\n    },\n    icon: {\n      display: 'flex',\n      padding: theme.spacing(1, 0.5),\n    },\n    label: {\n      marginLeft: '.5em',\n    },\n  })\n);\n\ninterface Props {\n  icon: React.ReactNode;\n  value: number;\n  label: string;\n  title: string;\n}\n\nexport function Stat({ icon, value, label, title }: Props) {\n  const classes = useStyles();\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n  });\n  return (\n    <Grid item xs={4} ref={ref} className={classes.root}>\n      <div className={classes.title}>\n        <Typography className={classes.icon} variant=\"h5\" component=\"div\">\n          {icon}\n        </Typography>\n        <Typography variant=\"body2\" component=\"span\">\n          {title}\n        </Typography>\n      </div>\n      <div className={classes.valueField}>\n        <Typography variant=\"h5\" component=\"em\">\n          {inView ? <StatCore value={value} /> : <span>0</span>}\n        </Typography>\n        <Typography component=\"span\" className={classes.label}>\n          {label}\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nfunction StatCore({ value }: { value: number }) {\n  const animation = useAnimation('linear', value, 0);\n  return <span>{Math.round(value * animation)}</span>;\n}\n\nexport function StatsFallBack() {\n  return (\n    <Grid container>\n      <Stat icon={<ProgramIcon fontSize=\"inherit\" />} value={0} title=\"放送\" label=\"回\" />\n      <Stat icon={<TuneIcon fontSize=\"inherit\" />} value={0} title=\"曲数\" label=\"曲\" />\n      <Stat icon={<ArtistIcon fontSize=\"inherit\" />} value={0} title=\"アーティスト\" label=\"組\" />\n    </Grid>\n  );\n}\n\nexport default function Stats() {\n  const classes = useStyles();\n  const { allProgram, allArtist } = useStaticQuery<StatQuery>(graphql`\n    query Stat {\n      allProgram {\n        totalCount\n        group(field: playlist) {\n          totalCount\n        }\n      }\n      allArtist {\n        totalCount\n      }\n    }\n  `);\n\n  return (\n    <Grid container className={classes.container}>\n      <Stat icon={<ProgramIcon fontSize=\"inherit\" />} value={allProgram.totalCount} title=\"放送\" label=\"回\" />\n      <Stat icon={<TuneIcon fontSize=\"inherit\" />} value={allProgram.group[0].totalCount} title=\"曲数\" label=\"曲\" />\n      <Stat icon={<ArtistIcon fontSize=\"inherit\" />} value={allArtist.totalCount} title=\"アーティスト\" label=\"組\" />\n    </Grid>\n  );\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Layout from '../layout';\nimport Jumbotron from '../components/Jumbotron';\nimport NavigationBox from '../components/NavigationBox';\nimport ProgramItem from '../components/ProgramItem';\nimport ArtistItemContainer from '../components/ArtistItemContainer';\nimport Section, { SectionDivider } from '../components/Section';\nimport Stats from '../components/index/Stat';\nimport { AdInArticle } from '../components/Ads';\nimport { useProgramTop25 } from '../utils/graphql-hooks/useProgramTop25';\nimport { IndexQuery } from '../../graphql-types';\n\nfunction IndexPage({ data }: PageProps<IndexQuery>) {\n  /*\n  const data = useStaticQuery<IndexQuery>(graphql`\n    query Index {\n      allProgram(sort: { fields: week, order: DESC }, limit: 8) {\n        edges {\n          node {\n            id\n            title\n            week\n            date(formatString: \"YYYY-MM-DD\")\n            fields {\n              slug\n              image\n            }\n          }\n        }\n      }\n    }\n  `);\n  */\n  const top25 = useProgramTop25();\n  const images = data.allProgram.edges\n    .map(({ node }) => node.fields?.image ?? undefined)\n    .filter((image): image is string => Boolean(image));\n\n  return (\n    <Layout>\n      <Jumbotron title=\"ロック大陸漫遊記 プレイリスト集\" footer=\"since 2018\" image={images.length ? images[0] : undefined} />\n      <SectionDivider />\n      <Section>\n        <Stats />\n      </Section>\n      <SectionDivider />\n      <Section>\n        <List subheader={<ListSubheader>過去2か月の放送</ListSubheader>}>\n          {data.allProgram.edges.map(({ node }, index, arr) => (\n            <ProgramItem key={node.week} program={node} last={index === arr.length - 1} />\n          ))}\n        </List>\n      </Section>\n      <SectionDivider />\n      <AdInArticle />\n      <SectionDivider />\n      <Section>\n        <ArtistItemContainer title=\"登場回数Top25\" artists={top25.map(({ node }) => node)} />\n      </Section>\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query Index {\n    allProgram(sort: { fields: week, order: DESC }, limit: 8) {\n      edges {\n        node {\n          id\n          title\n          week\n          date(formatString: \"YYYY-MM-DD\")\n          fields {\n            slug\n            image\n          }\n        }\n      }\n    }\n  }\n`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport { Link as GatsbyLink, GatsbyLinkProps } from 'gatsby';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\nimport { Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AppLink from './AppLink';\n\ntype ListItemLinkProps<T = Record<string, unknown>> = Omit<ListItemProps, 'ref'> &\n  Pick<MuiLinkProps, 'color'> & {\n    to: string;\n    primaryText: string;\n    secondaryText?: string;\n    inset?: boolean;\n    avatar?: JSX.Element;\n    secondaryAction?: JSX.Element;\n  } & Omit<GatsbyLinkProps<T>, 'ref' | 'button'>;\n\nfunction ListItemLink({\n  color = 'inherit',\n  button = false,\n  inset = false,\n  to,\n  primaryText,\n  secondaryText,\n  avatar,\n  secondaryAction,\n  ...props\n}: ListItemLinkProps) {\n  const isMobile = useMediaQuery((theme: Theme) => theme.breakpoints.down('xs'));\n\n  return isMobile || button ? (\n    <ListItem component={GatsbyLink} to={to} button {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText primary={primaryText} secondary={secondaryText} inset={inset} />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  ) : (\n    <ListItem {...props}>\n      {avatar ? <ListItemAvatar>{avatar}</ListItemAvatar> : null}\n      <ListItemText\n        inset={inset}\n        primary={\n          <AppLink to={to} color={color}>\n            {primaryText}\n          </AppLink>\n        }\n        secondary={secondaryText || null}\n      />\n      {secondaryAction ? <ListItemSecondaryAction>{secondaryAction}</ListItemSecondaryAction> : null}\n    </ListItem>\n  );\n}\nexport default ListItemLink;\n","import * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemLink from 'gatsby-theme-aoi/src/components/ListItemLink';\nimport { useAvatarStyles } from '../styles';\nimport { Maybe, Program } from '../../graphql-types';\n\ninterface Props {\n  program: Maybe<Pick<Program, 'fields' | 'title' | 'week' | 'date'>>;\n  last?: boolean;\n}\n\nfunction ProgramItem({ program, last }: Props) {\n  const classes = useAvatarStyles();\n  return (\n    <ListItemLink\n      avatar={<Avatar className={classes.avatar} src={program?.fields?.image ?? undefined} variant=\"square\" />}\n      to={program?.fields?.slug ?? '#'}\n      primaryText={program?.title ?? 'タイトル'}\n      secondaryText={`第${program?.week}回 ${program?.date}`}\n      divider={!last}\n      inset\n    />\n  );\n}\n\nexport default ProgramItem;\n"],"sourceRoot":""}