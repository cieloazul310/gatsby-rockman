{"version":3,"sources":["webpack:///./src/utils/useSorter.tsx","webpack:///./src/utils/graphql-hooks/useAllSelectors.tsx","webpack:///./node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","webpack:///./src/components/TunesByProgram.tsx","webpack:///./src/utils/removeMultiple.ts","webpack:///./src/components/TextSpan.tsx","webpack:///./src/components/LazyViewer.tsx","webpack:///./src/utils/useDividedArray.tsx","webpack:///./src/pages/selectors.tsx","webpack:///./src/components/Tune/index.tsx"],"names":["useSorter","sort","useAppState","React","value","useSortProgram","sorter","a","b","week","useSortProgramNode","node","useAllSelectors","data","useStaticQuery","allProgram","group","filter","fieldValue","map","edges","removeMultiple","id","totalCount","length","Skeleton","props","ref","_props$animation","animation","classes","className","_props$component","component","Component","height","_props$variant","variant","width","other","hasChildren","Boolean","children","root","withChildren","fitContent","heightAuto","style","theme","display","backgroundColor","palette","text","primary","type","marginTop","marginBottom","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","position","overflow","background","concat","action","hover","bottom","left","right","top","visibility","maxWidth","name","useStyles","makeStyles","createStyles","padding","spacing","header","title","fontWeight","typography","fontWeightBold","TuneByProgram","tune","color","program","date","to","fields","slug","TunesByProgramSkeleton","Array","from","_","index","key","TunesByProgram","playlist","arr","getVal","vals","set","Set","val","indexOf","marginRight","TextSpan","DisplayOnScreen","onSeem","margin","once","useInView","rootMargin","triggerOnce","inView","LazyViewer","programs","divisor","dividedItems","sortProgram","reduce","accum","curr","filtered","getPlaylistLength","push","useDividedPrograms","renderItems","d","i","v","BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","SelectorsPage","selectors","titles","initialTab","useParseHash","state","selector","undefined","tab","setTab","updater","setUpdateHeight","onItemClicked","useHash","window","scrollTo","tabs","Tabs","onChange","event","newTab","scrollButtons","aria-label","label","onChangeIndex","resistance","animateHeight","updateHeight","TabPane","disableGutters","Jumbotron","Section","Article","List","ListItem","button","onClick","ListItemText","Typography","footer","NavigationBox","alignItems","flexShrink","flexDirection","flexGrow","avatarContainer","nationLabel","nationColor","getContrastText","TuneSkeleton","avatarClass","useAvatarStyles","avatar","src","Tune","getNationColor","useGetNationColor","nation","youtube","href","target","rel","indexInWeek","corner","artist","year"],"mappings":"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","file":"component---src-pages-selectors-tsx-bdc4d91e9d8180758167.js","sourcesContent":["import * as React from 'react';\nimport { useAppState } from '../gatsby-theme-aoi-top-layout/utils/AppStateContext';\nimport { Maybe, Program, ProgramPlaylist } from '../../graphql-types';\n\n/** usage\n * const sorter = useSorter();\n * programs.sort((a, b) => sorter(a.week - b.week))\n */\nexport default function useSorter() {\n  const { sort } = useAppState();\n  return React.useCallback((value: number) => (sort === 'older' ? value : -value), [sort]);\n}\n\nexport function useSortProgram() {\n  const sorter = useSorter();\n  return (a: Maybe<Pick<Program, 'week'>> | undefined, b: Maybe<Pick<Program, 'week'>> | undefined) =>\n    sorter((a?.week ?? 0) - (b?.week ?? 0));\n}\n\nexport function useSortProgramNode() {\n  const sorter = useSorter();\n  return (a: { node: Maybe<Pick<Program, 'week'>> }, b: { node: Maybe<Pick<Program, 'week'>> }) =>\n    sorter((a?.node?.week ?? 0) - (b?.node?.week ?? 0));\n}\n\nexport function useSortPlaylist() {\n  const sorter = useSorter();\n  return (\n    a: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined,\n    b: Maybe<Pick<ProgramPlaylist, 'week' | 'indexInWeek'>> | undefined\n  ) => sorter((a?.week ?? 0) - (b?.week ?? 0) || (a?.indexInWeek ?? 0) - (b?.indexInWeek ?? 0));\n}\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { removeMultiple } from '../removeMultiple';\nimport { AllSelectorsQuery } from '../../../graphql-types';\n\nexport interface CategoryItem {\n  fieldValue: string;\n  edges: AllSelectorsQuery['allProgram']['group'][number]['edges'][number][];\n  totalCount: number;\n}\n\nexport function useAllSelectors(): CategoryItem[] {\n  const data = useStaticQuery<AllSelectorsQuery>(graphql`\n    query AllSelectors {\n      allProgram(filter: { playlist: { elemMatch: { selector: { regex: \"/^(?!.*草野マサムネ).*$/\" } } } }) {\n        group(field: playlist___selector) {\n          fieldValue\n          totalCount\n          edges {\n            node {\n              id\n              week\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              fields {\n                slug\n              }\n              playlist {\n                id\n                indexInWeek\n                title\n                artist {\n                  name\n                }\n                year\n                nation\n                selector\n                youtube\n                corner\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return React.useMemo(() => {\n    return data.allProgram.group\n      .filter((group) => group.fieldValue !== '草野マサムネ')\n      .map((group) => {\n        const edges = removeMultiple(group.edges, ({ node }) => node.id);\n        return {\n          fieldValue: group.fieldValue ?? 'selector',\n          edges,\n          totalCount: group.totalCount,\n        };\n      })\n      .sort((a, b) => b.totalCount - a.totalCount || b.edges.length - a.edges.length);\n  }, [data]);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport Tune, { TuneSkeleton, TuneProps } from './Tune';\nimport TextSpan from './TextSpan';\nimport { Maybe, Program } from '../../graphql-types';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1, 0),\n    },\n    header: {\n      padding: theme.spacing(1),\n    },\n    title: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  })\n);\n\nexport interface TunesByProgramProps {\n  program: Maybe<\n    Pick<Program, 'id' | 'week' | 'date' | 'fields' | 'title'> & {\n      playlist: TuneProps['tune'][];\n    }\n  >;\n}\n\nfunction TunesByProgram({ program }: TunesByProgramProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>第{program?.week}回</TextSpan>\n          <TextSpan>{program?.date}</TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\">\n          <AppLink to={program?.fields?.slug ?? '#'}>{program?.title}</AppLink>\n        </Typography>\n      </div>\n      <div>{program?.playlist?.map((tune) => <Tune key={tune?.id} tune={tune} />) ?? null}</div>\n    </div>\n  );\n}\n\nexport default TunesByProgram;\n\ninterface TuneByProgramProps {\n  tune: Maybe<\n    TuneProps['tune'] & {\n      program: Maybe<Pick<Program, 'week' | 'date' | 'fields' | 'title'>>;\n    }\n  >;\n}\n\nexport function TuneByProgram({ tune }: TuneByProgramProps) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>第{tune?.program?.week}回</TextSpan>\n          <TextSpan>{tune?.program?.date}</TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\">\n          <AppLink to={tune?.program?.fields?.slug ?? '#'}>{tune?.program?.title}</AppLink>\n        </Typography>\n      </div>\n      <div>\n        <Tune tune={tune} />\n      </div>\n    </div>\n  );\n}\n\nexport function TunesByProgramSkeleton() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>\n            <Skeleton width={40} />\n          </TextSpan>\n          <TextSpan>\n            <Skeleton width={60} />\n          </TextSpan>\n        </Typography>\n        <Typography className={classes.title} variant=\"body1\" color=\"secondary\">\n          <Skeleton width={260} />\n        </Typography>\n      </div>\n      <div>{Array.from({ length: 4 }).map((_, index) => <TuneSkeleton key={index} />) ?? null}</div>\n    </div>\n  );\n}\n","export function removeMultiple<T>(arr: T[], getVal: (item: T) => unknown): T[] {\n  const vals = arr.map(getVal);\n  const set = new Set(vals);\n  return Array.from(set).map((val) => arr[vals.indexOf(val)]);\n}\n","import * as React from 'react';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      marginRight: theme.spacing(0.5),\n      display: 'inline-block',\n    },\n  })\n);\n\ntype Props = {\n  children?: React.ReactNode | null;\n} & Exclude<TypographyProps, 'children'>;\n\nfunction TextSpan({ children, ...props }: Props) {\n  const classes = useStyles();\n  if (!children) return null;\n  return (\n    <Typography className={classes.root} component=\"span\" {...props} variant={props.variant ?? 'inherit'}>\n      {children}\n    </Typography>\n  );\n}\n\nexport default TextSpan;\n","import * as React from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { TuneProps } from './Tune';\nimport TunesByProgram, { TunesByProgramSkeleton, TunesByProgramProps } from './TunesByProgram';\nimport { useDividedPrograms } from '../utils/useDividedArray';\n\ninterface DisplayOnScreenProps {\n  children: React.ReactNode;\n  margin?: number;\n  once?: boolean;\n  onSeem?: (inView?: boolean) => void;\n}\n\nfunction DisplayOnScreen({ children, onSeem, margin = 0, once = true }: DisplayOnScreenProps) {\n  const [ref, inView] = useInView({\n    rootMargin: `${margin}px`,\n    triggerOnce: once,\n  });\n  React.useEffect(() => {\n    if (inView && onSeem) {\n      onSeem(inView);\n    }\n  }, [inView, onSeem]);\n\n  return (\n    <div ref={ref}>\n      {inView ? (\n        children\n      ) : (\n        <div>\n          <TunesByProgramSkeleton />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface Props {\n  programs: TunesByProgramProps['program'][];\n  divisor?: number;\n  filter?: (tune: TuneProps['tune']) => boolean;\n  onSeem?: (inView?: boolean) => void;\n}\n\nfunction LazyViewer({ programs, onSeem, filter = () => true, divisor = 15 }: Props) {\n  const dividedItems = useDividedPrograms(programs, divisor, filter);\n  const renderItems = React.useMemo(() => {\n    return dividedItems.map((d, i) =>\n      i === 0 ? (\n        <div key={i}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v?.id} />\n          ))}\n        </div>\n      ) : (\n        <DisplayOnScreen key={i} margin={40} onSeem={onSeem}>\n          {d.map((v) => (\n            <TunesByProgram program={v} key={v?.id} />\n          ))}\n        </DisplayOnScreen>\n      )\n    );\n  }, [dividedItems, onSeem]);\n  return <div>{renderItems}</div>;\n}\n\nexport default LazyViewer;\n","import * as React from 'react';\nimport { TuneProps } from '../components/Tune';\nimport { TunesByProgramProps } from '../components/TunesByProgram';\nimport { useSortProgram } from './useSorter';\n\nexport default function useDividedArray<T>(items: T[], divisor: number) {\n  return React.useMemo(() => {\n    if (items.length <= divisor) {\n      return [items];\n    } else {\n      // ex. length = 105, divisor = 20, result = 6\n      const result = Math.ceil(items.length / divisor);\n      return Array.from({ length: result }, (d, i) => {\n        return items.slice(i * divisor, (i + 1) * divisor);\n      });\n    }\n  }, [items, divisor]);\n}\n\nexport function useDividedPrograms<T extends TunesByProgramProps['program']>(\n  programs: T[],\n  divisor: number,\n  filter: (tune: TuneProps['tune']) => boolean = () => true\n): T[][] {\n  const sortProgram = useSortProgram();\n  return React.useMemo(() => {\n    return programs.sort(sortProgram).reduce<T[][]>((accum, curr, index) => {\n      const filtered = {\n        ...curr,\n        playlist: curr?.playlist?.filter(filter) ?? [],\n      };\n      if (index === 0) {\n        return [[filtered]];\n      }\n      if (getPlaylistLength(accum[accum.length - 1]) < divisor) {\n        accum[accum.length - 1].push(filtered);\n        return accum;\n      } else {\n        return [...accum, [filtered]];\n      }\n    }, []);\n  }, [programs, divisor, filter, sortProgram]);\n}\n\nfunction getPlaylistLength<T extends TunesByProgramProps['program']>(programs: T[]): number {\n  return programs.reduce((accum, curr) => (curr?.playlist ? accum + curr.playlist.length : accum), 0);\n}\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from '../layout/TabLayout';\nimport TabPane from '../layout/TabPane';\nimport Tab from '../components/MuiTab';\nimport Section, { SectionDivider } from '../components/Section';\nimport Article, { Paragraph } from '../components/Article';\nimport Jumbotron from '../components/Jumbotron';\nimport NavigationBox from '../components/NavigationBox';\nimport LazyViewer from '../components/LazyViewer';\nimport { AdInArticle } from '../components/Ads';\nimport { useAllSelectors } from '../utils/graphql-hooks/useAllSelectors';\nimport { useParseHash, useHash } from '../utils/useHash';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\ninterface WindowState {\n  selector?: string;\n}\n\nfunction SelectorsPage() {\n  const selectors = useAllSelectors();\n  const titles = React.useMemo(() => ['', ...selectors.map(({ fieldValue }) => fieldValue)], [selectors]);\n  const initialTab = useParseHash<WindowState>(titles, (state) => state?.selector ?? undefined);\n  const [tab, setTab] = React.useState(initialTab);\n  const [updater, setUpdateHeight] = React.useState<null | (() => void)>(null);\n  const handleChange = (event: React.ChangeEvent<Record<string, unknown>>, newTab: number) => {\n    setTab(newTab);\n  };\n  const handleChangeIndex = (index: number) => {\n    setTab(index);\n  };\n  const onItemClicked = (index: number) => () => {\n    setTab(index);\n  };\n  const onSeem = React.useCallback(\n    (inView: boolean) => {\n      if (inView && updater) {\n        updater();\n      }\n    },\n    [updater]\n  );\n  const actionCallbacks = ({ updateHeight }: { updateHeight: () => void }) => {\n    setUpdateHeight(() => updateHeight);\n  };\n\n  useHash(tab, titles);\n  React.useEffect(() => {\n    if (typeof window === 'object') {\n      window.scrollTo(0, 0);\n    }\n  }, [tab]);\n\n  return (\n    <Layout\n      title=\"選曲者\"\n      tabs={\n        <Tabs value={tab} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\" aria-label=\"scrollable auto tabs example\">\n          <Tab label=\"概要\" />\n          {selectors.map((d) => (\n            <Tab key={d.fieldValue} label={`${d.fieldValue} ${d.totalCount}`} />\n          ))}\n        </Tabs>\n      }\n    >\n      <BindKeyboardSwipeableViews\n        index={tab}\n        onChangeIndex={handleChangeIndex}\n        resistance\n        animateHeight={typeof window === 'object'}\n        action={actionCallbacks}\n      >\n        <TabPane index={0} value={tab} disableGutters>\n          <Jumbotron title=\"選曲者\" />\n          <SectionDivider />\n          <Section>\n            <Article>\n              <Paragraph>ロック大陸漫遊記に登場したゲストやリクエストによる選曲を分類したページです。</Paragraph>\n              <List>\n                {selectors.map((selector, index) => (\n                  <ListItem key={index} button onClick={onItemClicked(index + 1)}>\n                    <ListItemText primary={selector.fieldValue} />\n                    <Typography variant=\"button\" component=\"span\">\n                      {selector.totalCount}曲/{selector.edges.length}回\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </Article>\n          </Section>\n        </TabPane>\n        {selectors.map((d, index) => (\n          <TabPane key={index} value={tab} index={index + 1} disableGutters>\n            <Jumbotron title={`${d.fieldValue}の選曲`} footer={`${d.totalCount}曲/${d.edges.length}回`} />\n            <SectionDivider />\n            <Section>\n              <LazyViewer\n                programs={d.edges.map((v) => v.node)}\n                divisor={15}\n                filter={(tune) => tune?.selector === d.fieldValue}\n                onSeem={onSeem}\n              />\n            </Section>\n          </TabPane>\n        ))}\n      </BindKeyboardSwipeableViews>\n      <SectionDivider />\n      <AdInArticle />\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default SelectorsPage;\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport AppLink from 'gatsby-theme-aoi/src/components/AppLink';\nimport TextSpan from '../TextSpan';\nimport { TuneIcon } from '../../icons';\nimport { useAvatarStyles } from '../../styles';\nimport { useGetNationColor } from '../../utils/getNationColor';\nimport { Maybe, ProgramPlaylist, Artist } from '../../../graphql-types';\n\ninterface StylesProps {\n  nationColor?: string;\n}\n\nconst useStyles = makeStyles<Theme, StylesProps>((theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 0),\n    },\n    left: {\n      display: 'flex',\n      padding: theme.spacing(0, 1),\n      alignItems: 'center',\n      flexShrink: 0,\n    },\n    right: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: theme.spacing(0, 1),\n      flexGrow: 1,\n    },\n    avatarContainer: {\n      position: 'relative',\n    },\n    nationLabel: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      padding: '0 .2em',\n      background: ({ nationColor }) => nationColor,\n      color: ({ nationColor }) => (nationColor ? theme.palette.getContrastText(nationColor) : undefined),\n    },\n  })\n);\n\nexport interface TuneProps {\n  tune: Maybe<\n    Pick<ProgramPlaylist, 'id' | 'title' | 'indexInWeek' | 'corner' | 'selector' | 'year' | 'youtube' | 'nation'> & {\n      artist?: Maybe<Pick<Artist, 'name'>>;\n    }\n  >;\n}\n\nfunction Tune({ tune }: TuneProps) {\n  const getNationColor = useGetNationColor();\n  const classes = useStyles({ nationColor: getNationColor(tune?.nation ?? '') });\n  const avatarClass = useAvatarStyles();\n  const avatar = (\n    <div className={classes.avatarContainer}>\n      <Avatar\n        className={avatarClass.avatar}\n        variant=\"square\"\n        src={tune?.youtube ? `https://i.ytimg.com/vi/${tune?.youtube}/0.jpg` : undefined}\n      >\n        <TuneIcon />\n      </Avatar>\n      <div className={classes.nationLabel}>\n        <Typography variant=\"caption\">{tune?.nation}</Typography>\n      </div>\n    </div>\n  );\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        {tune?.youtube ? (\n          <a href={`https://youtu.be/${tune?.youtube}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {avatar}\n          </a>\n        ) : (\n          avatar\n        )}\n      </div>\n      <div className={classes.right}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>{`M${tune?.indexInWeek}.`}</TextSpan>\n          <TextSpan>{tune?.corner}</TextSpan>\n          {tune?.selector && tune.selector !== '草野マサムネ' ? <TextSpan>{tune.selector}選曲</TextSpan> : null}\n        </Typography>\n        <div>\n          <Typography>{tune?.title}</Typography>\n          <Typography variant=\"body2\">\n            <TextSpan>\n              {tune?.artist?.name !== 'スピッツ' ? (\n                <AppLink to={`/artist/${tune?.artist?.name}`} color=\"inherit\">\n                  {tune?.artist?.name}\n                </AppLink>\n              ) : (\n                'スピッツ'\n              )}\n            </TextSpan>\n            <TextSpan color=\"textSecondary\">{`(${tune?.year})`}</TextSpan>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tune;\n\nexport function TuneSkeleton() {\n  const classes = useStyles({});\n  const avatarClass = useAvatarStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        <Avatar className={avatarClass.avatar} variant=\"square\" src={undefined}>\n          <TuneIcon />\n        </Avatar>\n      </div>\n      <div className={classes.right}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          <TextSpan>\n            <Skeleton width={100} />\n          </TextSpan>\n        </Typography>\n        <div>\n          <Typography>\n            <Skeleton width={160} />\n          </Typography>\n          <Typography variant=\"body2\">\n            <TextSpan>\n              <Skeleton width={100} />\n            </TextSpan>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}