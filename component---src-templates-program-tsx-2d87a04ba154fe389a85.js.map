{"version":3,"sources":["webpack:///./src/templates/program.tsx","webpack:///./src/utils/removeMultiple.ts"],"names":["BindKeyboardSwipeableViews","bindKeyboard","SwipeableViews","ProgramTemplate","arr","getVal","vals","set","data","pageContext","previous","next","initialIndex","artists","program","playlist","map","tune","artist","item","name","Set","Array","from","val","indexOf","tabs","key","title","Section","Tabs","indicatorColor","centered","value","Tab","label","Tune","id","ArtistItemContainer","PageNavigation","variant","filter","element","Boolean","drawerContents","DrawerNavigation","index","onChangeIndex","fields","slug","navigate","resistance","NavigationBox"],"mappings":"kTAmBA,IAAMA,EAA6BC,uBAAaC,KAoEjCC,UA7Df,YAAuD,YC1BrBC,EAAUC,EACpCC,EACAC,EDwBmBC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YACvBC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KACZC,EAAeF,EAAW,EAAI,EAU9BG,EAAU,UAAAL,EAAKM,eAAL,SAAcC,UCtCEX,EDwC1BI,EAAKM,QAAQC,SAASC,KAAI,SAACC,GAAD,OAAUA,aAAV,EAAUA,EAAMC,UCxCNb,EDyCpC,SAACc,GAAD,OAAUA,aAAV,EAAUA,EAAMC,MCxChBd,EAAOF,EAAIY,IAAIX,GACfE,EAAM,IAAIc,IAAIf,GACbgB,MAAMC,KAAKhB,GAAKS,KAAI,SAACQ,GAAD,OAASpB,EAAIE,EAAKmB,QAAQD,QDwCjD,GAEEE,EAAO,CACXhB,EAAW,gBAAC,IAAD,CAAoBiB,IAAKjB,EAASkB,MAAOT,KAAMT,IAAe,KACzE,uBAAKiB,IAAI,QACP,gBAAC,IAAD,CAAmBb,QAASN,EAAKM,UACjC,gBAACe,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAMC,eAAe,YAAYC,UAAQ,EAACC,MAAO,GAC/C,gBAACC,EAAA,EAAD,CAAKC,MAAM,MACX,gBAACD,EAAA,EAAD,CAAKC,MAAM,QAEb,qCACG3B,EAAKM,eADR,iBACG,EAAcC,gBADjB,aACG,EAAwBC,KAAI,SAACC,GAAD,OAC3B,gBAACmB,EAAA,EAAD,CAAMT,IAAKV,aAAF,EAAEA,EAAMoB,GAAIpB,KAAMA,SAIjC,gBAACY,EAAA,EAAD,MACA,gBAAC,IAAD,MACA,gBAACA,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,KACE,gBAACS,EAAA,EAAD,CAAqBV,MAAM,WAAWf,QAASA,KAEjD,gBAACgB,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,KACE,gBAACU,EAAA,EAAD,CAAgBC,QAAQ,UAAU/B,YAAaA,MAGnDE,EAAO,gBAAC,IAAD,CAAoBgB,IAAKhB,EAAKiB,MAAOT,KAAMR,IAAW,MAC7D8B,QAAO,SAACC,GAAD,OAAqCC,QAAQD,MACtD,OACE,gBAAC,IAAD,CAAQd,MAAK,UAAEpB,EAAKM,eAAP,aAAE,EAAcc,MAAOgB,eAAgB,gBAACC,EAAA,EAAD,CAAkBpC,YAAaA,EAAa+B,QAAQ,aACtG,gBAACxC,EAAD,CAA4B8C,MAAOlC,EAAcmC,cA/C3B,SAACD,GAAkB,QACvCA,IAAUlC,IACVD,SAAQA,GAAJ,UAAIA,EAAMqC,cAAV,OAAI,EAAcC,MAAQH,IAAUlC,EAAe,GACzDsC,mBAASvC,EAAKqC,OAAOC,MAEnBvC,SAAYA,GAAJ,UAAIA,EAAUsC,cAAd,OAAI,EAAkBC,MAAQH,IAAUlC,EAAe,GACjEsC,mBAASxC,EAASsC,OAAOC,QAyC0DE,YAAU,GAC1FzB,GAEH,gBAACG,EAAA,EAAD,MACA,gBAACA,EAAA,EAAD,KACE,gBAACuB,EAAA,EAAD","file":"component---src-templates-program-tsx-2d87a04ba154fe389a85.js","sourcesContent":["import * as React from 'react';\nimport { graphql, navigate } from 'gatsby';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport { bindKeyboard } from 'react-swipeable-views-utils';\nimport Layout from '../layout';\nimport Section, { SectionDivider } from '../components/Section';\nimport { ProgramPageHeader } from '../components/PageHeader';\nimport Tune from '../components/Tune';\nimport ArtistItemContainer from '../components/ArtistItemContainer';\nimport PageNavigation from '../components/PageNavigation';\nimport DrawerNavigation from '../components/DrawerNavigation';\nimport NavigationBox from '../components/NavigationBox';\nimport { AdInArticle } from '../components/Ads';\nimport { ProgramTonarinoTab } from '../components/TonarinoTab';\nimport { removeMultiple } from '../utils/removeMultiple';\nimport { ProgramTemplateQuery, SitePageContext } from '../../graphql-types';\n\nconst BindKeyboardSwipeableViews = bindKeyboard(SwipeableViews);\n\ninterface Props {\n  data: ProgramTemplateQuery;\n  pageContext: SitePageContext;\n}\n\nfunction ProgramTemplate({ data, pageContext }: Props) {\n  const { previous, next } = pageContext;\n  const initialIndex = previous ? 1 : 0;\n  const handleChangeIndex = (index: number) => {\n    if (index === initialIndex) return;\n    if (next && next?.fields?.slug && index === initialIndex + 1) {\n      navigate(next.fields.slug);\n    }\n    if (previous && previous?.fields?.slug && index === initialIndex - 1) {\n      navigate(previous.fields.slug);\n    }\n  };\n  const artists = data.program?.playlist\n    ? removeMultiple(\n        data.program.playlist.map((tune) => tune?.artist),\n        (item) => item?.name\n      )\n    : [];\n\n  const tabs = [\n    previous ? <ProgramTonarinoTab key={previous.title} item={previous} /> : null,\n    <div key=\"main\">\n      <ProgramPageHeader program={data.program} />\n      <SectionDivider />\n      <Section>\n        <Tabs indicatorColor=\"secondary\" centered value={0}>\n          <Tab label=\"曲\" />\n          <Tab label=\"詳細\" />\n        </Tabs>\n        <div>\n          {data.program?.playlist?.map((tune) => (\n            <Tune key={tune?.id} tune={tune} />\n          ))}\n        </div>\n      </Section>\n      <SectionDivider />\n      <AdInArticle />\n      <SectionDivider />\n      <Section>\n        <ArtistItemContainer title=\"登場アーティスト\" artists={artists} />\n      </Section>\n      <SectionDivider />\n      <Section>\n        <PageNavigation variant=\"program\" pageContext={pageContext} />\n      </Section>\n    </div>,\n    next ? <ProgramTonarinoTab key={next.title} item={next} /> : null,\n  ].filter((element): element is JSX.Element => Boolean(element));\n  return (\n    <Layout title={data.program?.title} drawerContents={<DrawerNavigation pageContext={pageContext} variant=\"program\" />}>\n      <BindKeyboardSwipeableViews index={initialIndex} onChangeIndex={handleChangeIndex} resistance>\n        {tabs}\n      </BindKeyboardSwipeableViews>\n      <SectionDivider />\n      <Section>\n        <NavigationBox />\n      </Section>\n    </Layout>\n  );\n}\n\nexport default ProgramTemplate;\n\nexport const query = graphql`\n  query ProgramTemplate($slug: String!) {\n    program(fields: { slug: { eq: $slug } }) {\n      id\n      date(formatString: \"YYYY-MM-DD\")\n      subtitle\n      title\n      week\n      year\n      guests\n      categories\n      fields {\n        image\n      }\n      playlist {\n        artist {\n          name\n          image\n          programCount\n          tunesCount\n        }\n        corner\n        id\n        index\n        indexInWeek\n        label\n        kana\n        nation\n        selector\n        title\n        year\n        week\n        youtube\n      }\n    }\n  }\n`;\n","export function removeMultiple<T>(arr: T[], getVal: (item: T) => unknown): T[] {\n  const vals = arr.map(getVal);\n  const set = new Set(vals);\n  return Array.from(set).map((val) => arr[vals.indexOf(val)]);\n}\n"],"sourceRoot":""}