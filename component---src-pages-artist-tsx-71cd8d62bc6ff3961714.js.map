{"version":3,"sources":["webpack:///./src/utils/graphql-hooks/useAllPrograms.tsx","webpack:///./src/pages/artist.tsx"],"names":["useAllTunes","console","log","programs","data","React","allProgram","edges","map","node","useAllPrograms","reduce","accum","curr","playlist","ArtistPage","useLocation","artists","allTunes","existedIndex","d","indexOf","artist","kana","nation","push","useAllArtists","filter","length","index","current","setArtist","_onItemClicked","title","List","ListItem","key","button","selected","onClick","ListItemText","primary"],"mappings":"ulBAgDO,SAASA,IACdC,QAAQC,IAAI,eACZ,IAAMC,EA7CO,WACbF,QAAQC,IAAI,kBACZ,IAAME,EAAO,OAsCb,OAAOC,WAAc,kBAAMD,EAAKE,WAAWC,MAAMC,KAAI,qBAAGC,UAAkB,IAKzDC,GACjB,OAAOL,WACL,kBAAMF,EAASQ,QAAO,SAACC,EAAOC,GAAR,kBAAqBD,GAArB,EAA+BC,EAAKC,aAAW,MACrE,ICJWC,UAjCf,WACmBC,wBAAjB,IAEMC,EDsCD,WACLhB,QAAQC,IAAI,iBACZ,IAAMgB,EAAWlB,IACjB,OAAOK,WACL,kBACEa,EAASP,QAAqB,SAACC,EAAOC,GACpC,IAAMM,EAAeP,EAAMJ,KAAI,SAAAY,GAAC,OAAIA,EAAE,MAAIC,QAAQR,EAAKS,QACvD,OAAIH,EAAe,EACjB,YAAWP,GAAX,CAAkB,CAACC,EAAKS,OAAQT,EAAKU,KAAMV,EAAKW,OAAQ,CAACX,OAEzDD,EAAMO,GAAc,GAAGM,KAAKZ,GACrBD,KAER,MACL,ICrDiBc,GAEhBC,QAAO,SAAAL,GAAM,OAAyB,IAArBA,EAAO,GAAGM,UAC3BD,QAAO,SAACL,EAAQO,GAAT,OAAmBA,EAAQ,MACrC5B,QAAQC,IAAIe,GANQ,MAOSZ,WAAe,IAArCyB,EAPa,KAOJC,EAPI,KAQdC,EAAiB,SAACV,GAAD,OAAwB,WAC7CS,EAAUT,EAAO,MAMnB,OAJAjB,aAAgB,WACdJ,QAAQC,IAAI,eAEX,CAAC4B,IAEF,gBAAC,IAAD,CAAQG,MAAOH,GACb,gBAACI,EAAA,EAAD,KACGjB,EAAQT,KAAI,SAACc,EAAQO,GAAT,OACX,gBAACM,EAAA,EAAD,CACEC,IAAKP,EACLQ,QAAM,EACNC,SAAUR,IAAYR,EAAO,GAC7BiB,QAASP,EAAeV,IAExB,gBAACkB,EAAA,EAAD,CAAcC,QAASnB,EAAO,a","file":"component---src-pages-artist-tsx-71cd8d62bc6ff3961714.js","sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { QueriedProgram, ArtistItem } from '../../types';\nimport { AllDataQuery, ProgramPlaylist } from '../../../graphql-types';\n\nexport default function useAllPrograms(): QueriedProgram[] {\n  console.log('useAllPrograms');\n  const data = useStaticQuery<AllDataQuery>(graphql`\n    query {\n      allProgram(sort: { fields: week, order: ASC }) {\n        edges {\n          node {\n            id\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            categories\n            fields {\n              slug\n            }\n            guests\n            playlist {\n              artist\n              corner\n              id\n              indexInWeek\n              index\n              kana\n              label\n              name\n              nation\n              producer\n              selector\n              title\n              week\n              year\n              youtube\n            }\n            subtitle\n            week\n            year\n          }\n        }\n      }\n    }\n  `);\n  return React.useMemo(() => data.allProgram.edges.map(({ node }) => node), []);\n}\n\nexport function useAllTunes(): ProgramPlaylist[] {\n  console.log('useAllTunes');\n  const programs = useAllPrograms();\n  return React.useMemo(\n    () => programs.reduce((accum, curr) => [...accum, ...curr.playlist], []),\n    []\n  );\n}\n\nexport function useAllArtists(): ArtistItem[] {\n  console.log('useAllArtists');\n  const allTunes = useAllTunes();\n  return React.useMemo(\n    () =>\n      allTunes.reduce<ArtistItem[]>((accum, curr) => {\n        const existedIndex = accum.map(d => d[0]).indexOf(curr.artist);\n        if (existedIndex < 0) {\n          return [...accum, [curr.artist, curr.kana, curr.nation, [curr]]];\n        } else {\n          accum[existedIndex][3].push(curr);\n          return accum;\n        }\n      }, []),\n    []\n  );\n}\n","import * as React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n//import Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useLocation } from '@reach/router';\nimport Layout from '../components/TabPageLayout';\nimport { useAllArtists } from '../utils/graphql-hooks/useAllPrograms';\nimport { ArtistItem } from '../types';\n/*\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SwipeableView from 'react-swipeable-views';\n*/\n\nfunction ArtistPage() {\n  const location = useLocation();\n  const allArtists = useAllArtists();\n  const artists = allArtists\n    .filter(artist => artist[3].length === 1)\n    .filter((artist, index) => index < 20);\n  console.log(artists);\n  const [current, setArtist] = React.useState('');\n  const _onItemClicked = (artist: ArtistItem) => () => {\n    setArtist(artist[0]);\n  };\n  React.useEffect(() => {\n    console.log('useEffect');\n    //window.location.search = `name=${current}`;\n  }, [current]);\n  return (\n    <Layout title={current}>\n      <List>\n        {artists.map((artist, index) => (\n          <ListItem\n            key={index}\n            button\n            selected={current === artist[0]}\n            onClick={_onItemClicked(artist)}\n          >\n            <ListItemText primary={artist[0]} />\n          </ListItem>\n        ))}\n      </List>\n    </Layout>\n  );\n}\n\nexport default ArtistPage;\n"],"sourceRoot":""}